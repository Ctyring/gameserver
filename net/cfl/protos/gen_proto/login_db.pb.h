// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: login_db.proto
// Protobuf C++ Version: 5.29.5

#ifndef login_5fdb_2eproto_2epb_2eh
#define login_5fdb_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029005
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_login_5fdb_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_login_5fdb_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_login_5fdb_2eproto;
class DBActivities;
struct DBActivitiesDefaultTypeInternal;
extern DBActivitiesDefaultTypeInternal _DBActivities_default_instance_;
class DBActivityItem;
struct DBActivityItemDefaultTypeInternal;
extern DBActivityItemDefaultTypeInternal _DBActivityItem_default_instance_;
class DBBagItem;
struct DBBagItemDefaultTypeInternal;
extern DBBagItemDefaultTypeInternal _DBBagItem_default_instance_;
class DBBagItems;
struct DBBagItemsDefaultTypeInternal;
extern DBBagItemsDefaultTypeInternal _DBBagItems_default_instance_;
class DBChapterItem;
struct DBChapterItemDefaultTypeInternal;
extern DBChapterItemDefaultTypeInternal _DBChapterItem_default_instance_;
class DBCopies;
struct DBCopiesDefaultTypeInternal;
extern DBCopiesDefaultTypeInternal _DBCopies_default_instance_;
class DBCopyItem;
struct DBCopyItemDefaultTypeInternal;
extern DBCopyItemDefaultTypeInternal _DBCopyItem_default_instance_;
class DBCounterItem;
struct DBCounterItemDefaultTypeInternal;
extern DBCounterItemDefaultTypeInternal _DBCounterItem_default_instance_;
class DBCounters;
struct DBCountersDefaultTypeInternal;
extern DBCountersDefaultTypeInternal _DBCounters_default_instance_;
class DBEquipItem;
struct DBEquipItemDefaultTypeInternal;
extern DBEquipItemDefaultTypeInternal _DBEquipItem_default_instance_;
class DBEquipments;
struct DBEquipmentsDefaultTypeInternal;
extern DBEquipmentsDefaultTypeInternal _DBEquipments_default_instance_;
class DBFriendItem;
struct DBFriendItemDefaultTypeInternal;
extern DBFriendItemDefaultTypeInternal _DBFriendItem_default_instance_;
class DBFriends;
struct DBFriendsDefaultTypeInternal;
extern DBFriendsDefaultTypeInternal _DBFriends_default_instance_;
class DBGemItem;
struct DBGemItemDefaultTypeInternal;
extern DBGemItemDefaultTypeInternal _DBGemItem_default_instance_;
class DBGems;
struct DBGemsDefaultTypeInternal;
extern DBGemsDefaultTypeInternal _DBGems_default_instance_;
class DBMailItem;
struct DBMailItemDefaultTypeInternal;
extern DBMailItemDefaultTypeInternal _DBMailItem_default_instance_;
class DBMails;
struct DBMailsDefaultTypeInternal;
extern DBMailsDefaultTypeInternal _DBMails_default_instance_;
class DBMountItem;
struct DBMountItemDefaultTypeInternal;
extern DBMountItemDefaultTypeInternal _DBMountItem_default_instance_;
class DBMounts;
struct DBMountsDefaultTypeInternal;
extern DBMountsDefaultTypeInternal _DBMounts_default_instance_;
class DBPartnerItem;
struct DBPartnerItemDefaultTypeInternal;
extern DBPartnerItemDefaultTypeInternal _DBPartnerItem_default_instance_;
class DBPartners;
struct DBPartnersDefaultTypeInternal;
extern DBPartnersDefaultTypeInternal _DBPartners_default_instance_;
class DBPetItem;
struct DBPetItemDefaultTypeInternal;
extern DBPetItemDefaultTypeInternal _DBPetItem_default_instance_;
class DBPets;
struct DBPetsDefaultTypeInternal;
extern DBPetsDefaultTypeInternal _DBPets_default_instance_;
class DBRoleData;
struct DBRoleDataDefaultTypeInternal;
extern DBRoleDataDefaultTypeInternal _DBRoleData_default_instance_;
class DBRoleLoginAck;
struct DBRoleLoginAckDefaultTypeInternal;
extern DBRoleLoginAckDefaultTypeInternal _DBRoleLoginAck_default_instance_;
class DBSkillItem;
struct DBSkillItemDefaultTypeInternal;
extern DBSkillItemDefaultTypeInternal _DBSkillItem_default_instance_;
class DBSkills;
struct DBSkillsDefaultTypeInternal;
extern DBSkillsDefaultTypeInternal _DBSkills_default_instance_;
class DBTaskItem;
struct DBTaskItemDefaultTypeInternal;
extern DBTaskItemDefaultTypeInternal _DBTaskItem_default_instance_;
class DBTasks;
struct DBTasksDefaultTypeInternal;
extern DBTasksDefaultTypeInternal _DBTasks_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum BindType : int {
  BIND_NONE = 0,
  BIND_YES = 1,
  BindType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  BindType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool BindType_IsValid(int value);
extern const uint32_t BindType_internal_data_[];
constexpr BindType BindType_MIN = static_cast<BindType>(0);
constexpr BindType BindType_MAX = static_cast<BindType>(1);
constexpr int BindType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
BindType_descriptor();
template <typename T>
const std::string& BindType_Name(T value) {
  static_assert(std::is_same<T, BindType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to BindType_Name().");
  return BindType_Name(static_cast<BindType>(value));
}
template <>
inline const std::string& BindType_Name(BindType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BindType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool BindType_Parse(absl::string_view name, BindType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BindType>(
      BindType_descriptor(), name, value);
}
enum ItemStatus : int {
  ITEM_NORMAL = 0,
  ITEM_DELETED = 1,
  ItemStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ItemStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ItemStatus_IsValid(int value);
extern const uint32_t ItemStatus_internal_data_[];
constexpr ItemStatus ItemStatus_MIN = static_cast<ItemStatus>(0);
constexpr ItemStatus ItemStatus_MAX = static_cast<ItemStatus>(1);
constexpr int ItemStatus_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
ItemStatus_descriptor();
template <typename T>
const std::string& ItemStatus_Name(T value) {
  static_assert(std::is_same<T, ItemStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ItemStatus_Name().");
  return ItemStatus_Name(static_cast<ItemStatus>(value));
}
template <>
inline const std::string& ItemStatus_Name(ItemStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ItemStatus_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool ItemStatus_Parse(absl::string_view name, ItemStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ItemStatus>(
      ItemStatus_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class DBTaskItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBTaskItem) */ {
 public:
  inline DBTaskItem() : DBTaskItem(nullptr) {}
  ~DBTaskItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBTaskItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBTaskItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBTaskItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBTaskItem(const DBTaskItem& from) : DBTaskItem(nullptr, from) {}
  inline DBTaskItem(DBTaskItem&& from) noexcept
      : DBTaskItem(nullptr, std::move(from)) {}
  inline DBTaskItem& operator=(const DBTaskItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBTaskItem& operator=(DBTaskItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBTaskItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBTaskItem* internal_default_instance() {
    return reinterpret_cast<const DBTaskItem*>(
        &_DBTaskItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(DBTaskItem& a, DBTaskItem& b) { a.Swap(&b); }
  inline void Swap(DBTaskItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBTaskItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBTaskItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBTaskItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBTaskItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBTaskItem& from) { DBTaskItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBTaskItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBTaskItem"; }

 protected:
  explicit DBTaskItem(::google::protobuf::Arena* arena);
  DBTaskItem(::google::protobuf::Arena* arena, const DBTaskItem& from);
  DBTaskItem(::google::protobuf::Arena* arena, DBTaskItem&& from) noexcept
      : DBTaskItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kTaskIdFieldNumber = 2,
    kStatusFieldNumber = 3,
    kProgressFieldNumber = 4,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint32 task_id = 2;
  void clear_task_id() ;
  ::uint32_t task_id() const;
  void set_task_id(::uint32_t value);

  private:
  ::uint32_t _internal_task_id() const;
  void _internal_set_task_id(::uint32_t value);

  public:
  // int32 status = 3;
  void clear_status() ;
  ::int32_t status() const;
  void set_status(::int32_t value);

  private:
  ::int32_t _internal_status() const;
  void _internal_set_status(::int32_t value);

  public:
  // int32 progress = 4;
  void clear_progress() ;
  ::int32_t progress() const;
  void set_progress(::int32_t value);

  private:
  ::int32_t _internal_progress() const;
  void _internal_set_progress(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DBTaskItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBTaskItem& from_msg);
    ::uint64_t role_id_;
    ::uint32_t task_id_;
    ::int32_t status_;
    ::int32_t progress_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBSkillItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBSkillItem) */ {
 public:
  inline DBSkillItem() : DBSkillItem(nullptr) {}
  ~DBSkillItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBSkillItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBSkillItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBSkillItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBSkillItem(const DBSkillItem& from) : DBSkillItem(nullptr, from) {}
  inline DBSkillItem(DBSkillItem&& from) noexcept
      : DBSkillItem(nullptr, std::move(from)) {}
  inline DBSkillItem& operator=(const DBSkillItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBSkillItem& operator=(DBSkillItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBSkillItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBSkillItem* internal_default_instance() {
    return reinterpret_cast<const DBSkillItem*>(
        &_DBSkillItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(DBSkillItem& a, DBSkillItem& b) { a.Swap(&b); }
  inline void Swap(DBSkillItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBSkillItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBSkillItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBSkillItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBSkillItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBSkillItem& from) { DBSkillItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBSkillItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBSkillItem"; }

 protected:
  explicit DBSkillItem(::google::protobuf::Arena* arena);
  DBSkillItem(::google::protobuf::Arena* arena, const DBSkillItem& from);
  DBSkillItem(::google::protobuf::Arena* arena, DBSkillItem&& from) noexcept
      : DBSkillItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kSkillIdFieldNumber = 2,
    kLevelFieldNumber = 3,
    kKeyPosFieldNumber = 4,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint32 skill_id = 2;
  void clear_skill_id() ;
  ::uint32_t skill_id() const;
  void set_skill_id(::uint32_t value);

  private:
  ::uint32_t _internal_skill_id() const;
  void _internal_set_skill_id(::uint32_t value);

  public:
  // int32 level = 3;
  void clear_level() ;
  ::int32_t level() const;
  void set_level(::int32_t value);

  private:
  ::int32_t _internal_level() const;
  void _internal_set_level(::int32_t value);

  public:
  // int32 key_pos = 4;
  void clear_key_pos() ;
  ::int32_t key_pos() const;
  void set_key_pos(::int32_t value);

  private:
  ::int32_t _internal_key_pos() const;
  void _internal_set_key_pos(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DBSkillItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBSkillItem& from_msg);
    ::uint64_t role_id_;
    ::uint32_t skill_id_;
    ::int32_t level_;
    ::int32_t key_pos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBRoleData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBRoleData) */ {
 public:
  inline DBRoleData() : DBRoleData(nullptr) {}
  ~DBRoleData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBRoleData* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBRoleData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBRoleData(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBRoleData(const DBRoleData& from) : DBRoleData(nullptr, from) {}
  inline DBRoleData(DBRoleData&& from) noexcept
      : DBRoleData(nullptr, std::move(from)) {}
  inline DBRoleData& operator=(const DBRoleData& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBRoleData& operator=(DBRoleData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBRoleData& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBRoleData* internal_default_instance() {
    return reinterpret_cast<const DBRoleData*>(
        &_DBRoleData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(DBRoleData& a, DBRoleData& b) { a.Swap(&b); }
  inline void Swap(DBRoleData* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBRoleData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBRoleData* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBRoleData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBRoleData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBRoleData& from) { DBRoleData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBRoleData* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBRoleData"; }

 protected:
  explicit DBRoleData(::google::protobuf::Arena* arena);
  DBRoleData(::google::protobuf::Arena* arena, const DBRoleData& from);
  DBRoleData(::google::protobuf::Arena* arena, DBRoleData&& from) noexcept
      : DBRoleData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kActionFieldNumber = 12,
    kActionTimeFieldNumber = 13,
    kNameFieldNumber = 6,
    kAccountIdFieldNumber = 1,
    kRoleIdFieldNumber = 2,
    kCareerIdFieldNumber = 3,
    kLevelFieldNumber = 4,
    kExpFieldNumber = 5,
    kLangIdFieldNumber = 7,
    kVipLevelFieldNumber = 8,
    kFightValueFieldNumber = 10,
    kVipExpFieldNumber = 9,
    kCityCopyIdFieldNumber = 11,
    kCreateTimeFieldNumber = 14,
    kLogonTimeFieldNumber = 15,
    kLogoffTimeFieldNumber = 16,
    kGuildIdFieldNumber = 17,
    kChannelFieldNumber = 18,
    kOnlineTimeFieldNumber = 19,
  };
  // repeated int64 action = 12;
  int action_size() const;
  private:
  int _internal_action_size() const;

  public:
  void clear_action() ;
  ::int64_t action(int index) const;
  void set_action(int index, ::int64_t value);
  void add_action(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& action() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_action();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_action() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_action();

  public:
  // repeated int64 action_time = 13;
  int action_time_size() const;
  private:
  int _internal_action_time_size() const;

  public:
  void clear_action_time() ;
  ::int64_t action_time(int index) const;
  void set_action_time(int index, ::int64_t value);
  void add_action_time(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& action_time() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_action_time();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_action_time() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_action_time();

  public:
  // string name = 6;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // uint64 account_id = 1;
  void clear_account_id() ;
  ::uint64_t account_id() const;
  void set_account_id(::uint64_t value);

  private:
  ::uint64_t _internal_account_id() const;
  void _internal_set_account_id(::uint64_t value);

  public:
  // uint64 role_id = 2;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // int32 career_id = 3;
  void clear_career_id() ;
  ::int32_t career_id() const;
  void set_career_id(::int32_t value);

  private:
  ::int32_t _internal_career_id() const;
  void _internal_set_career_id(::int32_t value);

  public:
  // int32 level = 4;
  void clear_level() ;
  ::int32_t level() const;
  void set_level(::int32_t value);

  private:
  ::int32_t _internal_level() const;
  void _internal_set_level(::int32_t value);

  public:
  // int64 exp = 5;
  void clear_exp() ;
  ::int64_t exp() const;
  void set_exp(::int64_t value);

  private:
  ::int64_t _internal_exp() const;
  void _internal_set_exp(::int64_t value);

  public:
  // int32 lang_id = 7;
  void clear_lang_id() ;
  ::int32_t lang_id() const;
  void set_lang_id(::int32_t value);

  private:
  ::int32_t _internal_lang_id() const;
  void _internal_set_lang_id(::int32_t value);

  public:
  // int32 vip_level = 8;
  void clear_vip_level() ;
  ::int32_t vip_level() const;
  void set_vip_level(::int32_t value);

  private:
  ::int32_t _internal_vip_level() const;
  void _internal_set_vip_level(::int32_t value);

  public:
  // int64 fight_value = 10;
  void clear_fight_value() ;
  ::int64_t fight_value() const;
  void set_fight_value(::int64_t value);

  private:
  ::int64_t _internal_fight_value() const;
  void _internal_set_fight_value(::int64_t value);

  public:
  // int32 vip_exp = 9;
  void clear_vip_exp() ;
  ::int32_t vip_exp() const;
  void set_vip_exp(::int32_t value);

  private:
  ::int32_t _internal_vip_exp() const;
  void _internal_set_vip_exp(::int32_t value);

  public:
  // int32 city_copy_id = 11;
  void clear_city_copy_id() ;
  ::int32_t city_copy_id() const;
  void set_city_copy_id(::int32_t value);

  private:
  ::int32_t _internal_city_copy_id() const;
  void _internal_set_city_copy_id(::int32_t value);

  public:
  // uint64 create_time = 14;
  void clear_create_time() ;
  ::uint64_t create_time() const;
  void set_create_time(::uint64_t value);

  private:
  ::uint64_t _internal_create_time() const;
  void _internal_set_create_time(::uint64_t value);

  public:
  // uint64 logon_time = 15;
  void clear_logon_time() ;
  ::uint64_t logon_time() const;
  void set_logon_time(::uint64_t value);

  private:
  ::uint64_t _internal_logon_time() const;
  void _internal_set_logon_time(::uint64_t value);

  public:
  // uint64 logoff_time = 16;
  void clear_logoff_time() ;
  ::uint64_t logoff_time() const;
  void set_logoff_time(::uint64_t value);

  private:
  ::uint64_t _internal_logoff_time() const;
  void _internal_set_logoff_time(::uint64_t value);

  public:
  // uint64 guild_id = 17;
  void clear_guild_id() ;
  ::uint64_t guild_id() const;
  void set_guild_id(::uint64_t value);

  private:
  ::uint64_t _internal_guild_id() const;
  void _internal_set_guild_id(::uint64_t value);

  public:
  // int32 channel = 18;
  void clear_channel() ;
  ::int32_t channel() const;
  void set_channel(::int32_t value);

  private:
  ::int32_t _internal_channel() const;
  void _internal_set_channel(::int32_t value);

  public:
  // uint32 online_time = 19;
  void clear_online_time() ;
  ::uint32_t online_time() const;
  void set_online_time(::uint32_t value);

  private:
  ::uint32_t _internal_online_time() const;
  void _internal_set_online_time(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DBRoleData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 19, 0,
      39, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBRoleData& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> action_;
    ::google::protobuf::internal::CachedSize _action_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> action_time_;
    ::google::protobuf::internal::CachedSize _action_time_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::uint64_t account_id_;
    ::uint64_t role_id_;
    ::int32_t career_id_;
    ::int32_t level_;
    ::int64_t exp_;
    ::int32_t lang_id_;
    ::int32_t vip_level_;
    ::int64_t fight_value_;
    ::int32_t vip_exp_;
    ::int32_t city_copy_id_;
    ::uint64_t create_time_;
    ::uint64_t logon_time_;
    ::uint64_t logoff_time_;
    ::uint64_t guild_id_;
    ::int32_t channel_;
    ::uint32_t online_time_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBPetItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBPetItem) */ {
 public:
  inline DBPetItem() : DBPetItem(nullptr) {}
  ~DBPetItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBPetItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBPetItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBPetItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBPetItem(const DBPetItem& from) : DBPetItem(nullptr, from) {}
  inline DBPetItem(DBPetItem&& from) noexcept
      : DBPetItem(nullptr, std::move(from)) {}
  inline DBPetItem& operator=(const DBPetItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBPetItem& operator=(DBPetItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBPetItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBPetItem* internal_default_instance() {
    return reinterpret_cast<const DBPetItem*>(
        &_DBPetItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(DBPetItem& a, DBPetItem& b) { a.Swap(&b); }
  inline void Swap(DBPetItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBPetItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBPetItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBPetItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBPetItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBPetItem& from) { DBPetItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBPetItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBPetItem"; }

 protected:
  explicit DBPetItem(::google::protobuf::Arena* arena);
  DBPetItem(::google::protobuf::Arena* arena, const DBPetItem& from);
  DBPetItem(::google::protobuf::Arena* arena, DBPetItem&& from) noexcept
      : DBPetItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kGuidFieldNumber = 2,
    kPetIdFieldNumber = 3,
    kStrengthLvlFieldNumber = 4,
    kRefineLevelFieldNumber = 5,
    kStarLevelFieldNumber = 6,
    kIsUsingFieldNumber = 7,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint64 guid = 2;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // int32 pet_id = 3;
  void clear_pet_id() ;
  ::int32_t pet_id() const;
  void set_pet_id(::int32_t value);

  private:
  ::int32_t _internal_pet_id() const;
  void _internal_set_pet_id(::int32_t value);

  public:
  // int32 strength_lvl = 4;
  void clear_strength_lvl() ;
  ::int32_t strength_lvl() const;
  void set_strength_lvl(::int32_t value);

  private:
  ::int32_t _internal_strength_lvl() const;
  void _internal_set_strength_lvl(::int32_t value);

  public:
  // int32 refine_level = 5;
  void clear_refine_level() ;
  ::int32_t refine_level() const;
  void set_refine_level(::int32_t value);

  private:
  ::int32_t _internal_refine_level() const;
  void _internal_set_refine_level(::int32_t value);

  public:
  // int32 star_level = 6;
  void clear_star_level() ;
  ::int32_t star_level() const;
  void set_star_level(::int32_t value);

  private:
  ::int32_t _internal_star_level() const;
  void _internal_set_star_level(::int32_t value);

  public:
  // bool is_using = 7;
  void clear_is_using() ;
  bool is_using() const;
  void set_is_using(bool value);

  private:
  bool _internal_is_using() const;
  void _internal_set_is_using(bool value);

  public:
  // @@protoc_insertion_point(class_scope:DBPetItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBPetItem& from_msg);
    ::uint64_t role_id_;
    ::uint64_t guid_;
    ::int32_t pet_id_;
    ::int32_t strength_lvl_;
    ::int32_t refine_level_;
    ::int32_t star_level_;
    bool is_using_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBPartnerItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBPartnerItem) */ {
 public:
  inline DBPartnerItem() : DBPartnerItem(nullptr) {}
  ~DBPartnerItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBPartnerItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBPartnerItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBPartnerItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBPartnerItem(const DBPartnerItem& from) : DBPartnerItem(nullptr, from) {}
  inline DBPartnerItem(DBPartnerItem&& from) noexcept
      : DBPartnerItem(nullptr, std::move(from)) {}
  inline DBPartnerItem& operator=(const DBPartnerItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBPartnerItem& operator=(DBPartnerItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBPartnerItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBPartnerItem* internal_default_instance() {
    return reinterpret_cast<const DBPartnerItem*>(
        &_DBPartnerItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(DBPartnerItem& a, DBPartnerItem& b) { a.Swap(&b); }
  inline void Swap(DBPartnerItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBPartnerItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBPartnerItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBPartnerItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBPartnerItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBPartnerItem& from) { DBPartnerItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBPartnerItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBPartnerItem"; }

 protected:
  explicit DBPartnerItem(::google::protobuf::Arena* arena);
  DBPartnerItem(::google::protobuf::Arena* arena, const DBPartnerItem& from);
  DBPartnerItem(::google::protobuf::Arena* arena, DBPartnerItem&& from) noexcept
      : DBPartnerItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kGuidFieldNumber = 2,
    kPartnerIdFieldNumber = 3,
    kStrengthLvlFieldNumber = 4,
    kRefineLevelFieldNumber = 5,
    kStarLevelFieldNumber = 6,
    kSetPosFieldNumber = 7,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint64 guid = 2;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // int32 partner_id = 3;
  void clear_partner_id() ;
  ::int32_t partner_id() const;
  void set_partner_id(::int32_t value);

  private:
  ::int32_t _internal_partner_id() const;
  void _internal_set_partner_id(::int32_t value);

  public:
  // int32 strength_lvl = 4;
  void clear_strength_lvl() ;
  ::int32_t strength_lvl() const;
  void set_strength_lvl(::int32_t value);

  private:
  ::int32_t _internal_strength_lvl() const;
  void _internal_set_strength_lvl(::int32_t value);

  public:
  // int32 refine_level = 5;
  void clear_refine_level() ;
  ::int32_t refine_level() const;
  void set_refine_level(::int32_t value);

  private:
  ::int32_t _internal_refine_level() const;
  void _internal_set_refine_level(::int32_t value);

  public:
  // int32 star_level = 6;
  void clear_star_level() ;
  ::int32_t star_level() const;
  void set_star_level(::int32_t value);

  private:
  ::int32_t _internal_star_level() const;
  void _internal_set_star_level(::int32_t value);

  public:
  // int32 set_pos = 7;
  void clear_set_pos() ;
  ::int32_t set_pos() const;
  void set_set_pos(::int32_t value);

  private:
  ::int32_t _internal_set_pos() const;
  void _internal_set_set_pos(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DBPartnerItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBPartnerItem& from_msg);
    ::uint64_t role_id_;
    ::uint64_t guid_;
    ::int32_t partner_id_;
    ::int32_t strength_lvl_;
    ::int32_t refine_level_;
    ::int32_t star_level_;
    ::int32_t set_pos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBMountItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBMountItem) */ {
 public:
  inline DBMountItem() : DBMountItem(nullptr) {}
  ~DBMountItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBMountItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBMountItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBMountItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBMountItem(const DBMountItem& from) : DBMountItem(nullptr, from) {}
  inline DBMountItem(DBMountItem&& from) noexcept
      : DBMountItem(nullptr, std::move(from)) {}
  inline DBMountItem& operator=(const DBMountItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBMountItem& operator=(DBMountItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBMountItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBMountItem* internal_default_instance() {
    return reinterpret_cast<const DBMountItem*>(
        &_DBMountItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(DBMountItem& a, DBMountItem& b) { a.Swap(&b); }
  inline void Swap(DBMountItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBMountItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBMountItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBMountItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBMountItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBMountItem& from) { DBMountItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBMountItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBMountItem"; }

 protected:
  explicit DBMountItem(::google::protobuf::Arena* arena);
  DBMountItem(::google::protobuf::Arena* arena, const DBMountItem& from);
  DBMountItem(::google::protobuf::Arena* arena, DBMountItem&& from) noexcept
      : DBMountItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kGuidFieldNumber = 2,
    kMountIdFieldNumber = 3,
    kStrengthLvlFieldNumber = 4,
    kRefineLevelFieldNumber = 5,
    kStarLevelFieldNumber = 6,
    kIsUsingFieldNumber = 7,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint64 guid = 2;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // int32 mount_id = 3;
  void clear_mount_id() ;
  ::int32_t mount_id() const;
  void set_mount_id(::int32_t value);

  private:
  ::int32_t _internal_mount_id() const;
  void _internal_set_mount_id(::int32_t value);

  public:
  // int32 strength_lvl = 4;
  void clear_strength_lvl() ;
  ::int32_t strength_lvl() const;
  void set_strength_lvl(::int32_t value);

  private:
  ::int32_t _internal_strength_lvl() const;
  void _internal_set_strength_lvl(::int32_t value);

  public:
  // int32 refine_level = 5;
  void clear_refine_level() ;
  ::int32_t refine_level() const;
  void set_refine_level(::int32_t value);

  private:
  ::int32_t _internal_refine_level() const;
  void _internal_set_refine_level(::int32_t value);

  public:
  // int32 star_level = 6;
  void clear_star_level() ;
  ::int32_t star_level() const;
  void set_star_level(::int32_t value);

  private:
  ::int32_t _internal_star_level() const;
  void _internal_set_star_level(::int32_t value);

  public:
  // bool is_using = 7;
  void clear_is_using() ;
  bool is_using() const;
  void set_is_using(bool value);

  private:
  bool _internal_is_using() const;
  void _internal_set_is_using(bool value);

  public:
  // @@protoc_insertion_point(class_scope:DBMountItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBMountItem& from_msg);
    ::uint64_t role_id_;
    ::uint64_t guid_;
    ::int32_t mount_id_;
    ::int32_t strength_lvl_;
    ::int32_t refine_level_;
    ::int32_t star_level_;
    bool is_using_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBMailItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBMailItem) */ {
 public:
  inline DBMailItem() : DBMailItem(nullptr) {}
  ~DBMailItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBMailItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBMailItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBMailItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBMailItem(const DBMailItem& from) : DBMailItem(nullptr, from) {}
  inline DBMailItem(DBMailItem&& from) noexcept
      : DBMailItem(nullptr, std::move(from)) {}
  inline DBMailItem& operator=(const DBMailItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBMailItem& operator=(DBMailItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBMailItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBMailItem* internal_default_instance() {
    return reinterpret_cast<const DBMailItem*>(
        &_DBMailItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(DBMailItem& a, DBMailItem& b) { a.Swap(&b); }
  inline void Swap(DBMailItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBMailItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBMailItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBMailItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBMailItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBMailItem& from) { DBMailItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBMailItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBMailItem"; }

 protected:
  explicit DBMailItem(::google::protobuf::Arena* arena);
  DBMailItem(::google::protobuf::Arena* arena, const DBMailItem& from);
  DBMailItem(::google::protobuf::Arena* arena, DBMailItem&& from) noexcept
      : DBMailItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 6,
    kTitleFieldNumber = 9,
    kContentFieldNumber = 10,
    kItemsFieldNumber = 11,
    kRoleIdFieldNumber = 1,
    kGuidFieldNumber = 2,
    kGroupIdFieldNumber = 3,
    kTimeFieldNumber = 4,
    kSenderIdFieldNumber = 5,
    kMailTypeFieldNumber = 7,
    kStatusFieldNumber = 8,
  };
  // string sender = 6;
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string title = 9;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string content = 10;
  void clear_content() ;
  const std::string& content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* value);

  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(
      const std::string& value);
  std::string* _internal_mutable_content();

  public:
  // bytes items = 11;
  void clear_items() ;
  const std::string& items() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_items(Arg_&& arg, Args_... args);
  std::string* mutable_items();
  PROTOBUF_NODISCARD std::string* release_items();
  void set_allocated_items(std::string* value);

  private:
  const std::string& _internal_items() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_items(
      const std::string& value);
  std::string* _internal_mutable_items();

  public:
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint64 guid = 2;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // uint64 group_id = 3;
  void clear_group_id() ;
  ::uint64_t group_id() const;
  void set_group_id(::uint64_t value);

  private:
  ::uint64_t _internal_group_id() const;
  void _internal_set_group_id(::uint64_t value);

  public:
  // uint64 time = 4;
  void clear_time() ;
  ::uint64_t time() const;
  void set_time(::uint64_t value);

  private:
  ::uint64_t _internal_time() const;
  void _internal_set_time(::uint64_t value);

  public:
  // uint64 sender_id = 5;
  void clear_sender_id() ;
  ::uint64_t sender_id() const;
  void set_sender_id(::uint64_t value);

  private:
  ::uint64_t _internal_sender_id() const;
  void _internal_set_sender_id(::uint64_t value);

  public:
  // uint32 mail_type = 7;
  void clear_mail_type() ;
  ::uint32_t mail_type() const;
  void set_mail_type(::uint32_t value);

  private:
  ::uint32_t _internal_mail_type() const;
  void _internal_set_mail_type(::uint32_t value);

  public:
  // uint32 status = 8;
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DBMailItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 0,
      45, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBMailItem& from_msg);
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr content_;
    ::google::protobuf::internal::ArenaStringPtr items_;
    ::uint64_t role_id_;
    ::uint64_t guid_;
    ::uint64_t group_id_;
    ::uint64_t time_;
    ::uint64_t sender_id_;
    ::uint32_t mail_type_;
    ::uint32_t status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBGemItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBGemItem) */ {
 public:
  inline DBGemItem() : DBGemItem(nullptr) {}
  ~DBGemItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBGemItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBGemItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBGemItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBGemItem(const DBGemItem& from) : DBGemItem(nullptr, from) {}
  inline DBGemItem(DBGemItem&& from) noexcept
      : DBGemItem(nullptr, std::move(from)) {}
  inline DBGemItem& operator=(const DBGemItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBGemItem& operator=(DBGemItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBGemItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBGemItem* internal_default_instance() {
    return reinterpret_cast<const DBGemItem*>(
        &_DBGemItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(DBGemItem& a, DBGemItem& b) { a.Swap(&b); }
  inline void Swap(DBGemItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBGemItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBGemItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBGemItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBGemItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBGemItem& from) { DBGemItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBGemItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBGemItem"; }

 protected:
  explicit DBGemItem(::google::protobuf::Arena* arena);
  DBGemItem(::google::protobuf::Arena* arena, const DBGemItem& from);
  DBGemItem(::google::protobuf::Arena* arena, DBGemItem&& from) noexcept
      : DBGemItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kGuidFieldNumber = 2,
    kGemIdFieldNumber = 3,
    kStrengthLvlFieldNumber = 4,
    kRefineLevelFieldNumber = 5,
    kStarLevelFieldNumber = 6,
    kRefineExpFieldNumber = 7,
    kStarExpFieldNumber = 8,
    kPosFieldNumber = 9,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint64 guid = 2;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // int32 gem_id = 3;
  void clear_gem_id() ;
  ::int32_t gem_id() const;
  void set_gem_id(::int32_t value);

  private:
  ::int32_t _internal_gem_id() const;
  void _internal_set_gem_id(::int32_t value);

  public:
  // int32 strength_lvl = 4;
  void clear_strength_lvl() ;
  ::int32_t strength_lvl() const;
  void set_strength_lvl(::int32_t value);

  private:
  ::int32_t _internal_strength_lvl() const;
  void _internal_set_strength_lvl(::int32_t value);

  public:
  // int32 refine_level = 5;
  void clear_refine_level() ;
  ::int32_t refine_level() const;
  void set_refine_level(::int32_t value);

  private:
  ::int32_t _internal_refine_level() const;
  void _internal_set_refine_level(::int32_t value);

  public:
  // int32 star_level = 6;
  void clear_star_level() ;
  ::int32_t star_level() const;
  void set_star_level(::int32_t value);

  private:
  ::int32_t _internal_star_level() const;
  void _internal_set_star_level(::int32_t value);

  public:
  // int32 refine_exp = 7;
  void clear_refine_exp() ;
  ::int32_t refine_exp() const;
  void set_refine_exp(::int32_t value);

  private:
  ::int32_t _internal_refine_exp() const;
  void _internal_set_refine_exp(::int32_t value);

  public:
  // int32 star_exp = 8;
  void clear_star_exp() ;
  ::int32_t star_exp() const;
  void set_star_exp(::int32_t value);

  private:
  ::int32_t _internal_star_exp() const;
  void _internal_set_star_exp(::int32_t value);

  public:
  // int32 pos = 9;
  void clear_pos() ;
  ::int32_t pos() const;
  void set_pos(::int32_t value);

  private:
  ::int32_t _internal_pos() const;
  void _internal_set_pos(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DBGemItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBGemItem& from_msg);
    ::uint64_t role_id_;
    ::uint64_t guid_;
    ::int32_t gem_id_;
    ::int32_t strength_lvl_;
    ::int32_t refine_level_;
    ::int32_t star_level_;
    ::int32_t refine_exp_;
    ::int32_t star_exp_;
    ::int32_t pos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBFriendItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBFriendItem) */ {
 public:
  inline DBFriendItem() : DBFriendItem(nullptr) {}
  ~DBFriendItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBFriendItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBFriendItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBFriendItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBFriendItem(const DBFriendItem& from) : DBFriendItem(nullptr, from) {}
  inline DBFriendItem(DBFriendItem&& from) noexcept
      : DBFriendItem(nullptr, std::move(from)) {}
  inline DBFriendItem& operator=(const DBFriendItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBFriendItem& operator=(DBFriendItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBFriendItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBFriendItem* internal_default_instance() {
    return reinterpret_cast<const DBFriendItem*>(
        &_DBFriendItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(DBFriendItem& a, DBFriendItem& b) { a.Swap(&b); }
  inline void Swap(DBFriendItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBFriendItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBFriendItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBFriendItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBFriendItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBFriendItem& from) { DBFriendItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBFriendItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBFriendItem"; }

 protected:
  explicit DBFriendItem(::google::protobuf::Arena* arena);
  DBFriendItem(::google::protobuf::Arena* arena, const DBFriendItem& from);
  DBFriendItem(::google::protobuf::Arena* arena, DBFriendItem&& from) noexcept
      : DBFriendItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kFriendIdFieldNumber = 2,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint64 friend_id = 2;
  void clear_friend_id() ;
  ::uint64_t friend_id() const;
  void set_friend_id(::uint64_t value);

  private:
  ::uint64_t _internal_friend_id() const;
  void _internal_set_friend_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DBFriendItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBFriendItem& from_msg);
    ::uint64_t role_id_;
    ::uint64_t friend_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBEquipItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBEquipItem) */ {
 public:
  inline DBEquipItem() : DBEquipItem(nullptr) {}
  ~DBEquipItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBEquipItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBEquipItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBEquipItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBEquipItem(const DBEquipItem& from) : DBEquipItem(nullptr, from) {}
  inline DBEquipItem(DBEquipItem&& from) noexcept
      : DBEquipItem(nullptr, std::move(from)) {}
  inline DBEquipItem& operator=(const DBEquipItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBEquipItem& operator=(DBEquipItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBEquipItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBEquipItem* internal_default_instance() {
    return reinterpret_cast<const DBEquipItem*>(
        &_DBEquipItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(DBEquipItem& a, DBEquipItem& b) { a.Swap(&b); }
  inline void Swap(DBEquipItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBEquipItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBEquipItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBEquipItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBEquipItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBEquipItem& from) { DBEquipItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBEquipItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBEquipItem"; }

 protected:
  explicit DBEquipItem(::google::protobuf::Arena* arena);
  DBEquipItem(::google::protobuf::Arena* arena, const DBEquipItem& from);
  DBEquipItem(::google::protobuf::Arena* arena, DBEquipItem&& from) noexcept
      : DBEquipItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kGuidFieldNumber = 2,
    kEquipIdFieldNumber = 3,
    kStrengthLvlFieldNumber = 4,
    kRefineLevelFieldNumber = 5,
    kStarLevelFieldNumber = 6,
    kRefineExpFieldNumber = 7,
    kStarExpFieldNumber = 8,
    kIsUsingFieldNumber = 9,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint64 guid = 2;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // int32 equip_id = 3;
  void clear_equip_id() ;
  ::int32_t equip_id() const;
  void set_equip_id(::int32_t value);

  private:
  ::int32_t _internal_equip_id() const;
  void _internal_set_equip_id(::int32_t value);

  public:
  // int32 strength_lvl = 4;
  void clear_strength_lvl() ;
  ::int32_t strength_lvl() const;
  void set_strength_lvl(::int32_t value);

  private:
  ::int32_t _internal_strength_lvl() const;
  void _internal_set_strength_lvl(::int32_t value);

  public:
  // int32 refine_level = 5;
  void clear_refine_level() ;
  ::int32_t refine_level() const;
  void set_refine_level(::int32_t value);

  private:
  ::int32_t _internal_refine_level() const;
  void _internal_set_refine_level(::int32_t value);

  public:
  // int32 star_level = 6;
  void clear_star_level() ;
  ::int32_t star_level() const;
  void set_star_level(::int32_t value);

  private:
  ::int32_t _internal_star_level() const;
  void _internal_set_star_level(::int32_t value);

  public:
  // int32 refine_exp = 7;
  void clear_refine_exp() ;
  ::int32_t refine_exp() const;
  void set_refine_exp(::int32_t value);

  private:
  ::int32_t _internal_refine_exp() const;
  void _internal_set_refine_exp(::int32_t value);

  public:
  // int32 star_exp = 8;
  void clear_star_exp() ;
  ::int32_t star_exp() const;
  void set_star_exp(::int32_t value);

  private:
  ::int32_t _internal_star_exp() const;
  void _internal_set_star_exp(::int32_t value);

  public:
  // bool is_using = 9;
  void clear_is_using() ;
  bool is_using() const;
  void set_is_using(bool value);

  private:
  bool _internal_is_using() const;
  void _internal_set_is_using(bool value);

  public:
  // @@protoc_insertion_point(class_scope:DBEquipItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBEquipItem& from_msg);
    ::uint64_t role_id_;
    ::uint64_t guid_;
    ::int32_t equip_id_;
    ::int32_t strength_lvl_;
    ::int32_t refine_level_;
    ::int32_t star_level_;
    ::int32_t refine_exp_;
    ::int32_t star_exp_;
    bool is_using_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBCounterItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBCounterItem) */ {
 public:
  inline DBCounterItem() : DBCounterItem(nullptr) {}
  ~DBCounterItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBCounterItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBCounterItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBCounterItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBCounterItem(const DBCounterItem& from) : DBCounterItem(nullptr, from) {}
  inline DBCounterItem(DBCounterItem&& from) noexcept
      : DBCounterItem(nullptr, std::move(from)) {}
  inline DBCounterItem& operator=(const DBCounterItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBCounterItem& operator=(DBCounterItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBCounterItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBCounterItem* internal_default_instance() {
    return reinterpret_cast<const DBCounterItem*>(
        &_DBCounterItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(DBCounterItem& a, DBCounterItem& b) { a.Swap(&b); }
  inline void Swap(DBCounterItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBCounterItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBCounterItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBCounterItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBCounterItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBCounterItem& from) { DBCounterItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBCounterItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBCounterItem"; }

 protected:
  explicit DBCounterItem(::google::protobuf::Arena* arena);
  DBCounterItem(::google::protobuf::Arena* arena, const DBCounterItem& from);
  DBCounterItem(::google::protobuf::Arena* arena, DBCounterItem&& from) noexcept
      : DBCounterItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kCounterIdFieldNumber = 2,
    kIndexFieldNumber = 3,
    kValueFieldNumber = 4,
    kTimeFieldNumber = 5,
    kParam1FieldNumber = 6,
    kParam2FieldNumber = 7,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint32 counter_id = 2;
  void clear_counter_id() ;
  ::uint32_t counter_id() const;
  void set_counter_id(::uint32_t value);

  private:
  ::uint32_t _internal_counter_id() const;
  void _internal_set_counter_id(::uint32_t value);

  public:
  // uint32 index = 3;
  void clear_index() ;
  ::uint32_t index() const;
  void set_index(::uint32_t value);

  private:
  ::uint32_t _internal_index() const;
  void _internal_set_index(::uint32_t value);

  public:
  // int64 value = 4;
  void clear_value() ;
  ::int64_t value() const;
  void set_value(::int64_t value);

  private:
  ::int64_t _internal_value() const;
  void _internal_set_value(::int64_t value);

  public:
  // uint64 time = 5;
  void clear_time() ;
  ::uint64_t time() const;
  void set_time(::uint64_t value);

  private:
  ::uint64_t _internal_time() const;
  void _internal_set_time(::uint64_t value);

  public:
  // uint32 param1 = 6;
  void clear_param1() ;
  ::uint32_t param1() const;
  void set_param1(::uint32_t value);

  private:
  ::uint32_t _internal_param1() const;
  void _internal_set_param1(::uint32_t value);

  public:
  // uint32 param2 = 7;
  void clear_param2() ;
  ::uint32_t param2() const;
  void set_param2(::uint32_t value);

  private:
  ::uint32_t _internal_param2() const;
  void _internal_set_param2(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DBCounterItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBCounterItem& from_msg);
    ::uint64_t role_id_;
    ::uint32_t counter_id_;
    ::uint32_t index_;
    ::int64_t value_;
    ::uint64_t time_;
    ::uint32_t param1_;
    ::uint32_t param2_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBCopyItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBCopyItem) */ {
 public:
  inline DBCopyItem() : DBCopyItem(nullptr) {}
  ~DBCopyItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBCopyItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBCopyItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBCopyItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBCopyItem(const DBCopyItem& from) : DBCopyItem(nullptr, from) {}
  inline DBCopyItem(DBCopyItem&& from) noexcept
      : DBCopyItem(nullptr, std::move(from)) {}
  inline DBCopyItem& operator=(const DBCopyItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBCopyItem& operator=(DBCopyItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBCopyItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBCopyItem* internal_default_instance() {
    return reinterpret_cast<const DBCopyItem*>(
        &_DBCopyItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(DBCopyItem& a, DBCopyItem& b) { a.Swap(&b); }
  inline void Swap(DBCopyItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBCopyItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBCopyItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBCopyItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBCopyItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBCopyItem& from) { DBCopyItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBCopyItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBCopyItem"; }

 protected:
  explicit DBCopyItem(::google::protobuf::Arena* arena);
  DBCopyItem(::google::protobuf::Arena* arena, const DBCopyItem& from);
  DBCopyItem(::google::protobuf::Arena* arena, DBCopyItem&& from) noexcept
      : DBCopyItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kCopyIdFieldNumber = 2,
    kStarNumFieldNumber = 3,
    kBattleCntFieldNumber = 4,
    kResetCntFieldNumber = 5,
    kBattleTimeFieldNumber = 6,
    kResetTimeFieldNumber = 7,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint32 copy_id = 2;
  void clear_copy_id() ;
  ::uint32_t copy_id() const;
  void set_copy_id(::uint32_t value);

  private:
  ::uint32_t _internal_copy_id() const;
  void _internal_set_copy_id(::uint32_t value);

  public:
  // int32 star_num = 3;
  void clear_star_num() ;
  ::int32_t star_num() const;
  void set_star_num(::int32_t value);

  private:
  ::int32_t _internal_star_num() const;
  void _internal_set_star_num(::int32_t value);

  public:
  // int32 battle_cnt = 4;
  void clear_battle_cnt() ;
  ::int32_t battle_cnt() const;
  void set_battle_cnt(::int32_t value);

  private:
  ::int32_t _internal_battle_cnt() const;
  void _internal_set_battle_cnt(::int32_t value);

  public:
  // int32 reset_cnt = 5;
  void clear_reset_cnt() ;
  ::int32_t reset_cnt() const;
  void set_reset_cnt(::int32_t value);

  private:
  ::int32_t _internal_reset_cnt() const;
  void _internal_set_reset_cnt(::int32_t value);

  public:
  // uint64 battle_time = 6;
  void clear_battle_time() ;
  ::uint64_t battle_time() const;
  void set_battle_time(::uint64_t value);

  private:
  ::uint64_t _internal_battle_time() const;
  void _internal_set_battle_time(::uint64_t value);

  public:
  // uint64 reset_time = 7;
  void clear_reset_time() ;
  ::uint64_t reset_time() const;
  void set_reset_time(::uint64_t value);

  private:
  ::uint64_t _internal_reset_time() const;
  void _internal_set_reset_time(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DBCopyItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBCopyItem& from_msg);
    ::uint64_t role_id_;
    ::uint32_t copy_id_;
    ::int32_t star_num_;
    ::int32_t battle_cnt_;
    ::int32_t reset_cnt_;
    ::uint64_t battle_time_;
    ::uint64_t reset_time_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBChapterItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBChapterItem) */ {
 public:
  inline DBChapterItem() : DBChapterItem(nullptr) {}
  ~DBChapterItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBChapterItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBChapterItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBChapterItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBChapterItem(const DBChapterItem& from) : DBChapterItem(nullptr, from) {}
  inline DBChapterItem(DBChapterItem&& from) noexcept
      : DBChapterItem(nullptr, std::move(from)) {}
  inline DBChapterItem& operator=(const DBChapterItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBChapterItem& operator=(DBChapterItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBChapterItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBChapterItem* internal_default_instance() {
    return reinterpret_cast<const DBChapterItem*>(
        &_DBChapterItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(DBChapterItem& a, DBChapterItem& b) { a.Swap(&b); }
  inline void Swap(DBChapterItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBChapterItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBChapterItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBChapterItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBChapterItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBChapterItem& from) { DBChapterItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBChapterItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBChapterItem"; }

 protected:
  explicit DBChapterItem(::google::protobuf::Arena* arena);
  DBChapterItem(::google::protobuf::Arena* arena, const DBChapterItem& from);
  DBChapterItem(::google::protobuf::Arena* arena, DBChapterItem&& from) noexcept
      : DBChapterItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kCopyTypeFieldNumber = 2,
    kChapterIdFieldNumber = 3,
    kStarAwardFieldNumber = 4,
    kSceneAwardFieldNumber = 5,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint32 copy_type = 2;
  void clear_copy_type() ;
  ::uint32_t copy_type() const;
  void set_copy_type(::uint32_t value);

  private:
  ::uint32_t _internal_copy_type() const;
  void _internal_set_copy_type(::uint32_t value);

  public:
  // uint32 chapter_id = 3;
  void clear_chapter_id() ;
  ::uint32_t chapter_id() const;
  void set_chapter_id(::uint32_t value);

  private:
  ::uint32_t _internal_chapter_id() const;
  void _internal_set_chapter_id(::uint32_t value);

  public:
  // uint32 star_award = 4;
  void clear_star_award() ;
  ::uint32_t star_award() const;
  void set_star_award(::uint32_t value);

  private:
  ::uint32_t _internal_star_award() const;
  void _internal_set_star_award(::uint32_t value);

  public:
  // uint32 scene_award = 5;
  void clear_scene_award() ;
  ::uint32_t scene_award() const;
  void set_scene_award(::uint32_t value);

  private:
  ::uint32_t _internal_scene_award() const;
  void _internal_set_scene_award(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DBChapterItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBChapterItem& from_msg);
    ::uint64_t role_id_;
    ::uint32_t copy_type_;
    ::uint32_t chapter_id_;
    ::uint32_t star_award_;
    ::uint32_t scene_award_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBBagItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBBagItem) */ {
 public:
  inline DBBagItem() : DBBagItem(nullptr) {}
  ~DBBagItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBBagItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBBagItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBBagItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBBagItem(const DBBagItem& from) : DBBagItem(nullptr, from) {}
  inline DBBagItem(DBBagItem&& from) noexcept
      : DBBagItem(nullptr, std::move(from)) {}
  inline DBBagItem& operator=(const DBBagItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBBagItem& operator=(DBBagItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBBagItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBBagItem* internal_default_instance() {
    return reinterpret_cast<const DBBagItem*>(
        &_DBBagItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(DBBagItem& a, DBBagItem& b) { a.Swap(&b); }
  inline void Swap(DBBagItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBBagItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBBagItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBBagItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBBagItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBBagItem& from) { DBBagItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBBagItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBBagItem"; }

 protected:
  explicit DBBagItem(::google::protobuf::Arena* arena);
  DBBagItem(::google::protobuf::Arena* arena, const DBBagItem& from);
  DBBagItem(::google::protobuf::Arena* arena, DBBagItem&& from) noexcept
      : DBBagItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGuidFieldNumber = 1,
    kRoleIdFieldNumber = 2,
    kItemGuidFieldNumber = 3,
    kCountFieldNumber = 5,
    kItemIdFieldNumber = 4,
    kBindFieldNumber = 6,
    kStatusFieldNumber = 7,
  };
  // uint64 guid = 1;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // uint64 role_id = 2;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint64 item_guid = 3;
  void clear_item_guid() ;
  ::uint64_t item_guid() const;
  void set_item_guid(::uint64_t value);

  private:
  ::uint64_t _internal_item_guid() const;
  void _internal_set_item_guid(::uint64_t value);

  public:
  // int64 count = 5;
  void clear_count() ;
  ::int64_t count() const;
  void set_count(::int64_t value);

  private:
  ::int64_t _internal_count() const;
  void _internal_set_count(::int64_t value);

  public:
  // uint32 item_id = 4;
  void clear_item_id() ;
  ::uint32_t item_id() const;
  void set_item_id(::uint32_t value);

  private:
  ::uint32_t _internal_item_id() const;
  void _internal_set_item_id(::uint32_t value);

  public:
  // .BindType bind = 6;
  void clear_bind() ;
  ::BindType bind() const;
  void set_bind(::BindType value);

  private:
  ::BindType _internal_bind() const;
  void _internal_set_bind(::BindType value);

  public:
  // .ItemStatus status = 7;
  void clear_status() ;
  ::ItemStatus status() const;
  void set_status(::ItemStatus value);

  private:
  ::ItemStatus _internal_status() const;
  void _internal_set_status(::ItemStatus value);

  public:
  // @@protoc_insertion_point(class_scope:DBBagItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBBagItem& from_msg);
    ::uint64_t guid_;
    ::uint64_t role_id_;
    ::uint64_t item_guid_;
    ::int64_t count_;
    ::uint32_t item_id_;
    int bind_;
    int status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBActivityItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBActivityItem) */ {
 public:
  inline DBActivityItem() : DBActivityItem(nullptr) {}
  ~DBActivityItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBActivityItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBActivityItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBActivityItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBActivityItem(const DBActivityItem& from) : DBActivityItem(nullptr, from) {}
  inline DBActivityItem(DBActivityItem&& from) noexcept
      : DBActivityItem(nullptr, std::move(from)) {}
  inline DBActivityItem& operator=(const DBActivityItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBActivityItem& operator=(DBActivityItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBActivityItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBActivityItem* internal_default_instance() {
    return reinterpret_cast<const DBActivityItem*>(
        &_DBActivityItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(DBActivityItem& a, DBActivityItem& b) { a.Swap(&b); }
  inline void Swap(DBActivityItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBActivityItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBActivityItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBActivityItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBActivityItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBActivityItem& from) { DBActivityItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBActivityItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBActivityItem"; }

 protected:
  explicit DBActivityItem(::google::protobuf::Arena* arena);
  DBActivityItem(::google::protobuf::Arena* arena, const DBActivityItem& from);
  DBActivityItem(::google::protobuf::Arena* arena, DBActivityItem&& from) noexcept
      : DBActivityItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 6,
    kRoleIdFieldNumber = 1,
    kActivityIdFieldNumber = 2,
    kActivityTypeFieldNumber = 3,
    kJoinTimeFieldNumber = 4,
    kDataLenFieldNumber = 5,
  };
  // bytes data = 6;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint32 activity_id = 2;
  void clear_activity_id() ;
  ::uint32_t activity_id() const;
  void set_activity_id(::uint32_t value);

  private:
  ::uint32_t _internal_activity_id() const;
  void _internal_set_activity_id(::uint32_t value);

  public:
  // uint32 activity_type = 3;
  void clear_activity_type() ;
  ::uint32_t activity_type() const;
  void set_activity_type(::uint32_t value);

  private:
  ::uint32_t _internal_activity_type() const;
  void _internal_set_activity_type(::uint32_t value);

  public:
  // uint32 join_time = 4;
  void clear_join_time() ;
  ::uint32_t join_time() const;
  void set_join_time(::uint32_t value);

  private:
  ::uint32_t _internal_join_time() const;
  void _internal_set_join_time(::uint32_t value);

  public:
  // uint32 data_len = 5;
  void clear_data_len() ;
  ::uint32_t data_len() const;
  void set_data_len(::uint32_t value);

  private:
  ::uint32_t _internal_data_len() const;
  void _internal_set_data_len(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DBActivityItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBActivityItem& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::uint64_t role_id_;
    ::uint32_t activity_id_;
    ::uint32_t activity_type_;
    ::uint32_t join_time_;
    ::uint32_t data_len_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBTasks final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBTasks) */ {
 public:
  inline DBTasks() : DBTasks(nullptr) {}
  ~DBTasks() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBTasks* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBTasks));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBTasks(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBTasks(const DBTasks& from) : DBTasks(nullptr, from) {}
  inline DBTasks(DBTasks&& from) noexcept
      : DBTasks(nullptr, std::move(from)) {}
  inline DBTasks& operator=(const DBTasks& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBTasks& operator=(DBTasks&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBTasks& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBTasks* internal_default_instance() {
    return reinterpret_cast<const DBTasks*>(
        &_DBTasks_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(DBTasks& a, DBTasks& b) { a.Swap(&b); }
  inline void Swap(DBTasks* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBTasks* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBTasks* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBTasks>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBTasks& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBTasks& from) { DBTasks::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBTasks* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBTasks"; }

 protected:
  explicit DBTasks(::google::protobuf::Arena* arena);
  DBTasks(::google::protobuf::Arena* arena, const DBTasks& from);
  DBTasks(::google::protobuf::Arena* arena, DBTasks&& from) noexcept
      : DBTasks(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .DBTaskItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DBTaskItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DBTaskItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DBTaskItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DBTaskItem>* _internal_mutable_items();
  public:
  const ::DBTaskItem& items(int index) const;
  ::DBTaskItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DBTaskItem>& items() const;
  // @@protoc_insertion_point(class_scope:DBTasks)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBTasks& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DBTaskItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBSkills final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBSkills) */ {
 public:
  inline DBSkills() : DBSkills(nullptr) {}
  ~DBSkills() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBSkills* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBSkills));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBSkills(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBSkills(const DBSkills& from) : DBSkills(nullptr, from) {}
  inline DBSkills(DBSkills&& from) noexcept
      : DBSkills(nullptr, std::move(from)) {}
  inline DBSkills& operator=(const DBSkills& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBSkills& operator=(DBSkills&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBSkills& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBSkills* internal_default_instance() {
    return reinterpret_cast<const DBSkills*>(
        &_DBSkills_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(DBSkills& a, DBSkills& b) { a.Swap(&b); }
  inline void Swap(DBSkills* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBSkills* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBSkills* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBSkills>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBSkills& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBSkills& from) { DBSkills::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBSkills* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBSkills"; }

 protected:
  explicit DBSkills(::google::protobuf::Arena* arena);
  DBSkills(::google::protobuf::Arena* arena, const DBSkills& from);
  DBSkills(::google::protobuf::Arena* arena, DBSkills&& from) noexcept
      : DBSkills(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .DBSkillItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DBSkillItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DBSkillItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DBSkillItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DBSkillItem>* _internal_mutable_items();
  public:
  const ::DBSkillItem& items(int index) const;
  ::DBSkillItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DBSkillItem>& items() const;
  // @@protoc_insertion_point(class_scope:DBSkills)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBSkills& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DBSkillItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBPets final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBPets) */ {
 public:
  inline DBPets() : DBPets(nullptr) {}
  ~DBPets() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBPets* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBPets));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBPets(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBPets(const DBPets& from) : DBPets(nullptr, from) {}
  inline DBPets(DBPets&& from) noexcept
      : DBPets(nullptr, std::move(from)) {}
  inline DBPets& operator=(const DBPets& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBPets& operator=(DBPets&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBPets& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBPets* internal_default_instance() {
    return reinterpret_cast<const DBPets*>(
        &_DBPets_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(DBPets& a, DBPets& b) { a.Swap(&b); }
  inline void Swap(DBPets* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBPets* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBPets* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBPets>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBPets& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBPets& from) { DBPets::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBPets* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBPets"; }

 protected:
  explicit DBPets(::google::protobuf::Arena* arena);
  DBPets(::google::protobuf::Arena* arena, const DBPets& from);
  DBPets(::google::protobuf::Arena* arena, DBPets&& from) noexcept
      : DBPets(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .DBPetItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DBPetItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DBPetItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DBPetItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DBPetItem>* _internal_mutable_items();
  public:
  const ::DBPetItem& items(int index) const;
  ::DBPetItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DBPetItem>& items() const;
  // @@protoc_insertion_point(class_scope:DBPets)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBPets& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DBPetItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBPartners final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBPartners) */ {
 public:
  inline DBPartners() : DBPartners(nullptr) {}
  ~DBPartners() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBPartners* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBPartners));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBPartners(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBPartners(const DBPartners& from) : DBPartners(nullptr, from) {}
  inline DBPartners(DBPartners&& from) noexcept
      : DBPartners(nullptr, std::move(from)) {}
  inline DBPartners& operator=(const DBPartners& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBPartners& operator=(DBPartners&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBPartners& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBPartners* internal_default_instance() {
    return reinterpret_cast<const DBPartners*>(
        &_DBPartners_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(DBPartners& a, DBPartners& b) { a.Swap(&b); }
  inline void Swap(DBPartners* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBPartners* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBPartners* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBPartners>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBPartners& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBPartners& from) { DBPartners::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBPartners* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBPartners"; }

 protected:
  explicit DBPartners(::google::protobuf::Arena* arena);
  DBPartners(::google::protobuf::Arena* arena, const DBPartners& from);
  DBPartners(::google::protobuf::Arena* arena, DBPartners&& from) noexcept
      : DBPartners(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .DBPartnerItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DBPartnerItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DBPartnerItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DBPartnerItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DBPartnerItem>* _internal_mutable_items();
  public:
  const ::DBPartnerItem& items(int index) const;
  ::DBPartnerItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DBPartnerItem>& items() const;
  // @@protoc_insertion_point(class_scope:DBPartners)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBPartners& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DBPartnerItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBMounts final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBMounts) */ {
 public:
  inline DBMounts() : DBMounts(nullptr) {}
  ~DBMounts() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBMounts* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBMounts));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBMounts(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBMounts(const DBMounts& from) : DBMounts(nullptr, from) {}
  inline DBMounts(DBMounts&& from) noexcept
      : DBMounts(nullptr, std::move(from)) {}
  inline DBMounts& operator=(const DBMounts& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBMounts& operator=(DBMounts&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBMounts& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBMounts* internal_default_instance() {
    return reinterpret_cast<const DBMounts*>(
        &_DBMounts_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(DBMounts& a, DBMounts& b) { a.Swap(&b); }
  inline void Swap(DBMounts* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBMounts* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBMounts* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBMounts>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBMounts& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBMounts& from) { DBMounts::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBMounts* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBMounts"; }

 protected:
  explicit DBMounts(::google::protobuf::Arena* arena);
  DBMounts(::google::protobuf::Arena* arena, const DBMounts& from);
  DBMounts(::google::protobuf::Arena* arena, DBMounts&& from) noexcept
      : DBMounts(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .DBMountItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DBMountItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DBMountItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DBMountItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DBMountItem>* _internal_mutable_items();
  public:
  const ::DBMountItem& items(int index) const;
  ::DBMountItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DBMountItem>& items() const;
  // @@protoc_insertion_point(class_scope:DBMounts)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBMounts& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DBMountItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBMails final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBMails) */ {
 public:
  inline DBMails() : DBMails(nullptr) {}
  ~DBMails() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBMails* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBMails));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBMails(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBMails(const DBMails& from) : DBMails(nullptr, from) {}
  inline DBMails(DBMails&& from) noexcept
      : DBMails(nullptr, std::move(from)) {}
  inline DBMails& operator=(const DBMails& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBMails& operator=(DBMails&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBMails& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBMails* internal_default_instance() {
    return reinterpret_cast<const DBMails*>(
        &_DBMails_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(DBMails& a, DBMails& b) { a.Swap(&b); }
  inline void Swap(DBMails* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBMails* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBMails* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBMails>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBMails& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBMails& from) { DBMails::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBMails* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBMails"; }

 protected:
  explicit DBMails(::google::protobuf::Arena* arena);
  DBMails(::google::protobuf::Arena* arena, const DBMails& from);
  DBMails(::google::protobuf::Arena* arena, DBMails&& from) noexcept
      : DBMails(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .DBMailItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DBMailItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DBMailItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DBMailItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DBMailItem>* _internal_mutable_items();
  public:
  const ::DBMailItem& items(int index) const;
  ::DBMailItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DBMailItem>& items() const;
  // @@protoc_insertion_point(class_scope:DBMails)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBMails& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DBMailItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBGems final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBGems) */ {
 public:
  inline DBGems() : DBGems(nullptr) {}
  ~DBGems() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBGems* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBGems));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBGems(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBGems(const DBGems& from) : DBGems(nullptr, from) {}
  inline DBGems(DBGems&& from) noexcept
      : DBGems(nullptr, std::move(from)) {}
  inline DBGems& operator=(const DBGems& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBGems& operator=(DBGems&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBGems& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBGems* internal_default_instance() {
    return reinterpret_cast<const DBGems*>(
        &_DBGems_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(DBGems& a, DBGems& b) { a.Swap(&b); }
  inline void Swap(DBGems* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBGems* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBGems* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBGems>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBGems& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBGems& from) { DBGems::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBGems* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBGems"; }

 protected:
  explicit DBGems(::google::protobuf::Arena* arena);
  DBGems(::google::protobuf::Arena* arena, const DBGems& from);
  DBGems(::google::protobuf::Arena* arena, DBGems&& from) noexcept
      : DBGems(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .DBGemItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DBGemItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DBGemItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DBGemItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DBGemItem>* _internal_mutable_items();
  public:
  const ::DBGemItem& items(int index) const;
  ::DBGemItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DBGemItem>& items() const;
  // @@protoc_insertion_point(class_scope:DBGems)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBGems& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DBGemItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBFriends final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBFriends) */ {
 public:
  inline DBFriends() : DBFriends(nullptr) {}
  ~DBFriends() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBFriends* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBFriends));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBFriends(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBFriends(const DBFriends& from) : DBFriends(nullptr, from) {}
  inline DBFriends(DBFriends&& from) noexcept
      : DBFriends(nullptr, std::move(from)) {}
  inline DBFriends& operator=(const DBFriends& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBFriends& operator=(DBFriends&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBFriends& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBFriends* internal_default_instance() {
    return reinterpret_cast<const DBFriends*>(
        &_DBFriends_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(DBFriends& a, DBFriends& b) { a.Swap(&b); }
  inline void Swap(DBFriends* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBFriends* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBFriends* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBFriends>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBFriends& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBFriends& from) { DBFriends::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBFriends* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBFriends"; }

 protected:
  explicit DBFriends(::google::protobuf::Arena* arena);
  DBFriends(::google::protobuf::Arena* arena, const DBFriends& from);
  DBFriends(::google::protobuf::Arena* arena, DBFriends&& from) noexcept
      : DBFriends(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .DBFriendItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DBFriendItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DBFriendItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DBFriendItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DBFriendItem>* _internal_mutable_items();
  public:
  const ::DBFriendItem& items(int index) const;
  ::DBFriendItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DBFriendItem>& items() const;
  // @@protoc_insertion_point(class_scope:DBFriends)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBFriends& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DBFriendItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBEquipments final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBEquipments) */ {
 public:
  inline DBEquipments() : DBEquipments(nullptr) {}
  ~DBEquipments() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBEquipments* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBEquipments));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBEquipments(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBEquipments(const DBEquipments& from) : DBEquipments(nullptr, from) {}
  inline DBEquipments(DBEquipments&& from) noexcept
      : DBEquipments(nullptr, std::move(from)) {}
  inline DBEquipments& operator=(const DBEquipments& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBEquipments& operator=(DBEquipments&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBEquipments& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBEquipments* internal_default_instance() {
    return reinterpret_cast<const DBEquipments*>(
        &_DBEquipments_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(DBEquipments& a, DBEquipments& b) { a.Swap(&b); }
  inline void Swap(DBEquipments* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBEquipments* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBEquipments* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBEquipments>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBEquipments& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBEquipments& from) { DBEquipments::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBEquipments* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBEquipments"; }

 protected:
  explicit DBEquipments(::google::protobuf::Arena* arena);
  DBEquipments(::google::protobuf::Arena* arena, const DBEquipments& from);
  DBEquipments(::google::protobuf::Arena* arena, DBEquipments&& from) noexcept
      : DBEquipments(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .DBEquipItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DBEquipItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DBEquipItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DBEquipItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DBEquipItem>* _internal_mutable_items();
  public:
  const ::DBEquipItem& items(int index) const;
  ::DBEquipItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DBEquipItem>& items() const;
  // @@protoc_insertion_point(class_scope:DBEquipments)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBEquipments& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DBEquipItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBCounters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBCounters) */ {
 public:
  inline DBCounters() : DBCounters(nullptr) {}
  ~DBCounters() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBCounters* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBCounters));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBCounters(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBCounters(const DBCounters& from) : DBCounters(nullptr, from) {}
  inline DBCounters(DBCounters&& from) noexcept
      : DBCounters(nullptr, std::move(from)) {}
  inline DBCounters& operator=(const DBCounters& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBCounters& operator=(DBCounters&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBCounters& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBCounters* internal_default_instance() {
    return reinterpret_cast<const DBCounters*>(
        &_DBCounters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(DBCounters& a, DBCounters& b) { a.Swap(&b); }
  inline void Swap(DBCounters* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBCounters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBCounters* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBCounters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBCounters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBCounters& from) { DBCounters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBCounters* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBCounters"; }

 protected:
  explicit DBCounters(::google::protobuf::Arena* arena);
  DBCounters(::google::protobuf::Arena* arena, const DBCounters& from);
  DBCounters(::google::protobuf::Arena* arena, DBCounters&& from) noexcept
      : DBCounters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .DBCounterItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DBCounterItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DBCounterItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DBCounterItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DBCounterItem>* _internal_mutable_items();
  public:
  const ::DBCounterItem& items(int index) const;
  ::DBCounterItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DBCounterItem>& items() const;
  // @@protoc_insertion_point(class_scope:DBCounters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBCounters& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DBCounterItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBCopies final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBCopies) */ {
 public:
  inline DBCopies() : DBCopies(nullptr) {}
  ~DBCopies() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBCopies* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBCopies));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBCopies(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBCopies(const DBCopies& from) : DBCopies(nullptr, from) {}
  inline DBCopies(DBCopies&& from) noexcept
      : DBCopies(nullptr, std::move(from)) {}
  inline DBCopies& operator=(const DBCopies& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBCopies& operator=(DBCopies&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBCopies& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBCopies* internal_default_instance() {
    return reinterpret_cast<const DBCopies*>(
        &_DBCopies_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(DBCopies& a, DBCopies& b) { a.Swap(&b); }
  inline void Swap(DBCopies* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBCopies* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBCopies* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBCopies>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBCopies& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBCopies& from) { DBCopies::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBCopies* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBCopies"; }

 protected:
  explicit DBCopies(::google::protobuf::Arena* arena);
  DBCopies(::google::protobuf::Arena* arena, const DBCopies& from);
  DBCopies(::google::protobuf::Arena* arena, DBCopies&& from) noexcept
      : DBCopies(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCopiesFieldNumber = 1,
    kChaptersFieldNumber = 2,
  };
  // repeated .DBCopyItem copies = 1;
  int copies_size() const;
  private:
  int _internal_copies_size() const;

  public:
  void clear_copies() ;
  ::DBCopyItem* mutable_copies(int index);
  ::google::protobuf::RepeatedPtrField<::DBCopyItem>* mutable_copies();

  private:
  const ::google::protobuf::RepeatedPtrField<::DBCopyItem>& _internal_copies() const;
  ::google::protobuf::RepeatedPtrField<::DBCopyItem>* _internal_mutable_copies();
  public:
  const ::DBCopyItem& copies(int index) const;
  ::DBCopyItem* add_copies();
  const ::google::protobuf::RepeatedPtrField<::DBCopyItem>& copies() const;
  // repeated .DBChapterItem chapters = 2;
  int chapters_size() const;
  private:
  int _internal_chapters_size() const;

  public:
  void clear_chapters() ;
  ::DBChapterItem* mutable_chapters(int index);
  ::google::protobuf::RepeatedPtrField<::DBChapterItem>* mutable_chapters();

  private:
  const ::google::protobuf::RepeatedPtrField<::DBChapterItem>& _internal_chapters() const;
  ::google::protobuf::RepeatedPtrField<::DBChapterItem>* _internal_mutable_chapters();
  public:
  const ::DBChapterItem& chapters(int index) const;
  ::DBChapterItem* add_chapters();
  const ::google::protobuf::RepeatedPtrField<::DBChapterItem>& chapters() const;
  // @@protoc_insertion_point(class_scope:DBCopies)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBCopies& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DBCopyItem > copies_;
    ::google::protobuf::RepeatedPtrField< ::DBChapterItem > chapters_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBBagItems final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBBagItems) */ {
 public:
  inline DBBagItems() : DBBagItems(nullptr) {}
  ~DBBagItems() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBBagItems* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBBagItems));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBBagItems(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBBagItems(const DBBagItems& from) : DBBagItems(nullptr, from) {}
  inline DBBagItems(DBBagItems&& from) noexcept
      : DBBagItems(nullptr, std::move(from)) {}
  inline DBBagItems& operator=(const DBBagItems& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBBagItems& operator=(DBBagItems&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBBagItems& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBBagItems* internal_default_instance() {
    return reinterpret_cast<const DBBagItems*>(
        &_DBBagItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(DBBagItems& a, DBBagItems& b) { a.Swap(&b); }
  inline void Swap(DBBagItems* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBBagItems* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBBagItems* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBBagItems>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBBagItems& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBBagItems& from) { DBBagItems::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBBagItems* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBBagItems"; }

 protected:
  explicit DBBagItems(::google::protobuf::Arena* arena);
  DBBagItems(::google::protobuf::Arena* arena, const DBBagItems& from);
  DBBagItems(::google::protobuf::Arena* arena, DBBagItems&& from) noexcept
      : DBBagItems(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .DBBagItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DBBagItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DBBagItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DBBagItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DBBagItem>* _internal_mutable_items();
  public:
  const ::DBBagItem& items(int index) const;
  ::DBBagItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DBBagItem>& items() const;
  // @@protoc_insertion_point(class_scope:DBBagItems)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBBagItems& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DBBagItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBActivities final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBActivities) */ {
 public:
  inline DBActivities() : DBActivities(nullptr) {}
  ~DBActivities() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBActivities* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBActivities));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBActivities(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBActivities(const DBActivities& from) : DBActivities(nullptr, from) {}
  inline DBActivities(DBActivities&& from) noexcept
      : DBActivities(nullptr, std::move(from)) {}
  inline DBActivities& operator=(const DBActivities& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBActivities& operator=(DBActivities&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBActivities& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBActivities* internal_default_instance() {
    return reinterpret_cast<const DBActivities*>(
        &_DBActivities_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(DBActivities& a, DBActivities& b) { a.Swap(&b); }
  inline void Swap(DBActivities* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBActivities* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBActivities* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBActivities>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBActivities& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBActivities& from) { DBActivities::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBActivities* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBActivities"; }

 protected:
  explicit DBActivities(::google::protobuf::Arena* arena);
  DBActivities(::google::protobuf::Arena* arena, const DBActivities& from);
  DBActivities(::google::protobuf::Arena* arena, DBActivities&& from) noexcept
      : DBActivities(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .DBActivityItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DBActivityItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DBActivityItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DBActivityItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DBActivityItem>* _internal_mutable_items();
  public:
  const ::DBActivityItem& items(int index) const;
  ::DBActivityItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DBActivityItem>& items() const;
  // @@protoc_insertion_point(class_scope:DBActivities)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBActivities& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DBActivityItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};
// -------------------------------------------------------------------

class DBRoleLoginAck final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBRoleLoginAck) */ {
 public:
  inline DBRoleLoginAck() : DBRoleLoginAck(nullptr) {}
  ~DBRoleLoginAck() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBRoleLoginAck* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBRoleLoginAck));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBRoleLoginAck(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBRoleLoginAck(const DBRoleLoginAck& from) : DBRoleLoginAck(nullptr, from) {}
  inline DBRoleLoginAck(DBRoleLoginAck&& from) noexcept
      : DBRoleLoginAck(nullptr, std::move(from)) {}
  inline DBRoleLoginAck& operator=(const DBRoleLoginAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBRoleLoginAck& operator=(DBRoleLoginAck&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBRoleLoginAck& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBRoleLoginAck* internal_default_instance() {
    return reinterpret_cast<const DBRoleLoginAck*>(
        &_DBRoleLoginAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(DBRoleLoginAck& a, DBRoleLoginAck& b) { a.Swap(&b); }
  inline void Swap(DBRoleLoginAck* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBRoleLoginAck* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBRoleLoginAck* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBRoleLoginAck>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBRoleLoginAck& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBRoleLoginAck& from) { DBRoleLoginAck::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBRoleLoginAck* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBRoleLoginAck"; }

 protected:
  explicit DBRoleLoginAck(::google::protobuf::Arena* arena);
  DBRoleLoginAck(::google::protobuf::Arena* arena, const DBRoleLoginAck& from);
  DBRoleLoginAck(::google::protobuf::Arena* arena, DBRoleLoginAck&& from) noexcept
      : DBRoleLoginAck(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleDataFieldNumber = 3,
    kBagItemsFieldNumber = 4,
    kCopiesFieldNumber = 5,
    kEquipmentsFieldNumber = 6,
    kGemsFieldNumber = 7,
    kPetsFieldNumber = 8,
    kPartnersFieldNumber = 9,
    kTasksFieldNumber = 10,
    kMailsFieldNumber = 11,
    kMountsFieldNumber = 12,
    kActivitiesFieldNumber = 13,
    kCountersFieldNumber = 14,
    kFriendsFieldNumber = 15,
    kSkillsFieldNumber = 16,
    kRoleIdFieldNumber = 2,
    kRetCodeFieldNumber = 1,
  };
  // .DBRoleData role_data = 3;
  bool has_role_data() const;
  void clear_role_data() ;
  const ::DBRoleData& role_data() const;
  PROTOBUF_NODISCARD ::DBRoleData* release_role_data();
  ::DBRoleData* mutable_role_data();
  void set_allocated_role_data(::DBRoleData* value);
  void unsafe_arena_set_allocated_role_data(::DBRoleData* value);
  ::DBRoleData* unsafe_arena_release_role_data();

  private:
  const ::DBRoleData& _internal_role_data() const;
  ::DBRoleData* _internal_mutable_role_data();

  public:
  // .DBBagItems bag_items = 4;
  bool has_bag_items() const;
  void clear_bag_items() ;
  const ::DBBagItems& bag_items() const;
  PROTOBUF_NODISCARD ::DBBagItems* release_bag_items();
  ::DBBagItems* mutable_bag_items();
  void set_allocated_bag_items(::DBBagItems* value);
  void unsafe_arena_set_allocated_bag_items(::DBBagItems* value);
  ::DBBagItems* unsafe_arena_release_bag_items();

  private:
  const ::DBBagItems& _internal_bag_items() const;
  ::DBBagItems* _internal_mutable_bag_items();

  public:
  // .DBCopies copies = 5;
  bool has_copies() const;
  void clear_copies() ;
  const ::DBCopies& copies() const;
  PROTOBUF_NODISCARD ::DBCopies* release_copies();
  ::DBCopies* mutable_copies();
  void set_allocated_copies(::DBCopies* value);
  void unsafe_arena_set_allocated_copies(::DBCopies* value);
  ::DBCopies* unsafe_arena_release_copies();

  private:
  const ::DBCopies& _internal_copies() const;
  ::DBCopies* _internal_mutable_copies();

  public:
  // .DBEquipments equipments = 6;
  bool has_equipments() const;
  void clear_equipments() ;
  const ::DBEquipments& equipments() const;
  PROTOBUF_NODISCARD ::DBEquipments* release_equipments();
  ::DBEquipments* mutable_equipments();
  void set_allocated_equipments(::DBEquipments* value);
  void unsafe_arena_set_allocated_equipments(::DBEquipments* value);
  ::DBEquipments* unsafe_arena_release_equipments();

  private:
  const ::DBEquipments& _internal_equipments() const;
  ::DBEquipments* _internal_mutable_equipments();

  public:
  // .DBGems gems = 7;
  bool has_gems() const;
  void clear_gems() ;
  const ::DBGems& gems() const;
  PROTOBUF_NODISCARD ::DBGems* release_gems();
  ::DBGems* mutable_gems();
  void set_allocated_gems(::DBGems* value);
  void unsafe_arena_set_allocated_gems(::DBGems* value);
  ::DBGems* unsafe_arena_release_gems();

  private:
  const ::DBGems& _internal_gems() const;
  ::DBGems* _internal_mutable_gems();

  public:
  // .DBPets pets = 8;
  bool has_pets() const;
  void clear_pets() ;
  const ::DBPets& pets() const;
  PROTOBUF_NODISCARD ::DBPets* release_pets();
  ::DBPets* mutable_pets();
  void set_allocated_pets(::DBPets* value);
  void unsafe_arena_set_allocated_pets(::DBPets* value);
  ::DBPets* unsafe_arena_release_pets();

  private:
  const ::DBPets& _internal_pets() const;
  ::DBPets* _internal_mutable_pets();

  public:
  // .DBPartners partners = 9;
  bool has_partners() const;
  void clear_partners() ;
  const ::DBPartners& partners() const;
  PROTOBUF_NODISCARD ::DBPartners* release_partners();
  ::DBPartners* mutable_partners();
  void set_allocated_partners(::DBPartners* value);
  void unsafe_arena_set_allocated_partners(::DBPartners* value);
  ::DBPartners* unsafe_arena_release_partners();

  private:
  const ::DBPartners& _internal_partners() const;
  ::DBPartners* _internal_mutable_partners();

  public:
  // .DBTasks tasks = 10;
  bool has_tasks() const;
  void clear_tasks() ;
  const ::DBTasks& tasks() const;
  PROTOBUF_NODISCARD ::DBTasks* release_tasks();
  ::DBTasks* mutable_tasks();
  void set_allocated_tasks(::DBTasks* value);
  void unsafe_arena_set_allocated_tasks(::DBTasks* value);
  ::DBTasks* unsafe_arena_release_tasks();

  private:
  const ::DBTasks& _internal_tasks() const;
  ::DBTasks* _internal_mutable_tasks();

  public:
  // .DBMails mails = 11;
  bool has_mails() const;
  void clear_mails() ;
  const ::DBMails& mails() const;
  PROTOBUF_NODISCARD ::DBMails* release_mails();
  ::DBMails* mutable_mails();
  void set_allocated_mails(::DBMails* value);
  void unsafe_arena_set_allocated_mails(::DBMails* value);
  ::DBMails* unsafe_arena_release_mails();

  private:
  const ::DBMails& _internal_mails() const;
  ::DBMails* _internal_mutable_mails();

  public:
  // .DBMounts mounts = 12;
  bool has_mounts() const;
  void clear_mounts() ;
  const ::DBMounts& mounts() const;
  PROTOBUF_NODISCARD ::DBMounts* release_mounts();
  ::DBMounts* mutable_mounts();
  void set_allocated_mounts(::DBMounts* value);
  void unsafe_arena_set_allocated_mounts(::DBMounts* value);
  ::DBMounts* unsafe_arena_release_mounts();

  private:
  const ::DBMounts& _internal_mounts() const;
  ::DBMounts* _internal_mutable_mounts();

  public:
  // .DBActivities activities = 13;
  bool has_activities() const;
  void clear_activities() ;
  const ::DBActivities& activities() const;
  PROTOBUF_NODISCARD ::DBActivities* release_activities();
  ::DBActivities* mutable_activities();
  void set_allocated_activities(::DBActivities* value);
  void unsafe_arena_set_allocated_activities(::DBActivities* value);
  ::DBActivities* unsafe_arena_release_activities();

  private:
  const ::DBActivities& _internal_activities() const;
  ::DBActivities* _internal_mutable_activities();

  public:
  // .DBCounters counters = 14;
  bool has_counters() const;
  void clear_counters() ;
  const ::DBCounters& counters() const;
  PROTOBUF_NODISCARD ::DBCounters* release_counters();
  ::DBCounters* mutable_counters();
  void set_allocated_counters(::DBCounters* value);
  void unsafe_arena_set_allocated_counters(::DBCounters* value);
  ::DBCounters* unsafe_arena_release_counters();

  private:
  const ::DBCounters& _internal_counters() const;
  ::DBCounters* _internal_mutable_counters();

  public:
  // .DBFriends friends = 15;
  bool has_friends() const;
  void clear_friends() ;
  const ::DBFriends& friends() const;
  PROTOBUF_NODISCARD ::DBFriends* release_friends();
  ::DBFriends* mutable_friends();
  void set_allocated_friends(::DBFriends* value);
  void unsafe_arena_set_allocated_friends(::DBFriends* value);
  ::DBFriends* unsafe_arena_release_friends();

  private:
  const ::DBFriends& _internal_friends() const;
  ::DBFriends* _internal_mutable_friends();

  public:
  // .DBSkills skills = 16;
  bool has_skills() const;
  void clear_skills() ;
  const ::DBSkills& skills() const;
  PROTOBUF_NODISCARD ::DBSkills* release_skills();
  ::DBSkills* mutable_skills();
  void set_allocated_skills(::DBSkills* value);
  void unsafe_arena_set_allocated_skills(::DBSkills* value);
  ::DBSkills* unsafe_arena_release_skills();

  private:
  const ::DBSkills& _internal_skills() const;
  ::DBSkills* _internal_mutable_skills();

  public:
  // uint64 role_id = 2;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint32 ret_code = 1;
  void clear_ret_code() ;
  ::uint32_t ret_code() const;
  void set_ret_code(::uint32_t value);

  private:
  ::uint32_t _internal_ret_code() const;
  void _internal_set_ret_code(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DBRoleLoginAck)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 16, 14,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBRoleLoginAck& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DBRoleData* role_data_;
    ::DBBagItems* bag_items_;
    ::DBCopies* copies_;
    ::DBEquipments* equipments_;
    ::DBGems* gems_;
    ::DBPets* pets_;
    ::DBPartners* partners_;
    ::DBTasks* tasks_;
    ::DBMails* mails_;
    ::DBMounts* mounts_;
    ::DBActivities* activities_;
    ::DBCounters* counters_;
    ::DBFriends* friends_;
    ::DBSkills* skills_;
    ::uint64_t role_id_;
    ::uint32_t ret_code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_5fdb_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DBRoleData

// uint64 account_id = 1;
inline void DBRoleData::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBRoleData::account_id() const {
  // @@protoc_insertion_point(field_get:DBRoleData.account_id)
  return _internal_account_id();
}
inline void DBRoleData::set_account_id(::uint64_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:DBRoleData.account_id)
}
inline ::uint64_t DBRoleData::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_;
}
inline void DBRoleData::_internal_set_account_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_ = value;
}

// uint64 role_id = 2;
inline void DBRoleData::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBRoleData::role_id() const {
  // @@protoc_insertion_point(field_get:DBRoleData.role_id)
  return _internal_role_id();
}
inline void DBRoleData::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:DBRoleData.role_id)
}
inline ::uint64_t DBRoleData::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void DBRoleData::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// int32 career_id = 3;
inline void DBRoleData::clear_career_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.career_id_ = 0;
}
inline ::int32_t DBRoleData::career_id() const {
  // @@protoc_insertion_point(field_get:DBRoleData.career_id)
  return _internal_career_id();
}
inline void DBRoleData::set_career_id(::int32_t value) {
  _internal_set_career_id(value);
  // @@protoc_insertion_point(field_set:DBRoleData.career_id)
}
inline ::int32_t DBRoleData::_internal_career_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.career_id_;
}
inline void DBRoleData::_internal_set_career_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.career_id_ = value;
}

// int32 level = 4;
inline void DBRoleData::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0;
}
inline ::int32_t DBRoleData::level() const {
  // @@protoc_insertion_point(field_get:DBRoleData.level)
  return _internal_level();
}
inline void DBRoleData::set_level(::int32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:DBRoleData.level)
}
inline ::int32_t DBRoleData::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void DBRoleData::_internal_set_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// int64 exp = 5;
inline void DBRoleData::clear_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exp_ = ::int64_t{0};
}
inline ::int64_t DBRoleData::exp() const {
  // @@protoc_insertion_point(field_get:DBRoleData.exp)
  return _internal_exp();
}
inline void DBRoleData::set_exp(::int64_t value) {
  _internal_set_exp(value);
  // @@protoc_insertion_point(field_set:DBRoleData.exp)
}
inline ::int64_t DBRoleData::_internal_exp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exp_;
}
inline void DBRoleData::_internal_set_exp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exp_ = value;
}

// string name = 6;
inline void DBRoleData::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& DBRoleData::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBRoleData.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DBRoleData::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DBRoleData.name)
}
inline std::string* DBRoleData::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:DBRoleData.name)
  return _s;
}
inline const std::string& DBRoleData::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void DBRoleData::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* DBRoleData::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* DBRoleData::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBRoleData.name)
  return _impl_.name_.Release();
}
inline void DBRoleData::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:DBRoleData.name)
}

// int32 lang_id = 7;
inline void DBRoleData::clear_lang_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lang_id_ = 0;
}
inline ::int32_t DBRoleData::lang_id() const {
  // @@protoc_insertion_point(field_get:DBRoleData.lang_id)
  return _internal_lang_id();
}
inline void DBRoleData::set_lang_id(::int32_t value) {
  _internal_set_lang_id(value);
  // @@protoc_insertion_point(field_set:DBRoleData.lang_id)
}
inline ::int32_t DBRoleData::_internal_lang_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lang_id_;
}
inline void DBRoleData::_internal_set_lang_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lang_id_ = value;
}

// int32 vip_level = 8;
inline void DBRoleData::clear_vip_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vip_level_ = 0;
}
inline ::int32_t DBRoleData::vip_level() const {
  // @@protoc_insertion_point(field_get:DBRoleData.vip_level)
  return _internal_vip_level();
}
inline void DBRoleData::set_vip_level(::int32_t value) {
  _internal_set_vip_level(value);
  // @@protoc_insertion_point(field_set:DBRoleData.vip_level)
}
inline ::int32_t DBRoleData::_internal_vip_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vip_level_;
}
inline void DBRoleData::_internal_set_vip_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vip_level_ = value;
}

// int32 vip_exp = 9;
inline void DBRoleData::clear_vip_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vip_exp_ = 0;
}
inline ::int32_t DBRoleData::vip_exp() const {
  // @@protoc_insertion_point(field_get:DBRoleData.vip_exp)
  return _internal_vip_exp();
}
inline void DBRoleData::set_vip_exp(::int32_t value) {
  _internal_set_vip_exp(value);
  // @@protoc_insertion_point(field_set:DBRoleData.vip_exp)
}
inline ::int32_t DBRoleData::_internal_vip_exp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vip_exp_;
}
inline void DBRoleData::_internal_set_vip_exp(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vip_exp_ = value;
}

// int64 fight_value = 10;
inline void DBRoleData::clear_fight_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fight_value_ = ::int64_t{0};
}
inline ::int64_t DBRoleData::fight_value() const {
  // @@protoc_insertion_point(field_get:DBRoleData.fight_value)
  return _internal_fight_value();
}
inline void DBRoleData::set_fight_value(::int64_t value) {
  _internal_set_fight_value(value);
  // @@protoc_insertion_point(field_set:DBRoleData.fight_value)
}
inline ::int64_t DBRoleData::_internal_fight_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fight_value_;
}
inline void DBRoleData::_internal_set_fight_value(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fight_value_ = value;
}

// int32 city_copy_id = 11;
inline void DBRoleData::clear_city_copy_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_copy_id_ = 0;
}
inline ::int32_t DBRoleData::city_copy_id() const {
  // @@protoc_insertion_point(field_get:DBRoleData.city_copy_id)
  return _internal_city_copy_id();
}
inline void DBRoleData::set_city_copy_id(::int32_t value) {
  _internal_set_city_copy_id(value);
  // @@protoc_insertion_point(field_set:DBRoleData.city_copy_id)
}
inline ::int32_t DBRoleData::_internal_city_copy_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.city_copy_id_;
}
inline void DBRoleData::_internal_set_city_copy_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_copy_id_ = value;
}

// repeated int64 action = 12;
inline int DBRoleData::_internal_action_size() const {
  return _internal_action().size();
}
inline int DBRoleData::action_size() const {
  return _internal_action_size();
}
inline void DBRoleData::clear_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_.Clear();
}
inline ::int64_t DBRoleData::action(int index) const {
  // @@protoc_insertion_point(field_get:DBRoleData.action)
  return _internal_action().Get(index);
}
inline void DBRoleData::set_action(int index, ::int64_t value) {
  _internal_mutable_action()->Set(index, value);
  // @@protoc_insertion_point(field_set:DBRoleData.action)
}
inline void DBRoleData::add_action(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_action()->Add(value);
  // @@protoc_insertion_point(field_add:DBRoleData.action)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& DBRoleData::action() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DBRoleData.action)
  return _internal_action();
}
inline ::google::protobuf::RepeatedField<::int64_t>* DBRoleData::mutable_action()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DBRoleData.action)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_action();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
DBRoleData::_internal_action() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.action_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* DBRoleData::_internal_mutable_action() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.action_;
}

// repeated int64 action_time = 13;
inline int DBRoleData::_internal_action_time_size() const {
  return _internal_action_time().size();
}
inline int DBRoleData::action_time_size() const {
  return _internal_action_time_size();
}
inline void DBRoleData::clear_action_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_time_.Clear();
}
inline ::int64_t DBRoleData::action_time(int index) const {
  // @@protoc_insertion_point(field_get:DBRoleData.action_time)
  return _internal_action_time().Get(index);
}
inline void DBRoleData::set_action_time(int index, ::int64_t value) {
  _internal_mutable_action_time()->Set(index, value);
  // @@protoc_insertion_point(field_set:DBRoleData.action_time)
}
inline void DBRoleData::add_action_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_action_time()->Add(value);
  // @@protoc_insertion_point(field_add:DBRoleData.action_time)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& DBRoleData::action_time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DBRoleData.action_time)
  return _internal_action_time();
}
inline ::google::protobuf::RepeatedField<::int64_t>* DBRoleData::mutable_action_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DBRoleData.action_time)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_action_time();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
DBRoleData::_internal_action_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.action_time_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* DBRoleData::_internal_mutable_action_time() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.action_time_;
}

// uint64 create_time = 14;
inline void DBRoleData::clear_create_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.create_time_ = ::uint64_t{0u};
}
inline ::uint64_t DBRoleData::create_time() const {
  // @@protoc_insertion_point(field_get:DBRoleData.create_time)
  return _internal_create_time();
}
inline void DBRoleData::set_create_time(::uint64_t value) {
  _internal_set_create_time(value);
  // @@protoc_insertion_point(field_set:DBRoleData.create_time)
}
inline ::uint64_t DBRoleData::_internal_create_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.create_time_;
}
inline void DBRoleData::_internal_set_create_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.create_time_ = value;
}

// uint64 logon_time = 15;
inline void DBRoleData::clear_logon_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logon_time_ = ::uint64_t{0u};
}
inline ::uint64_t DBRoleData::logon_time() const {
  // @@protoc_insertion_point(field_get:DBRoleData.logon_time)
  return _internal_logon_time();
}
inline void DBRoleData::set_logon_time(::uint64_t value) {
  _internal_set_logon_time(value);
  // @@protoc_insertion_point(field_set:DBRoleData.logon_time)
}
inline ::uint64_t DBRoleData::_internal_logon_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.logon_time_;
}
inline void DBRoleData::_internal_set_logon_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logon_time_ = value;
}

// uint64 logoff_time = 16;
inline void DBRoleData::clear_logoff_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logoff_time_ = ::uint64_t{0u};
}
inline ::uint64_t DBRoleData::logoff_time() const {
  // @@protoc_insertion_point(field_get:DBRoleData.logoff_time)
  return _internal_logoff_time();
}
inline void DBRoleData::set_logoff_time(::uint64_t value) {
  _internal_set_logoff_time(value);
  // @@protoc_insertion_point(field_set:DBRoleData.logoff_time)
}
inline ::uint64_t DBRoleData::_internal_logoff_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.logoff_time_;
}
inline void DBRoleData::_internal_set_logoff_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logoff_time_ = value;
}

// uint64 guild_id = 17;
inline void DBRoleData::clear_guild_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guild_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBRoleData::guild_id() const {
  // @@protoc_insertion_point(field_get:DBRoleData.guild_id)
  return _internal_guild_id();
}
inline void DBRoleData::set_guild_id(::uint64_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:DBRoleData.guild_id)
}
inline ::uint64_t DBRoleData::_internal_guild_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guild_id_;
}
inline void DBRoleData::_internal_set_guild_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guild_id_ = value;
}

// int32 channel = 18;
inline void DBRoleData::clear_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_ = 0;
}
inline ::int32_t DBRoleData::channel() const {
  // @@protoc_insertion_point(field_get:DBRoleData.channel)
  return _internal_channel();
}
inline void DBRoleData::set_channel(::int32_t value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:DBRoleData.channel)
}
inline ::int32_t DBRoleData::_internal_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_;
}
inline void DBRoleData::_internal_set_channel(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_ = value;
}

// uint32 online_time = 19;
inline void DBRoleData::clear_online_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.online_time_ = 0u;
}
inline ::uint32_t DBRoleData::online_time() const {
  // @@protoc_insertion_point(field_get:DBRoleData.online_time)
  return _internal_online_time();
}
inline void DBRoleData::set_online_time(::uint32_t value) {
  _internal_set_online_time(value);
  // @@protoc_insertion_point(field_set:DBRoleData.online_time)
}
inline ::uint32_t DBRoleData::_internal_online_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.online_time_;
}
inline void DBRoleData::_internal_set_online_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.online_time_ = value;
}

// -------------------------------------------------------------------

// DBBagItem

// uint64 guid = 1;
inline void DBBagItem::clear_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = ::uint64_t{0u};
}
inline ::uint64_t DBBagItem::guid() const {
  // @@protoc_insertion_point(field_get:DBBagItem.guid)
  return _internal_guid();
}
inline void DBBagItem::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:DBBagItem.guid)
}
inline ::uint64_t DBBagItem::_internal_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guid_;
}
inline void DBBagItem::_internal_set_guid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = value;
}

// uint64 role_id = 2;
inline void DBBagItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBBagItem::role_id() const {
  // @@protoc_insertion_point(field_get:DBBagItem.role_id)
  return _internal_role_id();
}
inline void DBBagItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:DBBagItem.role_id)
}
inline ::uint64_t DBBagItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void DBBagItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint64 item_guid = 3;
inline void DBBagItem::clear_item_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_guid_ = ::uint64_t{0u};
}
inline ::uint64_t DBBagItem::item_guid() const {
  // @@protoc_insertion_point(field_get:DBBagItem.item_guid)
  return _internal_item_guid();
}
inline void DBBagItem::set_item_guid(::uint64_t value) {
  _internal_set_item_guid(value);
  // @@protoc_insertion_point(field_set:DBBagItem.item_guid)
}
inline ::uint64_t DBBagItem::_internal_item_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.item_guid_;
}
inline void DBBagItem::_internal_set_item_guid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_guid_ = value;
}

// uint32 item_id = 4;
inline void DBBagItem::clear_item_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_id_ = 0u;
}
inline ::uint32_t DBBagItem::item_id() const {
  // @@protoc_insertion_point(field_get:DBBagItem.item_id)
  return _internal_item_id();
}
inline void DBBagItem::set_item_id(::uint32_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:DBBagItem.item_id)
}
inline ::uint32_t DBBagItem::_internal_item_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.item_id_;
}
inline void DBBagItem::_internal_set_item_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_id_ = value;
}

// int64 count = 5;
inline void DBBagItem::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = ::int64_t{0};
}
inline ::int64_t DBBagItem::count() const {
  // @@protoc_insertion_point(field_get:DBBagItem.count)
  return _internal_count();
}
inline void DBBagItem::set_count(::int64_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:DBBagItem.count)
}
inline ::int64_t DBBagItem::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void DBBagItem::_internal_set_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// .BindType bind = 6;
inline void DBBagItem::clear_bind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bind_ = 0;
}
inline ::BindType DBBagItem::bind() const {
  // @@protoc_insertion_point(field_get:DBBagItem.bind)
  return _internal_bind();
}
inline void DBBagItem::set_bind(::BindType value) {
  _internal_set_bind(value);
  // @@protoc_insertion_point(field_set:DBBagItem.bind)
}
inline ::BindType DBBagItem::_internal_bind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::BindType>(_impl_.bind_);
}
inline void DBBagItem::_internal_set_bind(::BindType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bind_ = value;
}

// .ItemStatus status = 7;
inline void DBBagItem::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::ItemStatus DBBagItem::status() const {
  // @@protoc_insertion_point(field_get:DBBagItem.status)
  return _internal_status();
}
inline void DBBagItem::set_status(::ItemStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:DBBagItem.status)
}
inline ::ItemStatus DBBagItem::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ItemStatus>(_impl_.status_);
}
inline void DBBagItem::_internal_set_status(::ItemStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// DBBagItems

// repeated .DBBagItem items = 1;
inline int DBBagItems::_internal_items_size() const {
  return _internal_items().size();
}
inline int DBBagItems::items_size() const {
  return _internal_items_size();
}
inline void DBBagItems::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::DBBagItem* DBBagItems::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DBBagItems.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DBBagItem>* DBBagItems::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DBBagItems.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DBBagItem& DBBagItems::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBBagItems.items)
  return _internal_items().Get(index);
}
inline ::DBBagItem* DBBagItems::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DBBagItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:DBBagItems.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DBBagItem>& DBBagItems::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DBBagItems.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DBBagItem>&
DBBagItems::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DBBagItem>*
DBBagItems::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// DBCopyItem

// uint64 role_id = 1;
inline void DBCopyItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBCopyItem::role_id() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.role_id)
  return _internal_role_id();
}
inline void DBCopyItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:DBCopyItem.role_id)
}
inline ::uint64_t DBCopyItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void DBCopyItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint32 copy_id = 2;
inline void DBCopyItem::clear_copy_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.copy_id_ = 0u;
}
inline ::uint32_t DBCopyItem::copy_id() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.copy_id)
  return _internal_copy_id();
}
inline void DBCopyItem::set_copy_id(::uint32_t value) {
  _internal_set_copy_id(value);
  // @@protoc_insertion_point(field_set:DBCopyItem.copy_id)
}
inline ::uint32_t DBCopyItem::_internal_copy_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.copy_id_;
}
inline void DBCopyItem::_internal_set_copy_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.copy_id_ = value;
}

// int32 star_num = 3;
inline void DBCopyItem::clear_star_num() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_num_ = 0;
}
inline ::int32_t DBCopyItem::star_num() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.star_num)
  return _internal_star_num();
}
inline void DBCopyItem::set_star_num(::int32_t value) {
  _internal_set_star_num(value);
  // @@protoc_insertion_point(field_set:DBCopyItem.star_num)
}
inline ::int32_t DBCopyItem::_internal_star_num() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_num_;
}
inline void DBCopyItem::_internal_set_star_num(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_num_ = value;
}

// int32 battle_cnt = 4;
inline void DBCopyItem::clear_battle_cnt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.battle_cnt_ = 0;
}
inline ::int32_t DBCopyItem::battle_cnt() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.battle_cnt)
  return _internal_battle_cnt();
}
inline void DBCopyItem::set_battle_cnt(::int32_t value) {
  _internal_set_battle_cnt(value);
  // @@protoc_insertion_point(field_set:DBCopyItem.battle_cnt)
}
inline ::int32_t DBCopyItem::_internal_battle_cnt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.battle_cnt_;
}
inline void DBCopyItem::_internal_set_battle_cnt(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.battle_cnt_ = value;
}

// int32 reset_cnt = 5;
inline void DBCopyItem::clear_reset_cnt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reset_cnt_ = 0;
}
inline ::int32_t DBCopyItem::reset_cnt() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.reset_cnt)
  return _internal_reset_cnt();
}
inline void DBCopyItem::set_reset_cnt(::int32_t value) {
  _internal_set_reset_cnt(value);
  // @@protoc_insertion_point(field_set:DBCopyItem.reset_cnt)
}
inline ::int32_t DBCopyItem::_internal_reset_cnt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reset_cnt_;
}
inline void DBCopyItem::_internal_set_reset_cnt(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reset_cnt_ = value;
}

// uint64 battle_time = 6;
inline void DBCopyItem::clear_battle_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.battle_time_ = ::uint64_t{0u};
}
inline ::uint64_t DBCopyItem::battle_time() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.battle_time)
  return _internal_battle_time();
}
inline void DBCopyItem::set_battle_time(::uint64_t value) {
  _internal_set_battle_time(value);
  // @@protoc_insertion_point(field_set:DBCopyItem.battle_time)
}
inline ::uint64_t DBCopyItem::_internal_battle_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.battle_time_;
}
inline void DBCopyItem::_internal_set_battle_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.battle_time_ = value;
}

// uint64 reset_time = 7;
inline void DBCopyItem::clear_reset_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reset_time_ = ::uint64_t{0u};
}
inline ::uint64_t DBCopyItem::reset_time() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.reset_time)
  return _internal_reset_time();
}
inline void DBCopyItem::set_reset_time(::uint64_t value) {
  _internal_set_reset_time(value);
  // @@protoc_insertion_point(field_set:DBCopyItem.reset_time)
}
inline ::uint64_t DBCopyItem::_internal_reset_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reset_time_;
}
inline void DBCopyItem::_internal_set_reset_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reset_time_ = value;
}

// -------------------------------------------------------------------

// DBChapterItem

// uint64 role_id = 1;
inline void DBChapterItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBChapterItem::role_id() const {
  // @@protoc_insertion_point(field_get:DBChapterItem.role_id)
  return _internal_role_id();
}
inline void DBChapterItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:DBChapterItem.role_id)
}
inline ::uint64_t DBChapterItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void DBChapterItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint32 copy_type = 2;
inline void DBChapterItem::clear_copy_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.copy_type_ = 0u;
}
inline ::uint32_t DBChapterItem::copy_type() const {
  // @@protoc_insertion_point(field_get:DBChapterItem.copy_type)
  return _internal_copy_type();
}
inline void DBChapterItem::set_copy_type(::uint32_t value) {
  _internal_set_copy_type(value);
  // @@protoc_insertion_point(field_set:DBChapterItem.copy_type)
}
inline ::uint32_t DBChapterItem::_internal_copy_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.copy_type_;
}
inline void DBChapterItem::_internal_set_copy_type(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.copy_type_ = value;
}

// uint32 chapter_id = 3;
inline void DBChapterItem::clear_chapter_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chapter_id_ = 0u;
}
inline ::uint32_t DBChapterItem::chapter_id() const {
  // @@protoc_insertion_point(field_get:DBChapterItem.chapter_id)
  return _internal_chapter_id();
}
inline void DBChapterItem::set_chapter_id(::uint32_t value) {
  _internal_set_chapter_id(value);
  // @@protoc_insertion_point(field_set:DBChapterItem.chapter_id)
}
inline ::uint32_t DBChapterItem::_internal_chapter_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chapter_id_;
}
inline void DBChapterItem::_internal_set_chapter_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chapter_id_ = value;
}

// uint32 star_award = 4;
inline void DBChapterItem::clear_star_award() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_award_ = 0u;
}
inline ::uint32_t DBChapterItem::star_award() const {
  // @@protoc_insertion_point(field_get:DBChapterItem.star_award)
  return _internal_star_award();
}
inline void DBChapterItem::set_star_award(::uint32_t value) {
  _internal_set_star_award(value);
  // @@protoc_insertion_point(field_set:DBChapterItem.star_award)
}
inline ::uint32_t DBChapterItem::_internal_star_award() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_award_;
}
inline void DBChapterItem::_internal_set_star_award(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_award_ = value;
}

// uint32 scene_award = 5;
inline void DBChapterItem::clear_scene_award() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_award_ = 0u;
}
inline ::uint32_t DBChapterItem::scene_award() const {
  // @@protoc_insertion_point(field_get:DBChapterItem.scene_award)
  return _internal_scene_award();
}
inline void DBChapterItem::set_scene_award(::uint32_t value) {
  _internal_set_scene_award(value);
  // @@protoc_insertion_point(field_set:DBChapterItem.scene_award)
}
inline ::uint32_t DBChapterItem::_internal_scene_award() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_award_;
}
inline void DBChapterItem::_internal_set_scene_award(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_award_ = value;
}

// -------------------------------------------------------------------

// DBCopies

// repeated .DBCopyItem copies = 1;
inline int DBCopies::_internal_copies_size() const {
  return _internal_copies().size();
}
inline int DBCopies::copies_size() const {
  return _internal_copies_size();
}
inline void DBCopies::clear_copies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.copies_.Clear();
}
inline ::DBCopyItem* DBCopies::mutable_copies(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DBCopies.copies)
  return _internal_mutable_copies()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DBCopyItem>* DBCopies::mutable_copies()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DBCopies.copies)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_copies();
}
inline const ::DBCopyItem& DBCopies::copies(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBCopies.copies)
  return _internal_copies().Get(index);
}
inline ::DBCopyItem* DBCopies::add_copies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DBCopyItem* _add = _internal_mutable_copies()->Add();
  // @@protoc_insertion_point(field_add:DBCopies.copies)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DBCopyItem>& DBCopies::copies() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DBCopies.copies)
  return _internal_copies();
}
inline const ::google::protobuf::RepeatedPtrField<::DBCopyItem>&
DBCopies::_internal_copies() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.copies_;
}
inline ::google::protobuf::RepeatedPtrField<::DBCopyItem>*
DBCopies::_internal_mutable_copies() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.copies_;
}

// repeated .DBChapterItem chapters = 2;
inline int DBCopies::_internal_chapters_size() const {
  return _internal_chapters().size();
}
inline int DBCopies::chapters_size() const {
  return _internal_chapters_size();
}
inline void DBCopies::clear_chapters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chapters_.Clear();
}
inline ::DBChapterItem* DBCopies::mutable_chapters(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DBCopies.chapters)
  return _internal_mutable_chapters()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DBChapterItem>* DBCopies::mutable_chapters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DBCopies.chapters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_chapters();
}
inline const ::DBChapterItem& DBCopies::chapters(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBCopies.chapters)
  return _internal_chapters().Get(index);
}
inline ::DBChapterItem* DBCopies::add_chapters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DBChapterItem* _add = _internal_mutable_chapters()->Add();
  // @@protoc_insertion_point(field_add:DBCopies.chapters)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DBChapterItem>& DBCopies::chapters() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DBCopies.chapters)
  return _internal_chapters();
}
inline const ::google::protobuf::RepeatedPtrField<::DBChapterItem>&
DBCopies::_internal_chapters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chapters_;
}
inline ::google::protobuf::RepeatedPtrField<::DBChapterItem>*
DBCopies::_internal_mutable_chapters() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.chapters_;
}

// -------------------------------------------------------------------

// DBEquipItem

// uint64 role_id = 1;
inline void DBEquipItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBEquipItem::role_id() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.role_id)
  return _internal_role_id();
}
inline void DBEquipItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.role_id)
}
inline ::uint64_t DBEquipItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void DBEquipItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint64 guid = 2;
inline void DBEquipItem::clear_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = ::uint64_t{0u};
}
inline ::uint64_t DBEquipItem::guid() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.guid)
  return _internal_guid();
}
inline void DBEquipItem::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.guid)
}
inline ::uint64_t DBEquipItem::_internal_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guid_;
}
inline void DBEquipItem::_internal_set_guid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = value;
}

// int32 equip_id = 3;
inline void DBEquipItem::clear_equip_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equip_id_ = 0;
}
inline ::int32_t DBEquipItem::equip_id() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.equip_id)
  return _internal_equip_id();
}
inline void DBEquipItem::set_equip_id(::int32_t value) {
  _internal_set_equip_id(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.equip_id)
}
inline ::int32_t DBEquipItem::_internal_equip_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.equip_id_;
}
inline void DBEquipItem::_internal_set_equip_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equip_id_ = value;
}

// int32 strength_lvl = 4;
inline void DBEquipItem::clear_strength_lvl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = 0;
}
inline ::int32_t DBEquipItem::strength_lvl() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.strength_lvl)
  return _internal_strength_lvl();
}
inline void DBEquipItem::set_strength_lvl(::int32_t value) {
  _internal_set_strength_lvl(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.strength_lvl)
}
inline ::int32_t DBEquipItem::_internal_strength_lvl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.strength_lvl_;
}
inline void DBEquipItem::_internal_set_strength_lvl(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = value;
}

// int32 refine_level = 5;
inline void DBEquipItem::clear_refine_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = 0;
}
inline ::int32_t DBEquipItem::refine_level() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.refine_level)
  return _internal_refine_level();
}
inline void DBEquipItem::set_refine_level(::int32_t value) {
  _internal_set_refine_level(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.refine_level)
}
inline ::int32_t DBEquipItem::_internal_refine_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refine_level_;
}
inline void DBEquipItem::_internal_set_refine_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = value;
}

// int32 star_level = 6;
inline void DBEquipItem::clear_star_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = 0;
}
inline ::int32_t DBEquipItem::star_level() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.star_level)
  return _internal_star_level();
}
inline void DBEquipItem::set_star_level(::int32_t value) {
  _internal_set_star_level(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.star_level)
}
inline ::int32_t DBEquipItem::_internal_star_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_level_;
}
inline void DBEquipItem::_internal_set_star_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = value;
}

// int32 refine_exp = 7;
inline void DBEquipItem::clear_refine_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_exp_ = 0;
}
inline ::int32_t DBEquipItem::refine_exp() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.refine_exp)
  return _internal_refine_exp();
}
inline void DBEquipItem::set_refine_exp(::int32_t value) {
  _internal_set_refine_exp(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.refine_exp)
}
inline ::int32_t DBEquipItem::_internal_refine_exp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refine_exp_;
}
inline void DBEquipItem::_internal_set_refine_exp(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_exp_ = value;
}

// int32 star_exp = 8;
inline void DBEquipItem::clear_star_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_exp_ = 0;
}
inline ::int32_t DBEquipItem::star_exp() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.star_exp)
  return _internal_star_exp();
}
inline void DBEquipItem::set_star_exp(::int32_t value) {
  _internal_set_star_exp(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.star_exp)
}
inline ::int32_t DBEquipItem::_internal_star_exp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_exp_;
}
inline void DBEquipItem::_internal_set_star_exp(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_exp_ = value;
}

// bool is_using = 9;
inline void DBEquipItem::clear_is_using() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_using_ = false;
}
inline bool DBEquipItem::is_using() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.is_using)
  return _internal_is_using();
}
inline void DBEquipItem::set_is_using(bool value) {
  _internal_set_is_using(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.is_using)
}
inline bool DBEquipItem::_internal_is_using() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_using_;
}
inline void DBEquipItem::_internal_set_is_using(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_using_ = value;
}

// -------------------------------------------------------------------

// DBEquipments

// repeated .DBEquipItem items = 1;
inline int DBEquipments::_internal_items_size() const {
  return _internal_items().size();
}
inline int DBEquipments::items_size() const {
  return _internal_items_size();
}
inline void DBEquipments::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::DBEquipItem* DBEquipments::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DBEquipments.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DBEquipItem>* DBEquipments::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DBEquipments.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DBEquipItem& DBEquipments::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBEquipments.items)
  return _internal_items().Get(index);
}
inline ::DBEquipItem* DBEquipments::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DBEquipItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:DBEquipments.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DBEquipItem>& DBEquipments::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DBEquipments.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DBEquipItem>&
DBEquipments::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DBEquipItem>*
DBEquipments::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// DBGemItem

// uint64 role_id = 1;
inline void DBGemItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBGemItem::role_id() const {
  // @@protoc_insertion_point(field_get:DBGemItem.role_id)
  return _internal_role_id();
}
inline void DBGemItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:DBGemItem.role_id)
}
inline ::uint64_t DBGemItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void DBGemItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint64 guid = 2;
inline void DBGemItem::clear_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = ::uint64_t{0u};
}
inline ::uint64_t DBGemItem::guid() const {
  // @@protoc_insertion_point(field_get:DBGemItem.guid)
  return _internal_guid();
}
inline void DBGemItem::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:DBGemItem.guid)
}
inline ::uint64_t DBGemItem::_internal_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guid_;
}
inline void DBGemItem::_internal_set_guid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = value;
}

// int32 gem_id = 3;
inline void DBGemItem::clear_gem_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gem_id_ = 0;
}
inline ::int32_t DBGemItem::gem_id() const {
  // @@protoc_insertion_point(field_get:DBGemItem.gem_id)
  return _internal_gem_id();
}
inline void DBGemItem::set_gem_id(::int32_t value) {
  _internal_set_gem_id(value);
  // @@protoc_insertion_point(field_set:DBGemItem.gem_id)
}
inline ::int32_t DBGemItem::_internal_gem_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gem_id_;
}
inline void DBGemItem::_internal_set_gem_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gem_id_ = value;
}

// int32 strength_lvl = 4;
inline void DBGemItem::clear_strength_lvl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = 0;
}
inline ::int32_t DBGemItem::strength_lvl() const {
  // @@protoc_insertion_point(field_get:DBGemItem.strength_lvl)
  return _internal_strength_lvl();
}
inline void DBGemItem::set_strength_lvl(::int32_t value) {
  _internal_set_strength_lvl(value);
  // @@protoc_insertion_point(field_set:DBGemItem.strength_lvl)
}
inline ::int32_t DBGemItem::_internal_strength_lvl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.strength_lvl_;
}
inline void DBGemItem::_internal_set_strength_lvl(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = value;
}

// int32 refine_level = 5;
inline void DBGemItem::clear_refine_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = 0;
}
inline ::int32_t DBGemItem::refine_level() const {
  // @@protoc_insertion_point(field_get:DBGemItem.refine_level)
  return _internal_refine_level();
}
inline void DBGemItem::set_refine_level(::int32_t value) {
  _internal_set_refine_level(value);
  // @@protoc_insertion_point(field_set:DBGemItem.refine_level)
}
inline ::int32_t DBGemItem::_internal_refine_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refine_level_;
}
inline void DBGemItem::_internal_set_refine_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = value;
}

// int32 star_level = 6;
inline void DBGemItem::clear_star_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = 0;
}
inline ::int32_t DBGemItem::star_level() const {
  // @@protoc_insertion_point(field_get:DBGemItem.star_level)
  return _internal_star_level();
}
inline void DBGemItem::set_star_level(::int32_t value) {
  _internal_set_star_level(value);
  // @@protoc_insertion_point(field_set:DBGemItem.star_level)
}
inline ::int32_t DBGemItem::_internal_star_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_level_;
}
inline void DBGemItem::_internal_set_star_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = value;
}

// int32 refine_exp = 7;
inline void DBGemItem::clear_refine_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_exp_ = 0;
}
inline ::int32_t DBGemItem::refine_exp() const {
  // @@protoc_insertion_point(field_get:DBGemItem.refine_exp)
  return _internal_refine_exp();
}
inline void DBGemItem::set_refine_exp(::int32_t value) {
  _internal_set_refine_exp(value);
  // @@protoc_insertion_point(field_set:DBGemItem.refine_exp)
}
inline ::int32_t DBGemItem::_internal_refine_exp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refine_exp_;
}
inline void DBGemItem::_internal_set_refine_exp(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_exp_ = value;
}

// int32 star_exp = 8;
inline void DBGemItem::clear_star_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_exp_ = 0;
}
inline ::int32_t DBGemItem::star_exp() const {
  // @@protoc_insertion_point(field_get:DBGemItem.star_exp)
  return _internal_star_exp();
}
inline void DBGemItem::set_star_exp(::int32_t value) {
  _internal_set_star_exp(value);
  // @@protoc_insertion_point(field_set:DBGemItem.star_exp)
}
inline ::int32_t DBGemItem::_internal_star_exp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_exp_;
}
inline void DBGemItem::_internal_set_star_exp(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_exp_ = value;
}

// int32 pos = 9;
inline void DBGemItem::clear_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pos_ = 0;
}
inline ::int32_t DBGemItem::pos() const {
  // @@protoc_insertion_point(field_get:DBGemItem.pos)
  return _internal_pos();
}
inline void DBGemItem::set_pos(::int32_t value) {
  _internal_set_pos(value);
  // @@protoc_insertion_point(field_set:DBGemItem.pos)
}
inline ::int32_t DBGemItem::_internal_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pos_;
}
inline void DBGemItem::_internal_set_pos(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pos_ = value;
}

// -------------------------------------------------------------------

// DBGems

// repeated .DBGemItem items = 1;
inline int DBGems::_internal_items_size() const {
  return _internal_items().size();
}
inline int DBGems::items_size() const {
  return _internal_items_size();
}
inline void DBGems::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::DBGemItem* DBGems::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DBGems.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DBGemItem>* DBGems::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DBGems.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DBGemItem& DBGems::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBGems.items)
  return _internal_items().Get(index);
}
inline ::DBGemItem* DBGems::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DBGemItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:DBGems.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DBGemItem>& DBGems::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DBGems.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DBGemItem>&
DBGems::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DBGemItem>*
DBGems::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// DBSkillItem

// uint64 role_id = 1;
inline void DBSkillItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBSkillItem::role_id() const {
  // @@protoc_insertion_point(field_get:DBSkillItem.role_id)
  return _internal_role_id();
}
inline void DBSkillItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:DBSkillItem.role_id)
}
inline ::uint64_t DBSkillItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void DBSkillItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint32 skill_id = 2;
inline void DBSkillItem::clear_skill_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skill_id_ = 0u;
}
inline ::uint32_t DBSkillItem::skill_id() const {
  // @@protoc_insertion_point(field_get:DBSkillItem.skill_id)
  return _internal_skill_id();
}
inline void DBSkillItem::set_skill_id(::uint32_t value) {
  _internal_set_skill_id(value);
  // @@protoc_insertion_point(field_set:DBSkillItem.skill_id)
}
inline ::uint32_t DBSkillItem::_internal_skill_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.skill_id_;
}
inline void DBSkillItem::_internal_set_skill_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skill_id_ = value;
}

// int32 level = 3;
inline void DBSkillItem::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0;
}
inline ::int32_t DBSkillItem::level() const {
  // @@protoc_insertion_point(field_get:DBSkillItem.level)
  return _internal_level();
}
inline void DBSkillItem::set_level(::int32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:DBSkillItem.level)
}
inline ::int32_t DBSkillItem::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void DBSkillItem::_internal_set_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// int32 key_pos = 4;
inline void DBSkillItem::clear_key_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_pos_ = 0;
}
inline ::int32_t DBSkillItem::key_pos() const {
  // @@protoc_insertion_point(field_get:DBSkillItem.key_pos)
  return _internal_key_pos();
}
inline void DBSkillItem::set_key_pos(::int32_t value) {
  _internal_set_key_pos(value);
  // @@protoc_insertion_point(field_set:DBSkillItem.key_pos)
}
inline ::int32_t DBSkillItem::_internal_key_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_pos_;
}
inline void DBSkillItem::_internal_set_key_pos(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_pos_ = value;
}

// -------------------------------------------------------------------

// DBSkills

// repeated .DBSkillItem items = 1;
inline int DBSkills::_internal_items_size() const {
  return _internal_items().size();
}
inline int DBSkills::items_size() const {
  return _internal_items_size();
}
inline void DBSkills::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::DBSkillItem* DBSkills::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DBSkills.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DBSkillItem>* DBSkills::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DBSkills.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DBSkillItem& DBSkills::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBSkills.items)
  return _internal_items().Get(index);
}
inline ::DBSkillItem* DBSkills::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DBSkillItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:DBSkills.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DBSkillItem>& DBSkills::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DBSkills.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DBSkillItem>&
DBSkills::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DBSkillItem>*
DBSkills::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// DBPetItem

// uint64 role_id = 1;
inline void DBPetItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBPetItem::role_id() const {
  // @@protoc_insertion_point(field_get:DBPetItem.role_id)
  return _internal_role_id();
}
inline void DBPetItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:DBPetItem.role_id)
}
inline ::uint64_t DBPetItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void DBPetItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint64 guid = 2;
inline void DBPetItem::clear_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = ::uint64_t{0u};
}
inline ::uint64_t DBPetItem::guid() const {
  // @@protoc_insertion_point(field_get:DBPetItem.guid)
  return _internal_guid();
}
inline void DBPetItem::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:DBPetItem.guid)
}
inline ::uint64_t DBPetItem::_internal_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guid_;
}
inline void DBPetItem::_internal_set_guid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = value;
}

// int32 pet_id = 3;
inline void DBPetItem::clear_pet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pet_id_ = 0;
}
inline ::int32_t DBPetItem::pet_id() const {
  // @@protoc_insertion_point(field_get:DBPetItem.pet_id)
  return _internal_pet_id();
}
inline void DBPetItem::set_pet_id(::int32_t value) {
  _internal_set_pet_id(value);
  // @@protoc_insertion_point(field_set:DBPetItem.pet_id)
}
inline ::int32_t DBPetItem::_internal_pet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pet_id_;
}
inline void DBPetItem::_internal_set_pet_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pet_id_ = value;
}

// int32 strength_lvl = 4;
inline void DBPetItem::clear_strength_lvl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = 0;
}
inline ::int32_t DBPetItem::strength_lvl() const {
  // @@protoc_insertion_point(field_get:DBPetItem.strength_lvl)
  return _internal_strength_lvl();
}
inline void DBPetItem::set_strength_lvl(::int32_t value) {
  _internal_set_strength_lvl(value);
  // @@protoc_insertion_point(field_set:DBPetItem.strength_lvl)
}
inline ::int32_t DBPetItem::_internal_strength_lvl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.strength_lvl_;
}
inline void DBPetItem::_internal_set_strength_lvl(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = value;
}

// int32 refine_level = 5;
inline void DBPetItem::clear_refine_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = 0;
}
inline ::int32_t DBPetItem::refine_level() const {
  // @@protoc_insertion_point(field_get:DBPetItem.refine_level)
  return _internal_refine_level();
}
inline void DBPetItem::set_refine_level(::int32_t value) {
  _internal_set_refine_level(value);
  // @@protoc_insertion_point(field_set:DBPetItem.refine_level)
}
inline ::int32_t DBPetItem::_internal_refine_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refine_level_;
}
inline void DBPetItem::_internal_set_refine_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = value;
}

// int32 star_level = 6;
inline void DBPetItem::clear_star_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = 0;
}
inline ::int32_t DBPetItem::star_level() const {
  // @@protoc_insertion_point(field_get:DBPetItem.star_level)
  return _internal_star_level();
}
inline void DBPetItem::set_star_level(::int32_t value) {
  _internal_set_star_level(value);
  // @@protoc_insertion_point(field_set:DBPetItem.star_level)
}
inline ::int32_t DBPetItem::_internal_star_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_level_;
}
inline void DBPetItem::_internal_set_star_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = value;
}

// bool is_using = 7;
inline void DBPetItem::clear_is_using() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_using_ = false;
}
inline bool DBPetItem::is_using() const {
  // @@protoc_insertion_point(field_get:DBPetItem.is_using)
  return _internal_is_using();
}
inline void DBPetItem::set_is_using(bool value) {
  _internal_set_is_using(value);
  // @@protoc_insertion_point(field_set:DBPetItem.is_using)
}
inline bool DBPetItem::_internal_is_using() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_using_;
}
inline void DBPetItem::_internal_set_is_using(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_using_ = value;
}

// -------------------------------------------------------------------

// DBPets

// repeated .DBPetItem items = 1;
inline int DBPets::_internal_items_size() const {
  return _internal_items().size();
}
inline int DBPets::items_size() const {
  return _internal_items_size();
}
inline void DBPets::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::DBPetItem* DBPets::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DBPets.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DBPetItem>* DBPets::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DBPets.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DBPetItem& DBPets::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBPets.items)
  return _internal_items().Get(index);
}
inline ::DBPetItem* DBPets::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DBPetItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:DBPets.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DBPetItem>& DBPets::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DBPets.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DBPetItem>&
DBPets::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DBPetItem>*
DBPets::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// DBMountItem

// uint64 role_id = 1;
inline void DBMountItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBMountItem::role_id() const {
  // @@protoc_insertion_point(field_get:DBMountItem.role_id)
  return _internal_role_id();
}
inline void DBMountItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:DBMountItem.role_id)
}
inline ::uint64_t DBMountItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void DBMountItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint64 guid = 2;
inline void DBMountItem::clear_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = ::uint64_t{0u};
}
inline ::uint64_t DBMountItem::guid() const {
  // @@protoc_insertion_point(field_get:DBMountItem.guid)
  return _internal_guid();
}
inline void DBMountItem::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:DBMountItem.guid)
}
inline ::uint64_t DBMountItem::_internal_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guid_;
}
inline void DBMountItem::_internal_set_guid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = value;
}

// int32 mount_id = 3;
inline void DBMountItem::clear_mount_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mount_id_ = 0;
}
inline ::int32_t DBMountItem::mount_id() const {
  // @@protoc_insertion_point(field_get:DBMountItem.mount_id)
  return _internal_mount_id();
}
inline void DBMountItem::set_mount_id(::int32_t value) {
  _internal_set_mount_id(value);
  // @@protoc_insertion_point(field_set:DBMountItem.mount_id)
}
inline ::int32_t DBMountItem::_internal_mount_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mount_id_;
}
inline void DBMountItem::_internal_set_mount_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mount_id_ = value;
}

// int32 strength_lvl = 4;
inline void DBMountItem::clear_strength_lvl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = 0;
}
inline ::int32_t DBMountItem::strength_lvl() const {
  // @@protoc_insertion_point(field_get:DBMountItem.strength_lvl)
  return _internal_strength_lvl();
}
inline void DBMountItem::set_strength_lvl(::int32_t value) {
  _internal_set_strength_lvl(value);
  // @@protoc_insertion_point(field_set:DBMountItem.strength_lvl)
}
inline ::int32_t DBMountItem::_internal_strength_lvl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.strength_lvl_;
}
inline void DBMountItem::_internal_set_strength_lvl(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = value;
}

// int32 refine_level = 5;
inline void DBMountItem::clear_refine_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = 0;
}
inline ::int32_t DBMountItem::refine_level() const {
  // @@protoc_insertion_point(field_get:DBMountItem.refine_level)
  return _internal_refine_level();
}
inline void DBMountItem::set_refine_level(::int32_t value) {
  _internal_set_refine_level(value);
  // @@protoc_insertion_point(field_set:DBMountItem.refine_level)
}
inline ::int32_t DBMountItem::_internal_refine_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refine_level_;
}
inline void DBMountItem::_internal_set_refine_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = value;
}

// int32 star_level = 6;
inline void DBMountItem::clear_star_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = 0;
}
inline ::int32_t DBMountItem::star_level() const {
  // @@protoc_insertion_point(field_get:DBMountItem.star_level)
  return _internal_star_level();
}
inline void DBMountItem::set_star_level(::int32_t value) {
  _internal_set_star_level(value);
  // @@protoc_insertion_point(field_set:DBMountItem.star_level)
}
inline ::int32_t DBMountItem::_internal_star_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_level_;
}
inline void DBMountItem::_internal_set_star_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = value;
}

// bool is_using = 7;
inline void DBMountItem::clear_is_using() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_using_ = false;
}
inline bool DBMountItem::is_using() const {
  // @@protoc_insertion_point(field_get:DBMountItem.is_using)
  return _internal_is_using();
}
inline void DBMountItem::set_is_using(bool value) {
  _internal_set_is_using(value);
  // @@protoc_insertion_point(field_set:DBMountItem.is_using)
}
inline bool DBMountItem::_internal_is_using() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_using_;
}
inline void DBMountItem::_internal_set_is_using(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_using_ = value;
}

// -------------------------------------------------------------------

// DBMounts

// repeated .DBMountItem items = 1;
inline int DBMounts::_internal_items_size() const {
  return _internal_items().size();
}
inline int DBMounts::items_size() const {
  return _internal_items_size();
}
inline void DBMounts::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::DBMountItem* DBMounts::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DBMounts.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DBMountItem>* DBMounts::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DBMounts.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DBMountItem& DBMounts::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBMounts.items)
  return _internal_items().Get(index);
}
inline ::DBMountItem* DBMounts::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DBMountItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:DBMounts.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DBMountItem>& DBMounts::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DBMounts.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DBMountItem>&
DBMounts::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DBMountItem>*
DBMounts::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// DBPartnerItem

// uint64 role_id = 1;
inline void DBPartnerItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBPartnerItem::role_id() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.role_id)
  return _internal_role_id();
}
inline void DBPartnerItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:DBPartnerItem.role_id)
}
inline ::uint64_t DBPartnerItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void DBPartnerItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint64 guid = 2;
inline void DBPartnerItem::clear_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = ::uint64_t{0u};
}
inline ::uint64_t DBPartnerItem::guid() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.guid)
  return _internal_guid();
}
inline void DBPartnerItem::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:DBPartnerItem.guid)
}
inline ::uint64_t DBPartnerItem::_internal_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guid_;
}
inline void DBPartnerItem::_internal_set_guid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = value;
}

// int32 partner_id = 3;
inline void DBPartnerItem::clear_partner_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partner_id_ = 0;
}
inline ::int32_t DBPartnerItem::partner_id() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.partner_id)
  return _internal_partner_id();
}
inline void DBPartnerItem::set_partner_id(::int32_t value) {
  _internal_set_partner_id(value);
  // @@protoc_insertion_point(field_set:DBPartnerItem.partner_id)
}
inline ::int32_t DBPartnerItem::_internal_partner_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partner_id_;
}
inline void DBPartnerItem::_internal_set_partner_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partner_id_ = value;
}

// int32 strength_lvl = 4;
inline void DBPartnerItem::clear_strength_lvl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = 0;
}
inline ::int32_t DBPartnerItem::strength_lvl() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.strength_lvl)
  return _internal_strength_lvl();
}
inline void DBPartnerItem::set_strength_lvl(::int32_t value) {
  _internal_set_strength_lvl(value);
  // @@protoc_insertion_point(field_set:DBPartnerItem.strength_lvl)
}
inline ::int32_t DBPartnerItem::_internal_strength_lvl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.strength_lvl_;
}
inline void DBPartnerItem::_internal_set_strength_lvl(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = value;
}

// int32 refine_level = 5;
inline void DBPartnerItem::clear_refine_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = 0;
}
inline ::int32_t DBPartnerItem::refine_level() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.refine_level)
  return _internal_refine_level();
}
inline void DBPartnerItem::set_refine_level(::int32_t value) {
  _internal_set_refine_level(value);
  // @@protoc_insertion_point(field_set:DBPartnerItem.refine_level)
}
inline ::int32_t DBPartnerItem::_internal_refine_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refine_level_;
}
inline void DBPartnerItem::_internal_set_refine_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = value;
}

// int32 star_level = 6;
inline void DBPartnerItem::clear_star_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = 0;
}
inline ::int32_t DBPartnerItem::star_level() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.star_level)
  return _internal_star_level();
}
inline void DBPartnerItem::set_star_level(::int32_t value) {
  _internal_set_star_level(value);
  // @@protoc_insertion_point(field_set:DBPartnerItem.star_level)
}
inline ::int32_t DBPartnerItem::_internal_star_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_level_;
}
inline void DBPartnerItem::_internal_set_star_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = value;
}

// int32 set_pos = 7;
inline void DBPartnerItem::clear_set_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_pos_ = 0;
}
inline ::int32_t DBPartnerItem::set_pos() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.set_pos)
  return _internal_set_pos();
}
inline void DBPartnerItem::set_set_pos(::int32_t value) {
  _internal_set_set_pos(value);
  // @@protoc_insertion_point(field_set:DBPartnerItem.set_pos)
}
inline ::int32_t DBPartnerItem::_internal_set_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.set_pos_;
}
inline void DBPartnerItem::_internal_set_set_pos(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_pos_ = value;
}

// -------------------------------------------------------------------

// DBPartners

// repeated .DBPartnerItem items = 1;
inline int DBPartners::_internal_items_size() const {
  return _internal_items().size();
}
inline int DBPartners::items_size() const {
  return _internal_items_size();
}
inline void DBPartners::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::DBPartnerItem* DBPartners::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DBPartners.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DBPartnerItem>* DBPartners::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DBPartners.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DBPartnerItem& DBPartners::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBPartners.items)
  return _internal_items().Get(index);
}
inline ::DBPartnerItem* DBPartners::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DBPartnerItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:DBPartners.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DBPartnerItem>& DBPartners::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DBPartners.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DBPartnerItem>&
DBPartners::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DBPartnerItem>*
DBPartners::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// DBTaskItem

// uint64 role_id = 1;
inline void DBTaskItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBTaskItem::role_id() const {
  // @@protoc_insertion_point(field_get:DBTaskItem.role_id)
  return _internal_role_id();
}
inline void DBTaskItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:DBTaskItem.role_id)
}
inline ::uint64_t DBTaskItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void DBTaskItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint32 task_id = 2;
inline void DBTaskItem::clear_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = 0u;
}
inline ::uint32_t DBTaskItem::task_id() const {
  // @@protoc_insertion_point(field_get:DBTaskItem.task_id)
  return _internal_task_id();
}
inline void DBTaskItem::set_task_id(::uint32_t value) {
  _internal_set_task_id(value);
  // @@protoc_insertion_point(field_set:DBTaskItem.task_id)
}
inline ::uint32_t DBTaskItem::_internal_task_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.task_id_;
}
inline void DBTaskItem::_internal_set_task_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = value;
}

// int32 status = 3;
inline void DBTaskItem::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::int32_t DBTaskItem::status() const {
  // @@protoc_insertion_point(field_get:DBTaskItem.status)
  return _internal_status();
}
inline void DBTaskItem::set_status(::int32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:DBTaskItem.status)
}
inline ::int32_t DBTaskItem::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void DBTaskItem::_internal_set_status(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// int32 progress = 4;
inline void DBTaskItem::clear_progress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.progress_ = 0;
}
inline ::int32_t DBTaskItem::progress() const {
  // @@protoc_insertion_point(field_get:DBTaskItem.progress)
  return _internal_progress();
}
inline void DBTaskItem::set_progress(::int32_t value) {
  _internal_set_progress(value);
  // @@protoc_insertion_point(field_set:DBTaskItem.progress)
}
inline ::int32_t DBTaskItem::_internal_progress() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.progress_;
}
inline void DBTaskItem::_internal_set_progress(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.progress_ = value;
}

// -------------------------------------------------------------------

// DBTasks

// repeated .DBTaskItem items = 1;
inline int DBTasks::_internal_items_size() const {
  return _internal_items().size();
}
inline int DBTasks::items_size() const {
  return _internal_items_size();
}
inline void DBTasks::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::DBTaskItem* DBTasks::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DBTasks.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DBTaskItem>* DBTasks::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DBTasks.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DBTaskItem& DBTasks::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBTasks.items)
  return _internal_items().Get(index);
}
inline ::DBTaskItem* DBTasks::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DBTaskItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:DBTasks.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DBTaskItem>& DBTasks::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DBTasks.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DBTaskItem>&
DBTasks::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DBTaskItem>*
DBTasks::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// DBMailItem

// uint64 role_id = 1;
inline void DBMailItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBMailItem::role_id() const {
  // @@protoc_insertion_point(field_get:DBMailItem.role_id)
  return _internal_role_id();
}
inline void DBMailItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:DBMailItem.role_id)
}
inline ::uint64_t DBMailItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void DBMailItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint64 guid = 2;
inline void DBMailItem::clear_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = ::uint64_t{0u};
}
inline ::uint64_t DBMailItem::guid() const {
  // @@protoc_insertion_point(field_get:DBMailItem.guid)
  return _internal_guid();
}
inline void DBMailItem::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:DBMailItem.guid)
}
inline ::uint64_t DBMailItem::_internal_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guid_;
}
inline void DBMailItem::_internal_set_guid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = value;
}

// uint64 group_id = 3;
inline void DBMailItem::clear_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBMailItem::group_id() const {
  // @@protoc_insertion_point(field_get:DBMailItem.group_id)
  return _internal_group_id();
}
inline void DBMailItem::set_group_id(::uint64_t value) {
  _internal_set_group_id(value);
  // @@protoc_insertion_point(field_set:DBMailItem.group_id)
}
inline ::uint64_t DBMailItem::_internal_group_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_id_;
}
inline void DBMailItem::_internal_set_group_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_ = value;
}

// uint64 time = 4;
inline void DBMailItem::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = ::uint64_t{0u};
}
inline ::uint64_t DBMailItem::time() const {
  // @@protoc_insertion_point(field_get:DBMailItem.time)
  return _internal_time();
}
inline void DBMailItem::set_time(::uint64_t value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:DBMailItem.time)
}
inline ::uint64_t DBMailItem::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_;
}
inline void DBMailItem::_internal_set_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = value;
}

// uint64 sender_id = 5;
inline void DBMailItem::clear_sender_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBMailItem::sender_id() const {
  // @@protoc_insertion_point(field_get:DBMailItem.sender_id)
  return _internal_sender_id();
}
inline void DBMailItem::set_sender_id(::uint64_t value) {
  _internal_set_sender_id(value);
  // @@protoc_insertion_point(field_set:DBMailItem.sender_id)
}
inline ::uint64_t DBMailItem::_internal_sender_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_id_;
}
inline void DBMailItem::_internal_set_sender_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_id_ = value;
}

// string sender = 6;
inline void DBMailItem::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& DBMailItem::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBMailItem.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DBMailItem::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DBMailItem.sender)
}
inline std::string* DBMailItem::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:DBMailItem.sender)
  return _s;
}
inline const std::string& DBMailItem::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void DBMailItem::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* DBMailItem::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* DBMailItem::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBMailItem.sender)
  return _impl_.sender_.Release();
}
inline void DBMailItem::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:DBMailItem.sender)
}

// uint32 mail_type = 7;
inline void DBMailItem::clear_mail_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mail_type_ = 0u;
}
inline ::uint32_t DBMailItem::mail_type() const {
  // @@protoc_insertion_point(field_get:DBMailItem.mail_type)
  return _internal_mail_type();
}
inline void DBMailItem::set_mail_type(::uint32_t value) {
  _internal_set_mail_type(value);
  // @@protoc_insertion_point(field_set:DBMailItem.mail_type)
}
inline ::uint32_t DBMailItem::_internal_mail_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mail_type_;
}
inline void DBMailItem::_internal_set_mail_type(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mail_type_ = value;
}

// uint32 status = 8;
inline void DBMailItem::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0u;
}
inline ::uint32_t DBMailItem::status() const {
  // @@protoc_insertion_point(field_get:DBMailItem.status)
  return _internal_status();
}
inline void DBMailItem::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:DBMailItem.status)
}
inline ::uint32_t DBMailItem::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void DBMailItem::_internal_set_status(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// string title = 9;
inline void DBMailItem::clear_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& DBMailItem::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBMailItem.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DBMailItem::set_title(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DBMailItem.title)
}
inline std::string* DBMailItem::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:DBMailItem.title)
  return _s;
}
inline const std::string& DBMailItem::_internal_title() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.title_.Get();
}
inline void DBMailItem::_internal_set_title(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(value, GetArena());
}
inline std::string* DBMailItem::_internal_mutable_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* DBMailItem::release_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBMailItem.title)
  return _impl_.title_.Release();
}
inline void DBMailItem::set_allocated_title(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:DBMailItem.title)
}

// string content = 10;
inline void DBMailItem::clear_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.ClearToEmpty();
}
inline const std::string& DBMailItem::content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBMailItem.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DBMailItem::set_content(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DBMailItem.content)
}
inline std::string* DBMailItem::mutable_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:DBMailItem.content)
  return _s;
}
inline const std::string& DBMailItem::_internal_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.content_.Get();
}
inline void DBMailItem::_internal_set_content(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.Set(value, GetArena());
}
inline std::string* DBMailItem::_internal_mutable_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.content_.Mutable( GetArena());
}
inline std::string* DBMailItem::release_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBMailItem.content)
  return _impl_.content_.Release();
}
inline void DBMailItem::set_allocated_content(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.content_.IsDefault()) {
    _impl_.content_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:DBMailItem.content)
}

// bytes items = 11;
inline void DBMailItem::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.ClearToEmpty();
}
inline const std::string& DBMailItem::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBMailItem.items)
  return _internal_items();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DBMailItem::set_items(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DBMailItem.items)
}
inline std::string* DBMailItem::mutable_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_items();
  // @@protoc_insertion_point(field_mutable:DBMailItem.items)
  return _s;
}
inline const std::string& DBMailItem::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_.Get();
}
inline void DBMailItem::_internal_set_items(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Set(value, GetArena());
}
inline std::string* DBMailItem::_internal_mutable_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.items_.Mutable( GetArena());
}
inline std::string* DBMailItem::release_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBMailItem.items)
  return _impl_.items_.Release();
}
inline void DBMailItem::set_allocated_items(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.items_.IsDefault()) {
    _impl_.items_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:DBMailItem.items)
}

// -------------------------------------------------------------------

// DBMails

// repeated .DBMailItem items = 1;
inline int DBMails::_internal_items_size() const {
  return _internal_items().size();
}
inline int DBMails::items_size() const {
  return _internal_items_size();
}
inline void DBMails::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::DBMailItem* DBMails::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DBMails.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DBMailItem>* DBMails::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DBMails.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DBMailItem& DBMails::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBMails.items)
  return _internal_items().Get(index);
}
inline ::DBMailItem* DBMails::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DBMailItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:DBMails.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DBMailItem>& DBMails::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DBMails.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DBMailItem>&
DBMails::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DBMailItem>*
DBMails::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// DBActivityItem

// uint64 role_id = 1;
inline void DBActivityItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBActivityItem::role_id() const {
  // @@protoc_insertion_point(field_get:DBActivityItem.role_id)
  return _internal_role_id();
}
inline void DBActivityItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:DBActivityItem.role_id)
}
inline ::uint64_t DBActivityItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void DBActivityItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint32 activity_id = 2;
inline void DBActivityItem::clear_activity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.activity_id_ = 0u;
}
inline ::uint32_t DBActivityItem::activity_id() const {
  // @@protoc_insertion_point(field_get:DBActivityItem.activity_id)
  return _internal_activity_id();
}
inline void DBActivityItem::set_activity_id(::uint32_t value) {
  _internal_set_activity_id(value);
  // @@protoc_insertion_point(field_set:DBActivityItem.activity_id)
}
inline ::uint32_t DBActivityItem::_internal_activity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.activity_id_;
}
inline void DBActivityItem::_internal_set_activity_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.activity_id_ = value;
}

// uint32 activity_type = 3;
inline void DBActivityItem::clear_activity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.activity_type_ = 0u;
}
inline ::uint32_t DBActivityItem::activity_type() const {
  // @@protoc_insertion_point(field_get:DBActivityItem.activity_type)
  return _internal_activity_type();
}
inline void DBActivityItem::set_activity_type(::uint32_t value) {
  _internal_set_activity_type(value);
  // @@protoc_insertion_point(field_set:DBActivityItem.activity_type)
}
inline ::uint32_t DBActivityItem::_internal_activity_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.activity_type_;
}
inline void DBActivityItem::_internal_set_activity_type(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.activity_type_ = value;
}

// uint32 join_time = 4;
inline void DBActivityItem::clear_join_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.join_time_ = 0u;
}
inline ::uint32_t DBActivityItem::join_time() const {
  // @@protoc_insertion_point(field_get:DBActivityItem.join_time)
  return _internal_join_time();
}
inline void DBActivityItem::set_join_time(::uint32_t value) {
  _internal_set_join_time(value);
  // @@protoc_insertion_point(field_set:DBActivityItem.join_time)
}
inline ::uint32_t DBActivityItem::_internal_join_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.join_time_;
}
inline void DBActivityItem::_internal_set_join_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.join_time_ = value;
}

// uint32 data_len = 5;
inline void DBActivityItem::clear_data_len() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_len_ = 0u;
}
inline ::uint32_t DBActivityItem::data_len() const {
  // @@protoc_insertion_point(field_get:DBActivityItem.data_len)
  return _internal_data_len();
}
inline void DBActivityItem::set_data_len(::uint32_t value) {
  _internal_set_data_len(value);
  // @@protoc_insertion_point(field_set:DBActivityItem.data_len)
}
inline ::uint32_t DBActivityItem::_internal_data_len() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_len_;
}
inline void DBActivityItem::_internal_set_data_len(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_len_ = value;
}

// bytes data = 6;
inline void DBActivityItem::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& DBActivityItem::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBActivityItem.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DBActivityItem::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DBActivityItem.data)
}
inline std::string* DBActivityItem::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:DBActivityItem.data)
  return _s;
}
inline const std::string& DBActivityItem::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void DBActivityItem::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* DBActivityItem::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* DBActivityItem::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBActivityItem.data)
  return _impl_.data_.Release();
}
inline void DBActivityItem::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:DBActivityItem.data)
}

// -------------------------------------------------------------------

// DBActivities

// repeated .DBActivityItem items = 1;
inline int DBActivities::_internal_items_size() const {
  return _internal_items().size();
}
inline int DBActivities::items_size() const {
  return _internal_items_size();
}
inline void DBActivities::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::DBActivityItem* DBActivities::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DBActivities.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DBActivityItem>* DBActivities::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DBActivities.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DBActivityItem& DBActivities::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBActivities.items)
  return _internal_items().Get(index);
}
inline ::DBActivityItem* DBActivities::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DBActivityItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:DBActivities.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DBActivityItem>& DBActivities::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DBActivities.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DBActivityItem>&
DBActivities::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DBActivityItem>*
DBActivities::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// DBCounterItem

// uint64 role_id = 1;
inline void DBCounterItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBCounterItem::role_id() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.role_id)
  return _internal_role_id();
}
inline void DBCounterItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:DBCounterItem.role_id)
}
inline ::uint64_t DBCounterItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void DBCounterItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint32 counter_id = 2;
inline void DBCounterItem::clear_counter_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counter_id_ = 0u;
}
inline ::uint32_t DBCounterItem::counter_id() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.counter_id)
  return _internal_counter_id();
}
inline void DBCounterItem::set_counter_id(::uint32_t value) {
  _internal_set_counter_id(value);
  // @@protoc_insertion_point(field_set:DBCounterItem.counter_id)
}
inline ::uint32_t DBCounterItem::_internal_counter_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.counter_id_;
}
inline void DBCounterItem::_internal_set_counter_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counter_id_ = value;
}

// uint32 index = 3;
inline void DBCounterItem::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = 0u;
}
inline ::uint32_t DBCounterItem::index() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.index)
  return _internal_index();
}
inline void DBCounterItem::set_index(::uint32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:DBCounterItem.index)
}
inline ::uint32_t DBCounterItem::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void DBCounterItem::_internal_set_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// int64 value = 4;
inline void DBCounterItem::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = ::int64_t{0};
}
inline ::int64_t DBCounterItem::value() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.value)
  return _internal_value();
}
inline void DBCounterItem::set_value(::int64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:DBCounterItem.value)
}
inline ::int64_t DBCounterItem::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void DBCounterItem::_internal_set_value(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// uint64 time = 5;
inline void DBCounterItem::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = ::uint64_t{0u};
}
inline ::uint64_t DBCounterItem::time() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.time)
  return _internal_time();
}
inline void DBCounterItem::set_time(::uint64_t value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:DBCounterItem.time)
}
inline ::uint64_t DBCounterItem::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_;
}
inline void DBCounterItem::_internal_set_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = value;
}

// uint32 param1 = 6;
inline void DBCounterItem::clear_param1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.param1_ = 0u;
}
inline ::uint32_t DBCounterItem::param1() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.param1)
  return _internal_param1();
}
inline void DBCounterItem::set_param1(::uint32_t value) {
  _internal_set_param1(value);
  // @@protoc_insertion_point(field_set:DBCounterItem.param1)
}
inline ::uint32_t DBCounterItem::_internal_param1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.param1_;
}
inline void DBCounterItem::_internal_set_param1(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.param1_ = value;
}

// uint32 param2 = 7;
inline void DBCounterItem::clear_param2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.param2_ = 0u;
}
inline ::uint32_t DBCounterItem::param2() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.param2)
  return _internal_param2();
}
inline void DBCounterItem::set_param2(::uint32_t value) {
  _internal_set_param2(value);
  // @@protoc_insertion_point(field_set:DBCounterItem.param2)
}
inline ::uint32_t DBCounterItem::_internal_param2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.param2_;
}
inline void DBCounterItem::_internal_set_param2(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.param2_ = value;
}

// -------------------------------------------------------------------

// DBCounters

// repeated .DBCounterItem items = 1;
inline int DBCounters::_internal_items_size() const {
  return _internal_items().size();
}
inline int DBCounters::items_size() const {
  return _internal_items_size();
}
inline void DBCounters::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::DBCounterItem* DBCounters::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DBCounters.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DBCounterItem>* DBCounters::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DBCounters.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DBCounterItem& DBCounters::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBCounters.items)
  return _internal_items().Get(index);
}
inline ::DBCounterItem* DBCounters::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DBCounterItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:DBCounters.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DBCounterItem>& DBCounters::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DBCounters.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DBCounterItem>&
DBCounters::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DBCounterItem>*
DBCounters::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// DBFriendItem

// uint64 role_id = 1;
inline void DBFriendItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBFriendItem::role_id() const {
  // @@protoc_insertion_point(field_get:DBFriendItem.role_id)
  return _internal_role_id();
}
inline void DBFriendItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:DBFriendItem.role_id)
}
inline ::uint64_t DBFriendItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void DBFriendItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint64 friend_id = 2;
inline void DBFriendItem::clear_friend_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.friend_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBFriendItem::friend_id() const {
  // @@protoc_insertion_point(field_get:DBFriendItem.friend_id)
  return _internal_friend_id();
}
inline void DBFriendItem::set_friend_id(::uint64_t value) {
  _internal_set_friend_id(value);
  // @@protoc_insertion_point(field_set:DBFriendItem.friend_id)
}
inline ::uint64_t DBFriendItem::_internal_friend_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.friend_id_;
}
inline void DBFriendItem::_internal_set_friend_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.friend_id_ = value;
}

// -------------------------------------------------------------------

// DBFriends

// repeated .DBFriendItem items = 1;
inline int DBFriends::_internal_items_size() const {
  return _internal_items().size();
}
inline int DBFriends::items_size() const {
  return _internal_items_size();
}
inline void DBFriends::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::DBFriendItem* DBFriends::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DBFriends.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DBFriendItem>* DBFriends::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DBFriends.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DBFriendItem& DBFriends::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBFriends.items)
  return _internal_items().Get(index);
}
inline ::DBFriendItem* DBFriends::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DBFriendItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:DBFriends.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DBFriendItem>& DBFriends::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DBFriends.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DBFriendItem>&
DBFriends::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DBFriendItem>*
DBFriends::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// DBRoleLoginAck

// uint32 ret_code = 1;
inline void DBRoleLoginAck::clear_ret_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ret_code_ = 0u;
}
inline ::uint32_t DBRoleLoginAck::ret_code() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.ret_code)
  return _internal_ret_code();
}
inline void DBRoleLoginAck::set_ret_code(::uint32_t value) {
  _internal_set_ret_code(value);
  // @@protoc_insertion_point(field_set:DBRoleLoginAck.ret_code)
}
inline ::uint32_t DBRoleLoginAck::_internal_ret_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ret_code_;
}
inline void DBRoleLoginAck::_internal_set_ret_code(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ret_code_ = value;
}

// uint64 role_id = 2;
inline void DBRoleLoginAck::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBRoleLoginAck::role_id() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.role_id)
  return _internal_role_id();
}
inline void DBRoleLoginAck::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:DBRoleLoginAck.role_id)
}
inline ::uint64_t DBRoleLoginAck::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void DBRoleLoginAck::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// .DBRoleData role_data = 3;
inline bool DBRoleLoginAck::has_role_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.role_data_ != nullptr);
  return value;
}
inline void DBRoleLoginAck::clear_role_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.role_data_ != nullptr) _impl_.role_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DBRoleData& DBRoleLoginAck::_internal_role_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DBRoleData* p = _impl_.role_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::DBRoleData&>(::_DBRoleData_default_instance_);
}
inline const ::DBRoleData& DBRoleLoginAck::role_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.role_data)
  return _internal_role_data();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_role_data(::DBRoleData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.role_data_);
  }
  _impl_.role_data_ = reinterpret_cast<::DBRoleData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.role_data)
}
inline ::DBRoleData* DBRoleLoginAck::release_role_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DBRoleData* released = _impl_.role_data_;
  _impl_.role_data_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::DBRoleData* DBRoleLoginAck::unsafe_arena_release_role_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.role_data)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DBRoleData* temp = _impl_.role_data_;
  _impl_.role_data_ = nullptr;
  return temp;
}
inline ::DBRoleData* DBRoleLoginAck::_internal_mutable_role_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.role_data_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DBRoleData>(GetArena());
    _impl_.role_data_ = reinterpret_cast<::DBRoleData*>(p);
  }
  return _impl_.role_data_;
}
inline ::DBRoleData* DBRoleLoginAck::mutable_role_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DBRoleData* _msg = _internal_mutable_role_data();
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.role_data)
  return _msg;
}
inline void DBRoleLoginAck::set_allocated_role_data(::DBRoleData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.role_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.role_data_ = reinterpret_cast<::DBRoleData*>(value);
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.role_data)
}

// .DBBagItems bag_items = 4;
inline bool DBRoleLoginAck::has_bag_items() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bag_items_ != nullptr);
  return value;
}
inline void DBRoleLoginAck::clear_bag_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bag_items_ != nullptr) _impl_.bag_items_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::DBBagItems& DBRoleLoginAck::_internal_bag_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DBBagItems* p = _impl_.bag_items_;
  return p != nullptr ? *p : reinterpret_cast<const ::DBBagItems&>(::_DBBagItems_default_instance_);
}
inline const ::DBBagItems& DBRoleLoginAck::bag_items() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.bag_items)
  return _internal_bag_items();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_bag_items(::DBBagItems* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bag_items_);
  }
  _impl_.bag_items_ = reinterpret_cast<::DBBagItems*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.bag_items)
}
inline ::DBBagItems* DBRoleLoginAck::release_bag_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DBBagItems* released = _impl_.bag_items_;
  _impl_.bag_items_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::DBBagItems* DBRoleLoginAck::unsafe_arena_release_bag_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.bag_items)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DBBagItems* temp = _impl_.bag_items_;
  _impl_.bag_items_ = nullptr;
  return temp;
}
inline ::DBBagItems* DBRoleLoginAck::_internal_mutable_bag_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bag_items_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DBBagItems>(GetArena());
    _impl_.bag_items_ = reinterpret_cast<::DBBagItems*>(p);
  }
  return _impl_.bag_items_;
}
inline ::DBBagItems* DBRoleLoginAck::mutable_bag_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::DBBagItems* _msg = _internal_mutable_bag_items();
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.bag_items)
  return _msg;
}
inline void DBRoleLoginAck::set_allocated_bag_items(::DBBagItems* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.bag_items_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.bag_items_ = reinterpret_cast<::DBBagItems*>(value);
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.bag_items)
}

// .DBCopies copies = 5;
inline bool DBRoleLoginAck::has_copies() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.copies_ != nullptr);
  return value;
}
inline void DBRoleLoginAck::clear_copies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.copies_ != nullptr) _impl_.copies_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::DBCopies& DBRoleLoginAck::_internal_copies() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DBCopies* p = _impl_.copies_;
  return p != nullptr ? *p : reinterpret_cast<const ::DBCopies&>(::_DBCopies_default_instance_);
}
inline const ::DBCopies& DBRoleLoginAck::copies() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.copies)
  return _internal_copies();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_copies(::DBCopies* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.copies_);
  }
  _impl_.copies_ = reinterpret_cast<::DBCopies*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.copies)
}
inline ::DBCopies* DBRoleLoginAck::release_copies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::DBCopies* released = _impl_.copies_;
  _impl_.copies_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::DBCopies* DBRoleLoginAck::unsafe_arena_release_copies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.copies)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::DBCopies* temp = _impl_.copies_;
  _impl_.copies_ = nullptr;
  return temp;
}
inline ::DBCopies* DBRoleLoginAck::_internal_mutable_copies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.copies_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DBCopies>(GetArena());
    _impl_.copies_ = reinterpret_cast<::DBCopies*>(p);
  }
  return _impl_.copies_;
}
inline ::DBCopies* DBRoleLoginAck::mutable_copies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::DBCopies* _msg = _internal_mutable_copies();
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.copies)
  return _msg;
}
inline void DBRoleLoginAck::set_allocated_copies(::DBCopies* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.copies_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.copies_ = reinterpret_cast<::DBCopies*>(value);
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.copies)
}

// .DBEquipments equipments = 6;
inline bool DBRoleLoginAck::has_equipments() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.equipments_ != nullptr);
  return value;
}
inline void DBRoleLoginAck::clear_equipments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.equipments_ != nullptr) _impl_.equipments_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::DBEquipments& DBRoleLoginAck::_internal_equipments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DBEquipments* p = _impl_.equipments_;
  return p != nullptr ? *p : reinterpret_cast<const ::DBEquipments&>(::_DBEquipments_default_instance_);
}
inline const ::DBEquipments& DBRoleLoginAck::equipments() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.equipments)
  return _internal_equipments();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_equipments(::DBEquipments* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.equipments_);
  }
  _impl_.equipments_ = reinterpret_cast<::DBEquipments*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.equipments)
}
inline ::DBEquipments* DBRoleLoginAck::release_equipments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::DBEquipments* released = _impl_.equipments_;
  _impl_.equipments_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::DBEquipments* DBRoleLoginAck::unsafe_arena_release_equipments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.equipments)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::DBEquipments* temp = _impl_.equipments_;
  _impl_.equipments_ = nullptr;
  return temp;
}
inline ::DBEquipments* DBRoleLoginAck::_internal_mutable_equipments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.equipments_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DBEquipments>(GetArena());
    _impl_.equipments_ = reinterpret_cast<::DBEquipments*>(p);
  }
  return _impl_.equipments_;
}
inline ::DBEquipments* DBRoleLoginAck::mutable_equipments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::DBEquipments* _msg = _internal_mutable_equipments();
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.equipments)
  return _msg;
}
inline void DBRoleLoginAck::set_allocated_equipments(::DBEquipments* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.equipments_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.equipments_ = reinterpret_cast<::DBEquipments*>(value);
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.equipments)
}

// .DBGems gems = 7;
inline bool DBRoleLoginAck::has_gems() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.gems_ != nullptr);
  return value;
}
inline void DBRoleLoginAck::clear_gems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gems_ != nullptr) _impl_.gems_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::DBGems& DBRoleLoginAck::_internal_gems() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DBGems* p = _impl_.gems_;
  return p != nullptr ? *p : reinterpret_cast<const ::DBGems&>(::_DBGems_default_instance_);
}
inline const ::DBGems& DBRoleLoginAck::gems() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.gems)
  return _internal_gems();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_gems(::DBGems* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gems_);
  }
  _impl_.gems_ = reinterpret_cast<::DBGems*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.gems)
}
inline ::DBGems* DBRoleLoginAck::release_gems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::DBGems* released = _impl_.gems_;
  _impl_.gems_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::DBGems* DBRoleLoginAck::unsafe_arena_release_gems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.gems)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::DBGems* temp = _impl_.gems_;
  _impl_.gems_ = nullptr;
  return temp;
}
inline ::DBGems* DBRoleLoginAck::_internal_mutable_gems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gems_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DBGems>(GetArena());
    _impl_.gems_ = reinterpret_cast<::DBGems*>(p);
  }
  return _impl_.gems_;
}
inline ::DBGems* DBRoleLoginAck::mutable_gems() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::DBGems* _msg = _internal_mutable_gems();
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.gems)
  return _msg;
}
inline void DBRoleLoginAck::set_allocated_gems(::DBGems* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.gems_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.gems_ = reinterpret_cast<::DBGems*>(value);
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.gems)
}

// .DBPets pets = 8;
inline bool DBRoleLoginAck::has_pets() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pets_ != nullptr);
  return value;
}
inline void DBRoleLoginAck::clear_pets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pets_ != nullptr) _impl_.pets_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::DBPets& DBRoleLoginAck::_internal_pets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DBPets* p = _impl_.pets_;
  return p != nullptr ? *p : reinterpret_cast<const ::DBPets&>(::_DBPets_default_instance_);
}
inline const ::DBPets& DBRoleLoginAck::pets() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.pets)
  return _internal_pets();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_pets(::DBPets* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pets_);
  }
  _impl_.pets_ = reinterpret_cast<::DBPets*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.pets)
}
inline ::DBPets* DBRoleLoginAck::release_pets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::DBPets* released = _impl_.pets_;
  _impl_.pets_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::DBPets* DBRoleLoginAck::unsafe_arena_release_pets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.pets)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::DBPets* temp = _impl_.pets_;
  _impl_.pets_ = nullptr;
  return temp;
}
inline ::DBPets* DBRoleLoginAck::_internal_mutable_pets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pets_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DBPets>(GetArena());
    _impl_.pets_ = reinterpret_cast<::DBPets*>(p);
  }
  return _impl_.pets_;
}
inline ::DBPets* DBRoleLoginAck::mutable_pets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::DBPets* _msg = _internal_mutable_pets();
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.pets)
  return _msg;
}
inline void DBRoleLoginAck::set_allocated_pets(::DBPets* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.pets_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.pets_ = reinterpret_cast<::DBPets*>(value);
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.pets)
}

// .DBPartners partners = 9;
inline bool DBRoleLoginAck::has_partners() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.partners_ != nullptr);
  return value;
}
inline void DBRoleLoginAck::clear_partners() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.partners_ != nullptr) _impl_.partners_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const ::DBPartners& DBRoleLoginAck::_internal_partners() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DBPartners* p = _impl_.partners_;
  return p != nullptr ? *p : reinterpret_cast<const ::DBPartners&>(::_DBPartners_default_instance_);
}
inline const ::DBPartners& DBRoleLoginAck::partners() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.partners)
  return _internal_partners();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_partners(::DBPartners* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.partners_);
  }
  _impl_.partners_ = reinterpret_cast<::DBPartners*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.partners)
}
inline ::DBPartners* DBRoleLoginAck::release_partners() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::DBPartners* released = _impl_.partners_;
  _impl_.partners_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::DBPartners* DBRoleLoginAck::unsafe_arena_release_partners() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.partners)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::DBPartners* temp = _impl_.partners_;
  _impl_.partners_ = nullptr;
  return temp;
}
inline ::DBPartners* DBRoleLoginAck::_internal_mutable_partners() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.partners_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DBPartners>(GetArena());
    _impl_.partners_ = reinterpret_cast<::DBPartners*>(p);
  }
  return _impl_.partners_;
}
inline ::DBPartners* DBRoleLoginAck::mutable_partners() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::DBPartners* _msg = _internal_mutable_partners();
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.partners)
  return _msg;
}
inline void DBRoleLoginAck::set_allocated_partners(::DBPartners* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.partners_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.partners_ = reinterpret_cast<::DBPartners*>(value);
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.partners)
}

// .DBTasks tasks = 10;
inline bool DBRoleLoginAck::has_tasks() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tasks_ != nullptr);
  return value;
}
inline void DBRoleLoginAck::clear_tasks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tasks_ != nullptr) _impl_.tasks_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const ::DBTasks& DBRoleLoginAck::_internal_tasks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DBTasks* p = _impl_.tasks_;
  return p != nullptr ? *p : reinterpret_cast<const ::DBTasks&>(::_DBTasks_default_instance_);
}
inline const ::DBTasks& DBRoleLoginAck::tasks() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.tasks)
  return _internal_tasks();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_tasks(::DBTasks* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tasks_);
  }
  _impl_.tasks_ = reinterpret_cast<::DBTasks*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.tasks)
}
inline ::DBTasks* DBRoleLoginAck::release_tasks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::DBTasks* released = _impl_.tasks_;
  _impl_.tasks_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::DBTasks* DBRoleLoginAck::unsafe_arena_release_tasks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.tasks)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::DBTasks* temp = _impl_.tasks_;
  _impl_.tasks_ = nullptr;
  return temp;
}
inline ::DBTasks* DBRoleLoginAck::_internal_mutable_tasks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tasks_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DBTasks>(GetArena());
    _impl_.tasks_ = reinterpret_cast<::DBTasks*>(p);
  }
  return _impl_.tasks_;
}
inline ::DBTasks* DBRoleLoginAck::mutable_tasks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::DBTasks* _msg = _internal_mutable_tasks();
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.tasks)
  return _msg;
}
inline void DBRoleLoginAck::set_allocated_tasks(::DBTasks* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.tasks_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.tasks_ = reinterpret_cast<::DBTasks*>(value);
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.tasks)
}

// .DBMails mails = 11;
inline bool DBRoleLoginAck::has_mails() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mails_ != nullptr);
  return value;
}
inline void DBRoleLoginAck::clear_mails() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mails_ != nullptr) _impl_.mails_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const ::DBMails& DBRoleLoginAck::_internal_mails() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DBMails* p = _impl_.mails_;
  return p != nullptr ? *p : reinterpret_cast<const ::DBMails&>(::_DBMails_default_instance_);
}
inline const ::DBMails& DBRoleLoginAck::mails() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.mails)
  return _internal_mails();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_mails(::DBMails* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mails_);
  }
  _impl_.mails_ = reinterpret_cast<::DBMails*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.mails)
}
inline ::DBMails* DBRoleLoginAck::release_mails() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::DBMails* released = _impl_.mails_;
  _impl_.mails_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::DBMails* DBRoleLoginAck::unsafe_arena_release_mails() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.mails)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::DBMails* temp = _impl_.mails_;
  _impl_.mails_ = nullptr;
  return temp;
}
inline ::DBMails* DBRoleLoginAck::_internal_mutable_mails() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mails_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DBMails>(GetArena());
    _impl_.mails_ = reinterpret_cast<::DBMails*>(p);
  }
  return _impl_.mails_;
}
inline ::DBMails* DBRoleLoginAck::mutable_mails() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::DBMails* _msg = _internal_mutable_mails();
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.mails)
  return _msg;
}
inline void DBRoleLoginAck::set_allocated_mails(::DBMails* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.mails_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.mails_ = reinterpret_cast<::DBMails*>(value);
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.mails)
}

// .DBMounts mounts = 12;
inline bool DBRoleLoginAck::has_mounts() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mounts_ != nullptr);
  return value;
}
inline void DBRoleLoginAck::clear_mounts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mounts_ != nullptr) _impl_.mounts_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline const ::DBMounts& DBRoleLoginAck::_internal_mounts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DBMounts* p = _impl_.mounts_;
  return p != nullptr ? *p : reinterpret_cast<const ::DBMounts&>(::_DBMounts_default_instance_);
}
inline const ::DBMounts& DBRoleLoginAck::mounts() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.mounts)
  return _internal_mounts();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_mounts(::DBMounts* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mounts_);
  }
  _impl_.mounts_ = reinterpret_cast<::DBMounts*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.mounts)
}
inline ::DBMounts* DBRoleLoginAck::release_mounts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::DBMounts* released = _impl_.mounts_;
  _impl_.mounts_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::DBMounts* DBRoleLoginAck::unsafe_arena_release_mounts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.mounts)

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::DBMounts* temp = _impl_.mounts_;
  _impl_.mounts_ = nullptr;
  return temp;
}
inline ::DBMounts* DBRoleLoginAck::_internal_mutable_mounts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mounts_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DBMounts>(GetArena());
    _impl_.mounts_ = reinterpret_cast<::DBMounts*>(p);
  }
  return _impl_.mounts_;
}
inline ::DBMounts* DBRoleLoginAck::mutable_mounts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000200u;
  ::DBMounts* _msg = _internal_mutable_mounts();
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.mounts)
  return _msg;
}
inline void DBRoleLoginAck::set_allocated_mounts(::DBMounts* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.mounts_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }

  _impl_.mounts_ = reinterpret_cast<::DBMounts*>(value);
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.mounts)
}

// .DBActivities activities = 13;
inline bool DBRoleLoginAck::has_activities() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.activities_ != nullptr);
  return value;
}
inline void DBRoleLoginAck::clear_activities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.activities_ != nullptr) _impl_.activities_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline const ::DBActivities& DBRoleLoginAck::_internal_activities() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DBActivities* p = _impl_.activities_;
  return p != nullptr ? *p : reinterpret_cast<const ::DBActivities&>(::_DBActivities_default_instance_);
}
inline const ::DBActivities& DBRoleLoginAck::activities() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.activities)
  return _internal_activities();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_activities(::DBActivities* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.activities_);
  }
  _impl_.activities_ = reinterpret_cast<::DBActivities*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.activities)
}
inline ::DBActivities* DBRoleLoginAck::release_activities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::DBActivities* released = _impl_.activities_;
  _impl_.activities_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::DBActivities* DBRoleLoginAck::unsafe_arena_release_activities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.activities)

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::DBActivities* temp = _impl_.activities_;
  _impl_.activities_ = nullptr;
  return temp;
}
inline ::DBActivities* DBRoleLoginAck::_internal_mutable_activities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.activities_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DBActivities>(GetArena());
    _impl_.activities_ = reinterpret_cast<::DBActivities*>(p);
  }
  return _impl_.activities_;
}
inline ::DBActivities* DBRoleLoginAck::mutable_activities() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000400u;
  ::DBActivities* _msg = _internal_mutable_activities();
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.activities)
  return _msg;
}
inline void DBRoleLoginAck::set_allocated_activities(::DBActivities* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.activities_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }

  _impl_.activities_ = reinterpret_cast<::DBActivities*>(value);
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.activities)
}

// .DBCounters counters = 14;
inline bool DBRoleLoginAck::has_counters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.counters_ != nullptr);
  return value;
}
inline void DBRoleLoginAck::clear_counters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counters_ != nullptr) _impl_.counters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline const ::DBCounters& DBRoleLoginAck::_internal_counters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DBCounters* p = _impl_.counters_;
  return p != nullptr ? *p : reinterpret_cast<const ::DBCounters&>(::_DBCounters_default_instance_);
}
inline const ::DBCounters& DBRoleLoginAck::counters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.counters)
  return _internal_counters();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_counters(::DBCounters* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.counters_);
  }
  _impl_.counters_ = reinterpret_cast<::DBCounters*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.counters)
}
inline ::DBCounters* DBRoleLoginAck::release_counters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::DBCounters* released = _impl_.counters_;
  _impl_.counters_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::DBCounters* DBRoleLoginAck::unsafe_arena_release_counters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.counters)

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::DBCounters* temp = _impl_.counters_;
  _impl_.counters_ = nullptr;
  return temp;
}
inline ::DBCounters* DBRoleLoginAck::_internal_mutable_counters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DBCounters>(GetArena());
    _impl_.counters_ = reinterpret_cast<::DBCounters*>(p);
  }
  return _impl_.counters_;
}
inline ::DBCounters* DBRoleLoginAck::mutable_counters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000800u;
  ::DBCounters* _msg = _internal_mutable_counters();
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.counters)
  return _msg;
}
inline void DBRoleLoginAck::set_allocated_counters(::DBCounters* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.counters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }

  _impl_.counters_ = reinterpret_cast<::DBCounters*>(value);
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.counters)
}

// .DBFriends friends = 15;
inline bool DBRoleLoginAck::has_friends() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.friends_ != nullptr);
  return value;
}
inline void DBRoleLoginAck::clear_friends() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.friends_ != nullptr) _impl_.friends_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline const ::DBFriends& DBRoleLoginAck::_internal_friends() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DBFriends* p = _impl_.friends_;
  return p != nullptr ? *p : reinterpret_cast<const ::DBFriends&>(::_DBFriends_default_instance_);
}
inline const ::DBFriends& DBRoleLoginAck::friends() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.friends)
  return _internal_friends();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_friends(::DBFriends* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.friends_);
  }
  _impl_.friends_ = reinterpret_cast<::DBFriends*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.friends)
}
inline ::DBFriends* DBRoleLoginAck::release_friends() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::DBFriends* released = _impl_.friends_;
  _impl_.friends_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::DBFriends* DBRoleLoginAck::unsafe_arena_release_friends() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.friends)

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::DBFriends* temp = _impl_.friends_;
  _impl_.friends_ = nullptr;
  return temp;
}
inline ::DBFriends* DBRoleLoginAck::_internal_mutable_friends() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.friends_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DBFriends>(GetArena());
    _impl_.friends_ = reinterpret_cast<::DBFriends*>(p);
  }
  return _impl_.friends_;
}
inline ::DBFriends* DBRoleLoginAck::mutable_friends() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00001000u;
  ::DBFriends* _msg = _internal_mutable_friends();
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.friends)
  return _msg;
}
inline void DBRoleLoginAck::set_allocated_friends(::DBFriends* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.friends_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }

  _impl_.friends_ = reinterpret_cast<::DBFriends*>(value);
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.friends)
}

// .DBSkills skills = 16;
inline bool DBRoleLoginAck::has_skills() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.skills_ != nullptr);
  return value;
}
inline void DBRoleLoginAck::clear_skills() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.skills_ != nullptr) _impl_.skills_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline const ::DBSkills& DBRoleLoginAck::_internal_skills() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DBSkills* p = _impl_.skills_;
  return p != nullptr ? *p : reinterpret_cast<const ::DBSkills&>(::_DBSkills_default_instance_);
}
inline const ::DBSkills& DBRoleLoginAck::skills() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.skills)
  return _internal_skills();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_skills(::DBSkills* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.skills_);
  }
  _impl_.skills_ = reinterpret_cast<::DBSkills*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.skills)
}
inline ::DBSkills* DBRoleLoginAck::release_skills() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::DBSkills* released = _impl_.skills_;
  _impl_.skills_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::DBSkills* DBRoleLoginAck::unsafe_arena_release_skills() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.skills)

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::DBSkills* temp = _impl_.skills_;
  _impl_.skills_ = nullptr;
  return temp;
}
inline ::DBSkills* DBRoleLoginAck::_internal_mutable_skills() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.skills_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DBSkills>(GetArena());
    _impl_.skills_ = reinterpret_cast<::DBSkills*>(p);
  }
  return _impl_.skills_;
}
inline ::DBSkills* DBRoleLoginAck::mutable_skills() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00002000u;
  ::DBSkills* _msg = _internal_mutable_skills();
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.skills)
  return _msg;
}
inline void DBRoleLoginAck::set_allocated_skills(::DBSkills* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.skills_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }

  _impl_.skills_ = reinterpret_cast<::DBSkills*>(value);
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.skills)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::BindType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::BindType>() {
  return ::BindType_descriptor();
}
template <>
struct is_proto_enum<::ItemStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ItemStatus>() {
  return ::ItemStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // login_5fdb_2eproto_2epb_2eh
