// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: login.proto
// Protobuf C++ Version: 5.29.5

#ifndef login_2eproto_2epb_2eh
#define login_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029005
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_login_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_login_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_login_2eproto;
class Activities;
struct ActivitiesDefaultTypeInternal;
extern ActivitiesDefaultTypeInternal _Activities_default_instance_;
class ActivityItem;
struct ActivityItemDefaultTypeInternal;
extern ActivityItemDefaultTypeInternal _ActivityItem_default_instance_;
class BagItem;
struct BagItemDefaultTypeInternal;
extern BagItemDefaultTypeInternal _BagItem_default_instance_;
class BagItems;
struct BagItemsDefaultTypeInternal;
extern BagItemsDefaultTypeInternal _BagItems_default_instance_;
class ChapterItem;
struct ChapterItemDefaultTypeInternal;
extern ChapterItemDefaultTypeInternal _ChapterItem_default_instance_;
class Copies;
struct CopiesDefaultTypeInternal;
extern CopiesDefaultTypeInternal _Copies_default_instance_;
class CopyItem;
struct CopyItemDefaultTypeInternal;
extern CopyItemDefaultTypeInternal _CopyItem_default_instance_;
class CounterItem;
struct CounterItemDefaultTypeInternal;
extern CounterItemDefaultTypeInternal _CounterItem_default_instance_;
class Counters;
struct CountersDefaultTypeInternal;
extern CountersDefaultTypeInternal _Counters_default_instance_;
class DBSkillItem;
struct DBSkillItemDefaultTypeInternal;
extern DBSkillItemDefaultTypeInternal _DBSkillItem_default_instance_;
class EquipItem;
struct EquipItemDefaultTypeInternal;
extern EquipItemDefaultTypeInternal _EquipItem_default_instance_;
class Equipments;
struct EquipmentsDefaultTypeInternal;
extern EquipmentsDefaultTypeInternal _Equipments_default_instance_;
class FriendItem;
struct FriendItemDefaultTypeInternal;
extern FriendItemDefaultTypeInternal _FriendItem_default_instance_;
class Friends;
struct FriendsDefaultTypeInternal;
extern FriendsDefaultTypeInternal _Friends_default_instance_;
class GemItem;
struct GemItemDefaultTypeInternal;
extern GemItemDefaultTypeInternal _GemItem_default_instance_;
class Gems;
struct GemsDefaultTypeInternal;
extern GemsDefaultTypeInternal _Gems_default_instance_;
class MailItem;
struct MailItemDefaultTypeInternal;
extern MailItemDefaultTypeInternal _MailItem_default_instance_;
class Mails;
struct MailsDefaultTypeInternal;
extern MailsDefaultTypeInternal _Mails_default_instance_;
class MountItem;
struct MountItemDefaultTypeInternal;
extern MountItemDefaultTypeInternal _MountItem_default_instance_;
class Mounts;
struct MountsDefaultTypeInternal;
extern MountsDefaultTypeInternal _Mounts_default_instance_;
class PartnerItem;
struct PartnerItemDefaultTypeInternal;
extern PartnerItemDefaultTypeInternal _PartnerItem_default_instance_;
class Partners;
struct PartnersDefaultTypeInternal;
extern PartnersDefaultTypeInternal _Partners_default_instance_;
class PetItem;
struct PetItemDefaultTypeInternal;
extern PetItemDefaultTypeInternal _PetItem_default_instance_;
class Pets;
struct PetsDefaultTypeInternal;
extern PetsDefaultTypeInternal _Pets_default_instance_;
class RoleData;
struct RoleDataDefaultTypeInternal;
extern RoleDataDefaultTypeInternal _RoleData_default_instance_;
class RoleLoginAck;
struct RoleLoginAckDefaultTypeInternal;
extern RoleLoginAckDefaultTypeInternal _RoleLoginAck_default_instance_;
class Skills;
struct SkillsDefaultTypeInternal;
extern SkillsDefaultTypeInternal _Skills_default_instance_;
class TaskItem;
struct TaskItemDefaultTypeInternal;
extern TaskItemDefaultTypeInternal _TaskItem_default_instance_;
class Tasks;
struct TasksDefaultTypeInternal;
extern TasksDefaultTypeInternal _Tasks_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum BindType : int {
  BIND_NONE = 0,
  BIND_YES = 1,
  BindType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  BindType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool BindType_IsValid(int value);
extern const uint32_t BindType_internal_data_[];
constexpr BindType BindType_MIN = static_cast<BindType>(0);
constexpr BindType BindType_MAX = static_cast<BindType>(1);
constexpr int BindType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
BindType_descriptor();
template <typename T>
const std::string& BindType_Name(T value) {
  static_assert(std::is_same<T, BindType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to BindType_Name().");
  return BindType_Name(static_cast<BindType>(value));
}
template <>
inline const std::string& BindType_Name(BindType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BindType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool BindType_Parse(absl::string_view name, BindType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BindType>(
      BindType_descriptor(), name, value);
}
enum ItemStatus : int {
  ITEM_NORMAL = 0,
  ITEM_DELETED = 1,
  ItemStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ItemStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ItemStatus_IsValid(int value);
extern const uint32_t ItemStatus_internal_data_[];
constexpr ItemStatus ItemStatus_MIN = static_cast<ItemStatus>(0);
constexpr ItemStatus ItemStatus_MAX = static_cast<ItemStatus>(1);
constexpr int ItemStatus_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
ItemStatus_descriptor();
template <typename T>
const std::string& ItemStatus_Name(T value) {
  static_assert(std::is_same<T, ItemStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ItemStatus_Name().");
  return ItemStatus_Name(static_cast<ItemStatus>(value));
}
template <>
inline const std::string& ItemStatus_Name(ItemStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ItemStatus_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool ItemStatus_Parse(absl::string_view name, ItemStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ItemStatus>(
      ItemStatus_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TaskItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:TaskItem) */ {
 public:
  inline TaskItem() : TaskItem(nullptr) {}
  ~TaskItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TaskItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TaskItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TaskItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline TaskItem(const TaskItem& from) : TaskItem(nullptr, from) {}
  inline TaskItem(TaskItem&& from) noexcept
      : TaskItem(nullptr, std::move(from)) {}
  inline TaskItem& operator=(const TaskItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline TaskItem& operator=(TaskItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TaskItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const TaskItem* internal_default_instance() {
    return reinterpret_cast<const TaskItem*>(
        &_TaskItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(TaskItem& a, TaskItem& b) { a.Swap(&b); }
  inline void Swap(TaskItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TaskItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TaskItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TaskItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TaskItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TaskItem& from) { TaskItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TaskItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "TaskItem"; }

 protected:
  explicit TaskItem(::google::protobuf::Arena* arena);
  TaskItem(::google::protobuf::Arena* arena, const TaskItem& from);
  TaskItem(::google::protobuf::Arena* arena, TaskItem&& from) noexcept
      : TaskItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kTaskIdFieldNumber = 2,
    kStatusFieldNumber = 3,
    kProgressFieldNumber = 4,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint32 task_id = 2;
  void clear_task_id() ;
  ::uint32_t task_id() const;
  void set_task_id(::uint32_t value);

  private:
  ::uint32_t _internal_task_id() const;
  void _internal_set_task_id(::uint32_t value);

  public:
  // int32 status = 3;
  void clear_status() ;
  ::int32_t status() const;
  void set_status(::int32_t value);

  private:
  ::int32_t _internal_status() const;
  void _internal_set_status(::int32_t value);

  public:
  // int32 progress = 4;
  void clear_progress() ;
  ::int32_t progress() const;
  void set_progress(::int32_t value);

  private:
  ::int32_t _internal_progress() const;
  void _internal_set_progress(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:TaskItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TaskItem& from_msg);
    ::uint64_t role_id_;
    ::uint32_t task_id_;
    ::int32_t status_;
    ::int32_t progress_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class RoleData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RoleData) */ {
 public:
  inline RoleData() : RoleData(nullptr) {}
  ~RoleData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RoleData* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RoleData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RoleData(
      ::google::protobuf::internal::ConstantInitialized);

  inline RoleData(const RoleData& from) : RoleData(nullptr, from) {}
  inline RoleData(RoleData&& from) noexcept
      : RoleData(nullptr, std::move(from)) {}
  inline RoleData& operator=(const RoleData& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoleData& operator=(RoleData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RoleData& default_instance() {
    return *internal_default_instance();
  }
  static inline const RoleData* internal_default_instance() {
    return reinterpret_cast<const RoleData*>(
        &_RoleData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(RoleData& a, RoleData& b) { a.Swap(&b); }
  inline void Swap(RoleData* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoleData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RoleData* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RoleData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RoleData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RoleData& from) { RoleData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RoleData* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "RoleData"; }

 protected:
  explicit RoleData(::google::protobuf::Arena* arena);
  RoleData(::google::protobuf::Arena* arena, const RoleData& from);
  RoleData(::google::protobuf::Arena* arena, RoleData&& from) noexcept
      : RoleData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kActionFieldNumber = 12,
    kActionTimeFieldNumber = 13,
    kNameFieldNumber = 6,
    kAccountIdFieldNumber = 1,
    kRoleIdFieldNumber = 2,
    kCareerIdFieldNumber = 3,
    kLevelFieldNumber = 4,
    kExpFieldNumber = 5,
    kLangIdFieldNumber = 7,
    kVipLevelFieldNumber = 8,
    kFightValueFieldNumber = 10,
    kVipExpFieldNumber = 9,
    kCityCopyIdFieldNumber = 11,
    kCreateTimeFieldNumber = 14,
    kLogonTimeFieldNumber = 15,
    kLogoffTimeFieldNumber = 16,
    kGuildIdFieldNumber = 17,
    kChannelFieldNumber = 18,
    kOnlineTimeFieldNumber = 19,
  };
  // repeated int64 action = 12;
  int action_size() const;
  private:
  int _internal_action_size() const;

  public:
  void clear_action() ;
  ::int64_t action(int index) const;
  void set_action(int index, ::int64_t value);
  void add_action(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& action() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_action();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_action() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_action();

  public:
  // repeated int64 action_time = 13;
  int action_time_size() const;
  private:
  int _internal_action_time_size() const;

  public:
  void clear_action_time() ;
  ::int64_t action_time(int index) const;
  void set_action_time(int index, ::int64_t value);
  void add_action_time(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& action_time() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_action_time();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_action_time() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_action_time();

  public:
  // string name = 6;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // uint64 account_id = 1;
  void clear_account_id() ;
  ::uint64_t account_id() const;
  void set_account_id(::uint64_t value);

  private:
  ::uint64_t _internal_account_id() const;
  void _internal_set_account_id(::uint64_t value);

  public:
  // uint64 role_id = 2;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // int32 career_id = 3;
  void clear_career_id() ;
  ::int32_t career_id() const;
  void set_career_id(::int32_t value);

  private:
  ::int32_t _internal_career_id() const;
  void _internal_set_career_id(::int32_t value);

  public:
  // int32 level = 4;
  void clear_level() ;
  ::int32_t level() const;
  void set_level(::int32_t value);

  private:
  ::int32_t _internal_level() const;
  void _internal_set_level(::int32_t value);

  public:
  // int64 exp = 5;
  void clear_exp() ;
  ::int64_t exp() const;
  void set_exp(::int64_t value);

  private:
  ::int64_t _internal_exp() const;
  void _internal_set_exp(::int64_t value);

  public:
  // int32 lang_id = 7;
  void clear_lang_id() ;
  ::int32_t lang_id() const;
  void set_lang_id(::int32_t value);

  private:
  ::int32_t _internal_lang_id() const;
  void _internal_set_lang_id(::int32_t value);

  public:
  // int32 vip_level = 8;
  void clear_vip_level() ;
  ::int32_t vip_level() const;
  void set_vip_level(::int32_t value);

  private:
  ::int32_t _internal_vip_level() const;
  void _internal_set_vip_level(::int32_t value);

  public:
  // int64 fight_value = 10;
  void clear_fight_value() ;
  ::int64_t fight_value() const;
  void set_fight_value(::int64_t value);

  private:
  ::int64_t _internal_fight_value() const;
  void _internal_set_fight_value(::int64_t value);

  public:
  // int32 vip_exp = 9;
  void clear_vip_exp() ;
  ::int32_t vip_exp() const;
  void set_vip_exp(::int32_t value);

  private:
  ::int32_t _internal_vip_exp() const;
  void _internal_set_vip_exp(::int32_t value);

  public:
  // int32 city_copy_id = 11;
  void clear_city_copy_id() ;
  ::int32_t city_copy_id() const;
  void set_city_copy_id(::int32_t value);

  private:
  ::int32_t _internal_city_copy_id() const;
  void _internal_set_city_copy_id(::int32_t value);

  public:
  // uint64 create_time = 14;
  void clear_create_time() ;
  ::uint64_t create_time() const;
  void set_create_time(::uint64_t value);

  private:
  ::uint64_t _internal_create_time() const;
  void _internal_set_create_time(::uint64_t value);

  public:
  // uint64 logon_time = 15;
  void clear_logon_time() ;
  ::uint64_t logon_time() const;
  void set_logon_time(::uint64_t value);

  private:
  ::uint64_t _internal_logon_time() const;
  void _internal_set_logon_time(::uint64_t value);

  public:
  // uint64 logoff_time = 16;
  void clear_logoff_time() ;
  ::uint64_t logoff_time() const;
  void set_logoff_time(::uint64_t value);

  private:
  ::uint64_t _internal_logoff_time() const;
  void _internal_set_logoff_time(::uint64_t value);

  public:
  // uint64 guild_id = 17;
  void clear_guild_id() ;
  ::uint64_t guild_id() const;
  void set_guild_id(::uint64_t value);

  private:
  ::uint64_t _internal_guild_id() const;
  void _internal_set_guild_id(::uint64_t value);

  public:
  // int32 channel = 18;
  void clear_channel() ;
  ::int32_t channel() const;
  void set_channel(::int32_t value);

  private:
  ::int32_t _internal_channel() const;
  void _internal_set_channel(::int32_t value);

  public:
  // uint32 online_time = 19;
  void clear_online_time() ;
  ::uint32_t online_time() const;
  void set_online_time(::uint32_t value);

  private:
  ::uint32_t _internal_online_time() const;
  void _internal_set_online_time(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:RoleData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 19, 0,
      37, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RoleData& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> action_;
    ::google::protobuf::internal::CachedSize _action_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> action_time_;
    ::google::protobuf::internal::CachedSize _action_time_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::uint64_t account_id_;
    ::uint64_t role_id_;
    ::int32_t career_id_;
    ::int32_t level_;
    ::int64_t exp_;
    ::int32_t lang_id_;
    ::int32_t vip_level_;
    ::int64_t fight_value_;
    ::int32_t vip_exp_;
    ::int32_t city_copy_id_;
    ::uint64_t create_time_;
    ::uint64_t logon_time_;
    ::uint64_t logoff_time_;
    ::uint64_t guild_id_;
    ::int32_t channel_;
    ::uint32_t online_time_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class PetItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PetItem) */ {
 public:
  inline PetItem() : PetItem(nullptr) {}
  ~PetItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PetItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PetItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PetItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline PetItem(const PetItem& from) : PetItem(nullptr, from) {}
  inline PetItem(PetItem&& from) noexcept
      : PetItem(nullptr, std::move(from)) {}
  inline PetItem& operator=(const PetItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline PetItem& operator=(PetItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PetItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const PetItem* internal_default_instance() {
    return reinterpret_cast<const PetItem*>(
        &_PetItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(PetItem& a, PetItem& b) { a.Swap(&b); }
  inline void Swap(PetItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PetItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PetItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PetItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PetItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PetItem& from) { PetItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PetItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PetItem"; }

 protected:
  explicit PetItem(::google::protobuf::Arena* arena);
  PetItem(::google::protobuf::Arena* arena, const PetItem& from);
  PetItem(::google::protobuf::Arena* arena, PetItem&& from) noexcept
      : PetItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kGuidFieldNumber = 2,
    kPetIdFieldNumber = 3,
    kStrengthLvlFieldNumber = 4,
    kRefineLevelFieldNumber = 5,
    kStarLevelFieldNumber = 6,
    kIsUsingFieldNumber = 7,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint64 guid = 2;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // int32 pet_id = 3;
  void clear_pet_id() ;
  ::int32_t pet_id() const;
  void set_pet_id(::int32_t value);

  private:
  ::int32_t _internal_pet_id() const;
  void _internal_set_pet_id(::int32_t value);

  public:
  // int32 strength_lvl = 4;
  void clear_strength_lvl() ;
  ::int32_t strength_lvl() const;
  void set_strength_lvl(::int32_t value);

  private:
  ::int32_t _internal_strength_lvl() const;
  void _internal_set_strength_lvl(::int32_t value);

  public:
  // int32 refine_level = 5;
  void clear_refine_level() ;
  ::int32_t refine_level() const;
  void set_refine_level(::int32_t value);

  private:
  ::int32_t _internal_refine_level() const;
  void _internal_set_refine_level(::int32_t value);

  public:
  // int32 star_level = 6;
  void clear_star_level() ;
  ::int32_t star_level() const;
  void set_star_level(::int32_t value);

  private:
  ::int32_t _internal_star_level() const;
  void _internal_set_star_level(::int32_t value);

  public:
  // bool is_using = 7;
  void clear_is_using() ;
  bool is_using() const;
  void set_is_using(bool value);

  private:
  bool _internal_is_using() const;
  void _internal_set_is_using(bool value);

  public:
  // @@protoc_insertion_point(class_scope:PetItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PetItem& from_msg);
    ::uint64_t role_id_;
    ::uint64_t guid_;
    ::int32_t pet_id_;
    ::int32_t strength_lvl_;
    ::int32_t refine_level_;
    ::int32_t star_level_;
    bool is_using_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class PartnerItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PartnerItem) */ {
 public:
  inline PartnerItem() : PartnerItem(nullptr) {}
  ~PartnerItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PartnerItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PartnerItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PartnerItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline PartnerItem(const PartnerItem& from) : PartnerItem(nullptr, from) {}
  inline PartnerItem(PartnerItem&& from) noexcept
      : PartnerItem(nullptr, std::move(from)) {}
  inline PartnerItem& operator=(const PartnerItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline PartnerItem& operator=(PartnerItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PartnerItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const PartnerItem* internal_default_instance() {
    return reinterpret_cast<const PartnerItem*>(
        &_PartnerItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(PartnerItem& a, PartnerItem& b) { a.Swap(&b); }
  inline void Swap(PartnerItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PartnerItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PartnerItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PartnerItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PartnerItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PartnerItem& from) { PartnerItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PartnerItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PartnerItem"; }

 protected:
  explicit PartnerItem(::google::protobuf::Arena* arena);
  PartnerItem(::google::protobuf::Arena* arena, const PartnerItem& from);
  PartnerItem(::google::protobuf::Arena* arena, PartnerItem&& from) noexcept
      : PartnerItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kGuidFieldNumber = 2,
    kPartnerIdFieldNumber = 3,
    kStrengthLvlFieldNumber = 4,
    kRefineLevelFieldNumber = 5,
    kStarLevelFieldNumber = 6,
    kSetPosFieldNumber = 7,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint64 guid = 2;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // int32 partner_id = 3;
  void clear_partner_id() ;
  ::int32_t partner_id() const;
  void set_partner_id(::int32_t value);

  private:
  ::int32_t _internal_partner_id() const;
  void _internal_set_partner_id(::int32_t value);

  public:
  // int32 strength_lvl = 4;
  void clear_strength_lvl() ;
  ::int32_t strength_lvl() const;
  void set_strength_lvl(::int32_t value);

  private:
  ::int32_t _internal_strength_lvl() const;
  void _internal_set_strength_lvl(::int32_t value);

  public:
  // int32 refine_level = 5;
  void clear_refine_level() ;
  ::int32_t refine_level() const;
  void set_refine_level(::int32_t value);

  private:
  ::int32_t _internal_refine_level() const;
  void _internal_set_refine_level(::int32_t value);

  public:
  // int32 star_level = 6;
  void clear_star_level() ;
  ::int32_t star_level() const;
  void set_star_level(::int32_t value);

  private:
  ::int32_t _internal_star_level() const;
  void _internal_set_star_level(::int32_t value);

  public:
  // int32 set_pos = 7;
  void clear_set_pos() ;
  ::int32_t set_pos() const;
  void set_set_pos(::int32_t value);

  private:
  ::int32_t _internal_set_pos() const;
  void _internal_set_set_pos(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:PartnerItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PartnerItem& from_msg);
    ::uint64_t role_id_;
    ::uint64_t guid_;
    ::int32_t partner_id_;
    ::int32_t strength_lvl_;
    ::int32_t refine_level_;
    ::int32_t star_level_;
    ::int32_t set_pos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class MountItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MountItem) */ {
 public:
  inline MountItem() : MountItem(nullptr) {}
  ~MountItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MountItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MountItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MountItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline MountItem(const MountItem& from) : MountItem(nullptr, from) {}
  inline MountItem(MountItem&& from) noexcept
      : MountItem(nullptr, std::move(from)) {}
  inline MountItem& operator=(const MountItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline MountItem& operator=(MountItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MountItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const MountItem* internal_default_instance() {
    return reinterpret_cast<const MountItem*>(
        &_MountItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(MountItem& a, MountItem& b) { a.Swap(&b); }
  inline void Swap(MountItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MountItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MountItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MountItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MountItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MountItem& from) { MountItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MountItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "MountItem"; }

 protected:
  explicit MountItem(::google::protobuf::Arena* arena);
  MountItem(::google::protobuf::Arena* arena, const MountItem& from);
  MountItem(::google::protobuf::Arena* arena, MountItem&& from) noexcept
      : MountItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kGuidFieldNumber = 2,
    kMountIdFieldNumber = 3,
    kStrengthLvlFieldNumber = 4,
    kRefineLevelFieldNumber = 5,
    kStarLevelFieldNumber = 6,
    kIsUsingFieldNumber = 7,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint64 guid = 2;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // int32 mount_id = 3;
  void clear_mount_id() ;
  ::int32_t mount_id() const;
  void set_mount_id(::int32_t value);

  private:
  ::int32_t _internal_mount_id() const;
  void _internal_set_mount_id(::int32_t value);

  public:
  // int32 strength_lvl = 4;
  void clear_strength_lvl() ;
  ::int32_t strength_lvl() const;
  void set_strength_lvl(::int32_t value);

  private:
  ::int32_t _internal_strength_lvl() const;
  void _internal_set_strength_lvl(::int32_t value);

  public:
  // int32 refine_level = 5;
  void clear_refine_level() ;
  ::int32_t refine_level() const;
  void set_refine_level(::int32_t value);

  private:
  ::int32_t _internal_refine_level() const;
  void _internal_set_refine_level(::int32_t value);

  public:
  // int32 star_level = 6;
  void clear_star_level() ;
  ::int32_t star_level() const;
  void set_star_level(::int32_t value);

  private:
  ::int32_t _internal_star_level() const;
  void _internal_set_star_level(::int32_t value);

  public:
  // bool is_using = 7;
  void clear_is_using() ;
  bool is_using() const;
  void set_is_using(bool value);

  private:
  bool _internal_is_using() const;
  void _internal_set_is_using(bool value);

  public:
  // @@protoc_insertion_point(class_scope:MountItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MountItem& from_msg);
    ::uint64_t role_id_;
    ::uint64_t guid_;
    ::int32_t mount_id_;
    ::int32_t strength_lvl_;
    ::int32_t refine_level_;
    ::int32_t star_level_;
    bool is_using_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class MailItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MailItem) */ {
 public:
  inline MailItem() : MailItem(nullptr) {}
  ~MailItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MailItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MailItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MailItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline MailItem(const MailItem& from) : MailItem(nullptr, from) {}
  inline MailItem(MailItem&& from) noexcept
      : MailItem(nullptr, std::move(from)) {}
  inline MailItem& operator=(const MailItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline MailItem& operator=(MailItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MailItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const MailItem* internal_default_instance() {
    return reinterpret_cast<const MailItem*>(
        &_MailItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(MailItem& a, MailItem& b) { a.Swap(&b); }
  inline void Swap(MailItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MailItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MailItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MailItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MailItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MailItem& from) { MailItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MailItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "MailItem"; }

 protected:
  explicit MailItem(::google::protobuf::Arena* arena);
  MailItem(::google::protobuf::Arena* arena, const MailItem& from);
  MailItem(::google::protobuf::Arena* arena, MailItem&& from) noexcept
      : MailItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 6,
    kTitleFieldNumber = 9,
    kContentFieldNumber = 10,
    kItemsFieldNumber = 11,
    kRoleIdFieldNumber = 1,
    kGuidFieldNumber = 2,
    kGroupIdFieldNumber = 3,
    kTimeFieldNumber = 4,
    kSenderIdFieldNumber = 5,
    kMailTypeFieldNumber = 7,
    kStatusFieldNumber = 8,
  };
  // string sender = 6;
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string title = 9;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string content = 10;
  void clear_content() ;
  const std::string& content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* value);

  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(
      const std::string& value);
  std::string* _internal_mutable_content();

  public:
  // bytes items = 11;
  void clear_items() ;
  const std::string& items() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_items(Arg_&& arg, Args_... args);
  std::string* mutable_items();
  PROTOBUF_NODISCARD std::string* release_items();
  void set_allocated_items(std::string* value);

  private:
  const std::string& _internal_items() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_items(
      const std::string& value);
  std::string* _internal_mutable_items();

  public:
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint64 guid = 2;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // uint64 group_id = 3;
  void clear_group_id() ;
  ::uint64_t group_id() const;
  void set_group_id(::uint64_t value);

  private:
  ::uint64_t _internal_group_id() const;
  void _internal_set_group_id(::uint64_t value);

  public:
  // uint64 time = 4;
  void clear_time() ;
  ::uint64_t time() const;
  void set_time(::uint64_t value);

  private:
  ::uint64_t _internal_time() const;
  void _internal_set_time(::uint64_t value);

  public:
  // uint64 sender_id = 5;
  void clear_sender_id() ;
  ::uint64_t sender_id() const;
  void set_sender_id(::uint64_t value);

  private:
  ::uint64_t _internal_sender_id() const;
  void _internal_set_sender_id(::uint64_t value);

  public:
  // uint32 mail_type = 7;
  void clear_mail_type() ;
  ::uint32_t mail_type() const;
  void set_mail_type(::uint32_t value);

  private:
  ::uint32_t _internal_mail_type() const;
  void _internal_set_mail_type(::uint32_t value);

  public:
  // uint32 status = 8;
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MailItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 0,
      43, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MailItem& from_msg);
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr content_;
    ::google::protobuf::internal::ArenaStringPtr items_;
    ::uint64_t role_id_;
    ::uint64_t guid_;
    ::uint64_t group_id_;
    ::uint64_t time_;
    ::uint64_t sender_id_;
    ::uint32_t mail_type_;
    ::uint32_t status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class GemItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GemItem) */ {
 public:
  inline GemItem() : GemItem(nullptr) {}
  ~GemItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GemItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GemItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GemItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline GemItem(const GemItem& from) : GemItem(nullptr, from) {}
  inline GemItem(GemItem&& from) noexcept
      : GemItem(nullptr, std::move(from)) {}
  inline GemItem& operator=(const GemItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline GemItem& operator=(GemItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GemItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const GemItem* internal_default_instance() {
    return reinterpret_cast<const GemItem*>(
        &_GemItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(GemItem& a, GemItem& b) { a.Swap(&b); }
  inline void Swap(GemItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GemItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GemItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GemItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GemItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GemItem& from) { GemItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GemItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "GemItem"; }

 protected:
  explicit GemItem(::google::protobuf::Arena* arena);
  GemItem(::google::protobuf::Arena* arena, const GemItem& from);
  GemItem(::google::protobuf::Arena* arena, GemItem&& from) noexcept
      : GemItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kGuidFieldNumber = 2,
    kGemIdFieldNumber = 3,
    kStrengthLvlFieldNumber = 4,
    kRefineLevelFieldNumber = 5,
    kStarLevelFieldNumber = 6,
    kRefineExpFieldNumber = 7,
    kStarExpFieldNumber = 8,
    kPosFieldNumber = 9,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint64 guid = 2;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // int32 gem_id = 3;
  void clear_gem_id() ;
  ::int32_t gem_id() const;
  void set_gem_id(::int32_t value);

  private:
  ::int32_t _internal_gem_id() const;
  void _internal_set_gem_id(::int32_t value);

  public:
  // int32 strength_lvl = 4;
  void clear_strength_lvl() ;
  ::int32_t strength_lvl() const;
  void set_strength_lvl(::int32_t value);

  private:
  ::int32_t _internal_strength_lvl() const;
  void _internal_set_strength_lvl(::int32_t value);

  public:
  // int32 refine_level = 5;
  void clear_refine_level() ;
  ::int32_t refine_level() const;
  void set_refine_level(::int32_t value);

  private:
  ::int32_t _internal_refine_level() const;
  void _internal_set_refine_level(::int32_t value);

  public:
  // int32 star_level = 6;
  void clear_star_level() ;
  ::int32_t star_level() const;
  void set_star_level(::int32_t value);

  private:
  ::int32_t _internal_star_level() const;
  void _internal_set_star_level(::int32_t value);

  public:
  // int32 refine_exp = 7;
  void clear_refine_exp() ;
  ::int32_t refine_exp() const;
  void set_refine_exp(::int32_t value);

  private:
  ::int32_t _internal_refine_exp() const;
  void _internal_set_refine_exp(::int32_t value);

  public:
  // int32 star_exp = 8;
  void clear_star_exp() ;
  ::int32_t star_exp() const;
  void set_star_exp(::int32_t value);

  private:
  ::int32_t _internal_star_exp() const;
  void _internal_set_star_exp(::int32_t value);

  public:
  // int32 pos = 9;
  void clear_pos() ;
  ::int32_t pos() const;
  void set_pos(::int32_t value);

  private:
  ::int32_t _internal_pos() const;
  void _internal_set_pos(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:GemItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GemItem& from_msg);
    ::uint64_t role_id_;
    ::uint64_t guid_;
    ::int32_t gem_id_;
    ::int32_t strength_lvl_;
    ::int32_t refine_level_;
    ::int32_t star_level_;
    ::int32_t refine_exp_;
    ::int32_t star_exp_;
    ::int32_t pos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class FriendItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:FriendItem) */ {
 public:
  inline FriendItem() : FriendItem(nullptr) {}
  ~FriendItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FriendItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FriendItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FriendItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline FriendItem(const FriendItem& from) : FriendItem(nullptr, from) {}
  inline FriendItem(FriendItem&& from) noexcept
      : FriendItem(nullptr, std::move(from)) {}
  inline FriendItem& operator=(const FriendItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline FriendItem& operator=(FriendItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FriendItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const FriendItem* internal_default_instance() {
    return reinterpret_cast<const FriendItem*>(
        &_FriendItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(FriendItem& a, FriendItem& b) { a.Swap(&b); }
  inline void Swap(FriendItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FriendItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FriendItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FriendItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FriendItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FriendItem& from) { FriendItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FriendItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "FriendItem"; }

 protected:
  explicit FriendItem(::google::protobuf::Arena* arena);
  FriendItem(::google::protobuf::Arena* arena, const FriendItem& from);
  FriendItem(::google::protobuf::Arena* arena, FriendItem&& from) noexcept
      : FriendItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kFriendIdFieldNumber = 2,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint64 friend_id = 2;
  void clear_friend_id() ;
  ::uint64_t friend_id() const;
  void set_friend_id(::uint64_t value);

  private:
  ::uint64_t _internal_friend_id() const;
  void _internal_set_friend_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:FriendItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FriendItem& from_msg);
    ::uint64_t role_id_;
    ::uint64_t friend_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class EquipItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:EquipItem) */ {
 public:
  inline EquipItem() : EquipItem(nullptr) {}
  ~EquipItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EquipItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EquipItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EquipItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline EquipItem(const EquipItem& from) : EquipItem(nullptr, from) {}
  inline EquipItem(EquipItem&& from) noexcept
      : EquipItem(nullptr, std::move(from)) {}
  inline EquipItem& operator=(const EquipItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline EquipItem& operator=(EquipItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EquipItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const EquipItem* internal_default_instance() {
    return reinterpret_cast<const EquipItem*>(
        &_EquipItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(EquipItem& a, EquipItem& b) { a.Swap(&b); }
  inline void Swap(EquipItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EquipItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EquipItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EquipItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EquipItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EquipItem& from) { EquipItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EquipItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "EquipItem"; }

 protected:
  explicit EquipItem(::google::protobuf::Arena* arena);
  EquipItem(::google::protobuf::Arena* arena, const EquipItem& from);
  EquipItem(::google::protobuf::Arena* arena, EquipItem&& from) noexcept
      : EquipItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kGuidFieldNumber = 2,
    kEquipIdFieldNumber = 3,
    kStrengthLvlFieldNumber = 4,
    kRefineLevelFieldNumber = 5,
    kStarLevelFieldNumber = 6,
    kRefineExpFieldNumber = 7,
    kStarExpFieldNumber = 8,
    kIsUsingFieldNumber = 9,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint64 guid = 2;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // int32 equip_id = 3;
  void clear_equip_id() ;
  ::int32_t equip_id() const;
  void set_equip_id(::int32_t value);

  private:
  ::int32_t _internal_equip_id() const;
  void _internal_set_equip_id(::int32_t value);

  public:
  // int32 strength_lvl = 4;
  void clear_strength_lvl() ;
  ::int32_t strength_lvl() const;
  void set_strength_lvl(::int32_t value);

  private:
  ::int32_t _internal_strength_lvl() const;
  void _internal_set_strength_lvl(::int32_t value);

  public:
  // int32 refine_level = 5;
  void clear_refine_level() ;
  ::int32_t refine_level() const;
  void set_refine_level(::int32_t value);

  private:
  ::int32_t _internal_refine_level() const;
  void _internal_set_refine_level(::int32_t value);

  public:
  // int32 star_level = 6;
  void clear_star_level() ;
  ::int32_t star_level() const;
  void set_star_level(::int32_t value);

  private:
  ::int32_t _internal_star_level() const;
  void _internal_set_star_level(::int32_t value);

  public:
  // int32 refine_exp = 7;
  void clear_refine_exp() ;
  ::int32_t refine_exp() const;
  void set_refine_exp(::int32_t value);

  private:
  ::int32_t _internal_refine_exp() const;
  void _internal_set_refine_exp(::int32_t value);

  public:
  // int32 star_exp = 8;
  void clear_star_exp() ;
  ::int32_t star_exp() const;
  void set_star_exp(::int32_t value);

  private:
  ::int32_t _internal_star_exp() const;
  void _internal_set_star_exp(::int32_t value);

  public:
  // bool is_using = 9;
  void clear_is_using() ;
  bool is_using() const;
  void set_is_using(bool value);

  private:
  bool _internal_is_using() const;
  void _internal_set_is_using(bool value);

  public:
  // @@protoc_insertion_point(class_scope:EquipItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EquipItem& from_msg);
    ::uint64_t role_id_;
    ::uint64_t guid_;
    ::int32_t equip_id_;
    ::int32_t strength_lvl_;
    ::int32_t refine_level_;
    ::int32_t star_level_;
    ::int32_t refine_exp_;
    ::int32_t star_exp_;
    bool is_using_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class DBSkillItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DBSkillItem) */ {
 public:
  inline DBSkillItem() : DBSkillItem(nullptr) {}
  ~DBSkillItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBSkillItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBSkillItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBSkillItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline DBSkillItem(const DBSkillItem& from) : DBSkillItem(nullptr, from) {}
  inline DBSkillItem(DBSkillItem&& from) noexcept
      : DBSkillItem(nullptr, std::move(from)) {}
  inline DBSkillItem& operator=(const DBSkillItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBSkillItem& operator=(DBSkillItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBSkillItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBSkillItem* internal_default_instance() {
    return reinterpret_cast<const DBSkillItem*>(
        &_DBSkillItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(DBSkillItem& a, DBSkillItem& b) { a.Swap(&b); }
  inline void Swap(DBSkillItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBSkillItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBSkillItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBSkillItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBSkillItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBSkillItem& from) { DBSkillItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBSkillItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DBSkillItem"; }

 protected:
  explicit DBSkillItem(::google::protobuf::Arena* arena);
  DBSkillItem(::google::protobuf::Arena* arena, const DBSkillItem& from);
  DBSkillItem(::google::protobuf::Arena* arena, DBSkillItem&& from) noexcept
      : DBSkillItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kSkillIdFieldNumber = 2,
    kLevelFieldNumber = 3,
    kKeyPosFieldNumber = 4,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint32 skill_id = 2;
  void clear_skill_id() ;
  ::uint32_t skill_id() const;
  void set_skill_id(::uint32_t value);

  private:
  ::uint32_t _internal_skill_id() const;
  void _internal_set_skill_id(::uint32_t value);

  public:
  // int32 level = 3;
  void clear_level() ;
  ::int32_t level() const;
  void set_level(::int32_t value);

  private:
  ::int32_t _internal_level() const;
  void _internal_set_level(::int32_t value);

  public:
  // int32 key_pos = 4;
  void clear_key_pos() ;
  ::int32_t key_pos() const;
  void set_key_pos(::int32_t value);

  private:
  ::int32_t _internal_key_pos() const;
  void _internal_set_key_pos(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DBSkillItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DBSkillItem& from_msg);
    ::uint64_t role_id_;
    ::uint32_t skill_id_;
    ::int32_t level_;
    ::int32_t key_pos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class CounterItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CounterItem) */ {
 public:
  inline CounterItem() : CounterItem(nullptr) {}
  ~CounterItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CounterItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CounterItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CounterItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline CounterItem(const CounterItem& from) : CounterItem(nullptr, from) {}
  inline CounterItem(CounterItem&& from) noexcept
      : CounterItem(nullptr, std::move(from)) {}
  inline CounterItem& operator=(const CounterItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CounterItem& operator=(CounterItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CounterItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CounterItem* internal_default_instance() {
    return reinterpret_cast<const CounterItem*>(
        &_CounterItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(CounterItem& a, CounterItem& b) { a.Swap(&b); }
  inline void Swap(CounterItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CounterItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CounterItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CounterItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CounterItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CounterItem& from) { CounterItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CounterItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CounterItem"; }

 protected:
  explicit CounterItem(::google::protobuf::Arena* arena);
  CounterItem(::google::protobuf::Arena* arena, const CounterItem& from);
  CounterItem(::google::protobuf::Arena* arena, CounterItem&& from) noexcept
      : CounterItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kCounterIdFieldNumber = 2,
    kIndexFieldNumber = 3,
    kValueFieldNumber = 4,
    kTimeFieldNumber = 5,
    kParam1FieldNumber = 6,
    kParam2FieldNumber = 7,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint32 counter_id = 2;
  void clear_counter_id() ;
  ::uint32_t counter_id() const;
  void set_counter_id(::uint32_t value);

  private:
  ::uint32_t _internal_counter_id() const;
  void _internal_set_counter_id(::uint32_t value);

  public:
  // uint32 index = 3;
  void clear_index() ;
  ::uint32_t index() const;
  void set_index(::uint32_t value);

  private:
  ::uint32_t _internal_index() const;
  void _internal_set_index(::uint32_t value);

  public:
  // int64 value = 4;
  void clear_value() ;
  ::int64_t value() const;
  void set_value(::int64_t value);

  private:
  ::int64_t _internal_value() const;
  void _internal_set_value(::int64_t value);

  public:
  // uint64 time = 5;
  void clear_time() ;
  ::uint64_t time() const;
  void set_time(::uint64_t value);

  private:
  ::uint64_t _internal_time() const;
  void _internal_set_time(::uint64_t value);

  public:
  // uint32 param1 = 6;
  void clear_param1() ;
  ::uint32_t param1() const;
  void set_param1(::uint32_t value);

  private:
  ::uint32_t _internal_param1() const;
  void _internal_set_param1(::uint32_t value);

  public:
  // uint32 param2 = 7;
  void clear_param2() ;
  ::uint32_t param2() const;
  void set_param2(::uint32_t value);

  private:
  ::uint32_t _internal_param2() const;
  void _internal_set_param2(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CounterItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CounterItem& from_msg);
    ::uint64_t role_id_;
    ::uint32_t counter_id_;
    ::uint32_t index_;
    ::int64_t value_;
    ::uint64_t time_;
    ::uint32_t param1_;
    ::uint32_t param2_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class CopyItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CopyItem) */ {
 public:
  inline CopyItem() : CopyItem(nullptr) {}
  ~CopyItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CopyItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CopyItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CopyItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline CopyItem(const CopyItem& from) : CopyItem(nullptr, from) {}
  inline CopyItem(CopyItem&& from) noexcept
      : CopyItem(nullptr, std::move(from)) {}
  inline CopyItem& operator=(const CopyItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CopyItem& operator=(CopyItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CopyItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CopyItem* internal_default_instance() {
    return reinterpret_cast<const CopyItem*>(
        &_CopyItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CopyItem& a, CopyItem& b) { a.Swap(&b); }
  inline void Swap(CopyItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CopyItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CopyItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CopyItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CopyItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CopyItem& from) { CopyItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CopyItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CopyItem"; }

 protected:
  explicit CopyItem(::google::protobuf::Arena* arena);
  CopyItem(::google::protobuf::Arena* arena, const CopyItem& from);
  CopyItem(::google::protobuf::Arena* arena, CopyItem&& from) noexcept
      : CopyItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kCopyIdFieldNumber = 2,
    kStarNumFieldNumber = 3,
    kBattleCntFieldNumber = 4,
    kResetCntFieldNumber = 5,
    kBattleTimeFieldNumber = 6,
    kResetTimeFieldNumber = 7,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint32 copy_id = 2;
  void clear_copy_id() ;
  ::uint32_t copy_id() const;
  void set_copy_id(::uint32_t value);

  private:
  ::uint32_t _internal_copy_id() const;
  void _internal_set_copy_id(::uint32_t value);

  public:
  // int32 star_num = 3;
  void clear_star_num() ;
  ::int32_t star_num() const;
  void set_star_num(::int32_t value);

  private:
  ::int32_t _internal_star_num() const;
  void _internal_set_star_num(::int32_t value);

  public:
  // int32 battle_cnt = 4;
  void clear_battle_cnt() ;
  ::int32_t battle_cnt() const;
  void set_battle_cnt(::int32_t value);

  private:
  ::int32_t _internal_battle_cnt() const;
  void _internal_set_battle_cnt(::int32_t value);

  public:
  // int32 reset_cnt = 5;
  void clear_reset_cnt() ;
  ::int32_t reset_cnt() const;
  void set_reset_cnt(::int32_t value);

  private:
  ::int32_t _internal_reset_cnt() const;
  void _internal_set_reset_cnt(::int32_t value);

  public:
  // uint64 battle_time = 6;
  void clear_battle_time() ;
  ::uint64_t battle_time() const;
  void set_battle_time(::uint64_t value);

  private:
  ::uint64_t _internal_battle_time() const;
  void _internal_set_battle_time(::uint64_t value);

  public:
  // uint64 reset_time = 7;
  void clear_reset_time() ;
  ::uint64_t reset_time() const;
  void set_reset_time(::uint64_t value);

  private:
  ::uint64_t _internal_reset_time() const;
  void _internal_set_reset_time(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CopyItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CopyItem& from_msg);
    ::uint64_t role_id_;
    ::uint32_t copy_id_;
    ::int32_t star_num_;
    ::int32_t battle_cnt_;
    ::int32_t reset_cnt_;
    ::uint64_t battle_time_;
    ::uint64_t reset_time_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class ChapterItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ChapterItem) */ {
 public:
  inline ChapterItem() : ChapterItem(nullptr) {}
  ~ChapterItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ChapterItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ChapterItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChapterItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChapterItem(const ChapterItem& from) : ChapterItem(nullptr, from) {}
  inline ChapterItem(ChapterItem&& from) noexcept
      : ChapterItem(nullptr, std::move(from)) {}
  inline ChapterItem& operator=(const ChapterItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChapterItem& operator=(ChapterItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChapterItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChapterItem* internal_default_instance() {
    return reinterpret_cast<const ChapterItem*>(
        &_ChapterItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ChapterItem& a, ChapterItem& b) { a.Swap(&b); }
  inline void Swap(ChapterItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChapterItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChapterItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ChapterItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChapterItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChapterItem& from) { ChapterItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ChapterItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ChapterItem"; }

 protected:
  explicit ChapterItem(::google::protobuf::Arena* arena);
  ChapterItem(::google::protobuf::Arena* arena, const ChapterItem& from);
  ChapterItem(::google::protobuf::Arena* arena, ChapterItem&& from) noexcept
      : ChapterItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleIdFieldNumber = 1,
    kCopyTypeFieldNumber = 2,
    kChapterIdFieldNumber = 3,
    kStarAwardFieldNumber = 4,
    kSceneAwardFieldNumber = 5,
  };
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint32 copy_type = 2;
  void clear_copy_type() ;
  ::uint32_t copy_type() const;
  void set_copy_type(::uint32_t value);

  private:
  ::uint32_t _internal_copy_type() const;
  void _internal_set_copy_type(::uint32_t value);

  public:
  // uint32 chapter_id = 3;
  void clear_chapter_id() ;
  ::uint32_t chapter_id() const;
  void set_chapter_id(::uint32_t value);

  private:
  ::uint32_t _internal_chapter_id() const;
  void _internal_set_chapter_id(::uint32_t value);

  public:
  // uint32 star_award = 4;
  void clear_star_award() ;
  ::uint32_t star_award() const;
  void set_star_award(::uint32_t value);

  private:
  ::uint32_t _internal_star_award() const;
  void _internal_set_star_award(::uint32_t value);

  public:
  // uint32 scene_award = 5;
  void clear_scene_award() ;
  ::uint32_t scene_award() const;
  void set_scene_award(::uint32_t value);

  private:
  ::uint32_t _internal_scene_award() const;
  void _internal_set_scene_award(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ChapterItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChapterItem& from_msg);
    ::uint64_t role_id_;
    ::uint32_t copy_type_;
    ::uint32_t chapter_id_;
    ::uint32_t star_award_;
    ::uint32_t scene_award_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class BagItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BagItem) */ {
 public:
  inline BagItem() : BagItem(nullptr) {}
  ~BagItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BagItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BagItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BagItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline BagItem(const BagItem& from) : BagItem(nullptr, from) {}
  inline BagItem(BagItem&& from) noexcept
      : BagItem(nullptr, std::move(from)) {}
  inline BagItem& operator=(const BagItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline BagItem& operator=(BagItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BagItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const BagItem* internal_default_instance() {
    return reinterpret_cast<const BagItem*>(
        &_BagItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(BagItem& a, BagItem& b) { a.Swap(&b); }
  inline void Swap(BagItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BagItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BagItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BagItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BagItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BagItem& from) { BagItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BagItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BagItem"; }

 protected:
  explicit BagItem(::google::protobuf::Arena* arena);
  BagItem(::google::protobuf::Arena* arena, const BagItem& from);
  BagItem(::google::protobuf::Arena* arena, BagItem&& from) noexcept
      : BagItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGuidFieldNumber = 1,
    kRoleIdFieldNumber = 2,
    kItemGuidFieldNumber = 3,
    kCountFieldNumber = 5,
    kItemIdFieldNumber = 4,
    kBindFieldNumber = 6,
    kStatusFieldNumber = 7,
  };
  // uint64 guid = 1;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // uint64 role_id = 2;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint64 item_guid = 3;
  void clear_item_guid() ;
  ::uint64_t item_guid() const;
  void set_item_guid(::uint64_t value);

  private:
  ::uint64_t _internal_item_guid() const;
  void _internal_set_item_guid(::uint64_t value);

  public:
  // int64 count = 5;
  void clear_count() ;
  ::int64_t count() const;
  void set_count(::int64_t value);

  private:
  ::int64_t _internal_count() const;
  void _internal_set_count(::int64_t value);

  public:
  // uint32 item_id = 4;
  void clear_item_id() ;
  ::uint32_t item_id() const;
  void set_item_id(::uint32_t value);

  private:
  ::uint32_t _internal_item_id() const;
  void _internal_set_item_id(::uint32_t value);

  public:
  // .BindType bind = 6;
  void clear_bind() ;
  ::BindType bind() const;
  void set_bind(::BindType value);

  private:
  ::BindType _internal_bind() const;
  void _internal_set_bind(::BindType value);

  public:
  // .ItemStatus status = 7;
  void clear_status() ;
  ::ItemStatus status() const;
  void set_status(::ItemStatus value);

  private:
  ::ItemStatus _internal_status() const;
  void _internal_set_status(::ItemStatus value);

  public:
  // @@protoc_insertion_point(class_scope:BagItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BagItem& from_msg);
    ::uint64_t guid_;
    ::uint64_t role_id_;
    ::uint64_t item_guid_;
    ::int64_t count_;
    ::uint32_t item_id_;
    int bind_;
    int status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class ActivityItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ActivityItem) */ {
 public:
  inline ActivityItem() : ActivityItem(nullptr) {}
  ~ActivityItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ActivityItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ActivityItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ActivityItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline ActivityItem(const ActivityItem& from) : ActivityItem(nullptr, from) {}
  inline ActivityItem(ActivityItem&& from) noexcept
      : ActivityItem(nullptr, std::move(from)) {}
  inline ActivityItem& operator=(const ActivityItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActivityItem& operator=(ActivityItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActivityItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActivityItem* internal_default_instance() {
    return reinterpret_cast<const ActivityItem*>(
        &_ActivityItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(ActivityItem& a, ActivityItem& b) { a.Swap(&b); }
  inline void Swap(ActivityItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActivityItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActivityItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ActivityItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ActivityItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ActivityItem& from) { ActivityItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ActivityItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ActivityItem"; }

 protected:
  explicit ActivityItem(::google::protobuf::Arena* arena);
  ActivityItem(::google::protobuf::Arena* arena, const ActivityItem& from);
  ActivityItem(::google::protobuf::Arena* arena, ActivityItem&& from) noexcept
      : ActivityItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 6,
    kRoleIdFieldNumber = 1,
    kActivityIdFieldNumber = 2,
    kActivityTypeFieldNumber = 3,
    kJoinTimeFieldNumber = 4,
    kDataLenFieldNumber = 5,
  };
  // bytes data = 6;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // uint64 role_id = 1;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint32 activity_id = 2;
  void clear_activity_id() ;
  ::uint32_t activity_id() const;
  void set_activity_id(::uint32_t value);

  private:
  ::uint32_t _internal_activity_id() const;
  void _internal_set_activity_id(::uint32_t value);

  public:
  // uint32 activity_type = 3;
  void clear_activity_type() ;
  ::uint32_t activity_type() const;
  void set_activity_type(::uint32_t value);

  private:
  ::uint32_t _internal_activity_type() const;
  void _internal_set_activity_type(::uint32_t value);

  public:
  // uint32 join_time = 4;
  void clear_join_time() ;
  ::uint32_t join_time() const;
  void set_join_time(::uint32_t value);

  private:
  ::uint32_t _internal_join_time() const;
  void _internal_set_join_time(::uint32_t value);

  public:
  // uint32 data_len = 5;
  void clear_data_len() ;
  ::uint32_t data_len() const;
  void set_data_len(::uint32_t value);

  private:
  ::uint32_t _internal_data_len() const;
  void _internal_set_data_len(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ActivityItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ActivityItem& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::uint64_t role_id_;
    ::uint32_t activity_id_;
    ::uint32_t activity_type_;
    ::uint32_t join_time_;
    ::uint32_t data_len_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class Tasks final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Tasks) */ {
 public:
  inline Tasks() : Tasks(nullptr) {}
  ~Tasks() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Tasks* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Tasks));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Tasks(
      ::google::protobuf::internal::ConstantInitialized);

  inline Tasks(const Tasks& from) : Tasks(nullptr, from) {}
  inline Tasks(Tasks&& from) noexcept
      : Tasks(nullptr, std::move(from)) {}
  inline Tasks& operator=(const Tasks& from) {
    CopyFrom(from);
    return *this;
  }
  inline Tasks& operator=(Tasks&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Tasks& default_instance() {
    return *internal_default_instance();
  }
  static inline const Tasks* internal_default_instance() {
    return reinterpret_cast<const Tasks*>(
        &_Tasks_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(Tasks& a, Tasks& b) { a.Swap(&b); }
  inline void Swap(Tasks* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Tasks* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Tasks* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Tasks>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Tasks& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Tasks& from) { Tasks::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Tasks* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Tasks"; }

 protected:
  explicit Tasks(::google::protobuf::Arena* arena);
  Tasks(::google::protobuf::Arena* arena, const Tasks& from);
  Tasks(::google::protobuf::Arena* arena, Tasks&& from) noexcept
      : Tasks(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .TaskItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::TaskItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::TaskItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::TaskItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::TaskItem>* _internal_mutable_items();
  public:
  const ::TaskItem& items(int index) const;
  ::TaskItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::TaskItem>& items() const;
  // @@protoc_insertion_point(class_scope:Tasks)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Tasks& from_msg);
    ::google::protobuf::RepeatedPtrField< ::TaskItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class Skills final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Skills) */ {
 public:
  inline Skills() : Skills(nullptr) {}
  ~Skills() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Skills* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Skills));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Skills(
      ::google::protobuf::internal::ConstantInitialized);

  inline Skills(const Skills& from) : Skills(nullptr, from) {}
  inline Skills(Skills&& from) noexcept
      : Skills(nullptr, std::move(from)) {}
  inline Skills& operator=(const Skills& from) {
    CopyFrom(from);
    return *this;
  }
  inline Skills& operator=(Skills&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Skills& default_instance() {
    return *internal_default_instance();
  }
  static inline const Skills* internal_default_instance() {
    return reinterpret_cast<const Skills*>(
        &_Skills_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(Skills& a, Skills& b) { a.Swap(&b); }
  inline void Swap(Skills* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Skills* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Skills* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Skills>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Skills& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Skills& from) { Skills::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Skills* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Skills"; }

 protected:
  explicit Skills(::google::protobuf::Arena* arena);
  Skills(::google::protobuf::Arena* arena, const Skills& from);
  Skills(::google::protobuf::Arena* arena, Skills&& from) noexcept
      : Skills(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .DBSkillItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DBSkillItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DBSkillItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DBSkillItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DBSkillItem>* _internal_mutable_items();
  public:
  const ::DBSkillItem& items(int index) const;
  ::DBSkillItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DBSkillItem>& items() const;
  // @@protoc_insertion_point(class_scope:Skills)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Skills& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DBSkillItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class Pets final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Pets) */ {
 public:
  inline Pets() : Pets(nullptr) {}
  ~Pets() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Pets* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Pets));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Pets(
      ::google::protobuf::internal::ConstantInitialized);

  inline Pets(const Pets& from) : Pets(nullptr, from) {}
  inline Pets(Pets&& from) noexcept
      : Pets(nullptr, std::move(from)) {}
  inline Pets& operator=(const Pets& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pets& operator=(Pets&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Pets& default_instance() {
    return *internal_default_instance();
  }
  static inline const Pets* internal_default_instance() {
    return reinterpret_cast<const Pets*>(
        &_Pets_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(Pets& a, Pets& b) { a.Swap(&b); }
  inline void Swap(Pets* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pets* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Pets* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Pets>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Pets& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Pets& from) { Pets::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Pets* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Pets"; }

 protected:
  explicit Pets(::google::protobuf::Arena* arena);
  Pets(::google::protobuf::Arena* arena, const Pets& from);
  Pets(::google::protobuf::Arena* arena, Pets&& from) noexcept
      : Pets(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .PetItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::PetItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::PetItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::PetItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::PetItem>* _internal_mutable_items();
  public:
  const ::PetItem& items(int index) const;
  ::PetItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::PetItem>& items() const;
  // @@protoc_insertion_point(class_scope:Pets)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Pets& from_msg);
    ::google::protobuf::RepeatedPtrField< ::PetItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class Partners final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Partners) */ {
 public:
  inline Partners() : Partners(nullptr) {}
  ~Partners() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Partners* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Partners));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Partners(
      ::google::protobuf::internal::ConstantInitialized);

  inline Partners(const Partners& from) : Partners(nullptr, from) {}
  inline Partners(Partners&& from) noexcept
      : Partners(nullptr, std::move(from)) {}
  inline Partners& operator=(const Partners& from) {
    CopyFrom(from);
    return *this;
  }
  inline Partners& operator=(Partners&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Partners& default_instance() {
    return *internal_default_instance();
  }
  static inline const Partners* internal_default_instance() {
    return reinterpret_cast<const Partners*>(
        &_Partners_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(Partners& a, Partners& b) { a.Swap(&b); }
  inline void Swap(Partners* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Partners* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Partners* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Partners>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Partners& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Partners& from) { Partners::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Partners* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Partners"; }

 protected:
  explicit Partners(::google::protobuf::Arena* arena);
  Partners(::google::protobuf::Arena* arena, const Partners& from);
  Partners(::google::protobuf::Arena* arena, Partners&& from) noexcept
      : Partners(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .PartnerItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::PartnerItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::PartnerItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::PartnerItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::PartnerItem>* _internal_mutable_items();
  public:
  const ::PartnerItem& items(int index) const;
  ::PartnerItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::PartnerItem>& items() const;
  // @@protoc_insertion_point(class_scope:Partners)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Partners& from_msg);
    ::google::protobuf::RepeatedPtrField< ::PartnerItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class Mounts final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Mounts) */ {
 public:
  inline Mounts() : Mounts(nullptr) {}
  ~Mounts() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Mounts* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Mounts));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Mounts(
      ::google::protobuf::internal::ConstantInitialized);

  inline Mounts(const Mounts& from) : Mounts(nullptr, from) {}
  inline Mounts(Mounts&& from) noexcept
      : Mounts(nullptr, std::move(from)) {}
  inline Mounts& operator=(const Mounts& from) {
    CopyFrom(from);
    return *this;
  }
  inline Mounts& operator=(Mounts&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Mounts& default_instance() {
    return *internal_default_instance();
  }
  static inline const Mounts* internal_default_instance() {
    return reinterpret_cast<const Mounts*>(
        &_Mounts_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(Mounts& a, Mounts& b) { a.Swap(&b); }
  inline void Swap(Mounts* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Mounts* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Mounts* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Mounts>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Mounts& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Mounts& from) { Mounts::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Mounts* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Mounts"; }

 protected:
  explicit Mounts(::google::protobuf::Arena* arena);
  Mounts(::google::protobuf::Arena* arena, const Mounts& from);
  Mounts(::google::protobuf::Arena* arena, Mounts&& from) noexcept
      : Mounts(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .MountItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::MountItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::MountItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::MountItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::MountItem>* _internal_mutable_items();
  public:
  const ::MountItem& items(int index) const;
  ::MountItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::MountItem>& items() const;
  // @@protoc_insertion_point(class_scope:Mounts)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Mounts& from_msg);
    ::google::protobuf::RepeatedPtrField< ::MountItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class Mails final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Mails) */ {
 public:
  inline Mails() : Mails(nullptr) {}
  ~Mails() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Mails* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Mails));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Mails(
      ::google::protobuf::internal::ConstantInitialized);

  inline Mails(const Mails& from) : Mails(nullptr, from) {}
  inline Mails(Mails&& from) noexcept
      : Mails(nullptr, std::move(from)) {}
  inline Mails& operator=(const Mails& from) {
    CopyFrom(from);
    return *this;
  }
  inline Mails& operator=(Mails&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Mails& default_instance() {
    return *internal_default_instance();
  }
  static inline const Mails* internal_default_instance() {
    return reinterpret_cast<const Mails*>(
        &_Mails_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(Mails& a, Mails& b) { a.Swap(&b); }
  inline void Swap(Mails* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Mails* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Mails* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Mails>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Mails& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Mails& from) { Mails::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Mails* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Mails"; }

 protected:
  explicit Mails(::google::protobuf::Arena* arena);
  Mails(::google::protobuf::Arena* arena, const Mails& from);
  Mails(::google::protobuf::Arena* arena, Mails&& from) noexcept
      : Mails(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .MailItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::MailItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::MailItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::MailItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::MailItem>* _internal_mutable_items();
  public:
  const ::MailItem& items(int index) const;
  ::MailItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::MailItem>& items() const;
  // @@protoc_insertion_point(class_scope:Mails)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Mails& from_msg);
    ::google::protobuf::RepeatedPtrField< ::MailItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class Gems final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Gems) */ {
 public:
  inline Gems() : Gems(nullptr) {}
  ~Gems() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Gems* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Gems));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Gems(
      ::google::protobuf::internal::ConstantInitialized);

  inline Gems(const Gems& from) : Gems(nullptr, from) {}
  inline Gems(Gems&& from) noexcept
      : Gems(nullptr, std::move(from)) {}
  inline Gems& operator=(const Gems& from) {
    CopyFrom(from);
    return *this;
  }
  inline Gems& operator=(Gems&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Gems& default_instance() {
    return *internal_default_instance();
  }
  static inline const Gems* internal_default_instance() {
    return reinterpret_cast<const Gems*>(
        &_Gems_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(Gems& a, Gems& b) { a.Swap(&b); }
  inline void Swap(Gems* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Gems* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Gems* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Gems>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Gems& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Gems& from) { Gems::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Gems* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Gems"; }

 protected:
  explicit Gems(::google::protobuf::Arena* arena);
  Gems(::google::protobuf::Arena* arena, const Gems& from);
  Gems(::google::protobuf::Arena* arena, Gems&& from) noexcept
      : Gems(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .GemItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::GemItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::GemItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::GemItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::GemItem>* _internal_mutable_items();
  public:
  const ::GemItem& items(int index) const;
  ::GemItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::GemItem>& items() const;
  // @@protoc_insertion_point(class_scope:Gems)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Gems& from_msg);
    ::google::protobuf::RepeatedPtrField< ::GemItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class Friends final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Friends) */ {
 public:
  inline Friends() : Friends(nullptr) {}
  ~Friends() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Friends* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Friends));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Friends(
      ::google::protobuf::internal::ConstantInitialized);

  inline Friends(const Friends& from) : Friends(nullptr, from) {}
  inline Friends(Friends&& from) noexcept
      : Friends(nullptr, std::move(from)) {}
  inline Friends& operator=(const Friends& from) {
    CopyFrom(from);
    return *this;
  }
  inline Friends& operator=(Friends&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Friends& default_instance() {
    return *internal_default_instance();
  }
  static inline const Friends* internal_default_instance() {
    return reinterpret_cast<const Friends*>(
        &_Friends_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(Friends& a, Friends& b) { a.Swap(&b); }
  inline void Swap(Friends* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Friends* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Friends* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Friends>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Friends& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Friends& from) { Friends::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Friends* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Friends"; }

 protected:
  explicit Friends(::google::protobuf::Arena* arena);
  Friends(::google::protobuf::Arena* arena, const Friends& from);
  Friends(::google::protobuf::Arena* arena, Friends&& from) noexcept
      : Friends(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .FriendItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::FriendItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::FriendItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::FriendItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::FriendItem>* _internal_mutable_items();
  public:
  const ::FriendItem& items(int index) const;
  ::FriendItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::FriendItem>& items() const;
  // @@protoc_insertion_point(class_scope:Friends)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Friends& from_msg);
    ::google::protobuf::RepeatedPtrField< ::FriendItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class Equipments final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Equipments) */ {
 public:
  inline Equipments() : Equipments(nullptr) {}
  ~Equipments() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Equipments* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Equipments));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Equipments(
      ::google::protobuf::internal::ConstantInitialized);

  inline Equipments(const Equipments& from) : Equipments(nullptr, from) {}
  inline Equipments(Equipments&& from) noexcept
      : Equipments(nullptr, std::move(from)) {}
  inline Equipments& operator=(const Equipments& from) {
    CopyFrom(from);
    return *this;
  }
  inline Equipments& operator=(Equipments&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Equipments& default_instance() {
    return *internal_default_instance();
  }
  static inline const Equipments* internal_default_instance() {
    return reinterpret_cast<const Equipments*>(
        &_Equipments_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(Equipments& a, Equipments& b) { a.Swap(&b); }
  inline void Swap(Equipments* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Equipments* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Equipments* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Equipments>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Equipments& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Equipments& from) { Equipments::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Equipments* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Equipments"; }

 protected:
  explicit Equipments(::google::protobuf::Arena* arena);
  Equipments(::google::protobuf::Arena* arena, const Equipments& from);
  Equipments(::google::protobuf::Arena* arena, Equipments&& from) noexcept
      : Equipments(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .EquipItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::EquipItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::EquipItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::EquipItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::EquipItem>* _internal_mutable_items();
  public:
  const ::EquipItem& items(int index) const;
  ::EquipItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::EquipItem>& items() const;
  // @@protoc_insertion_point(class_scope:Equipments)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Equipments& from_msg);
    ::google::protobuf::RepeatedPtrField< ::EquipItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class Counters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Counters) */ {
 public:
  inline Counters() : Counters(nullptr) {}
  ~Counters() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Counters* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Counters));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Counters(
      ::google::protobuf::internal::ConstantInitialized);

  inline Counters(const Counters& from) : Counters(nullptr, from) {}
  inline Counters(Counters&& from) noexcept
      : Counters(nullptr, std::move(from)) {}
  inline Counters& operator=(const Counters& from) {
    CopyFrom(from);
    return *this;
  }
  inline Counters& operator=(Counters&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Counters& default_instance() {
    return *internal_default_instance();
  }
  static inline const Counters* internal_default_instance() {
    return reinterpret_cast<const Counters*>(
        &_Counters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(Counters& a, Counters& b) { a.Swap(&b); }
  inline void Swap(Counters* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Counters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Counters* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Counters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Counters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Counters& from) { Counters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Counters* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Counters"; }

 protected:
  explicit Counters(::google::protobuf::Arena* arena);
  Counters(::google::protobuf::Arena* arena, const Counters& from);
  Counters(::google::protobuf::Arena* arena, Counters&& from) noexcept
      : Counters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .CounterItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::CounterItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::CounterItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::CounterItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::CounterItem>* _internal_mutable_items();
  public:
  const ::CounterItem& items(int index) const;
  ::CounterItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::CounterItem>& items() const;
  // @@protoc_insertion_point(class_scope:Counters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Counters& from_msg);
    ::google::protobuf::RepeatedPtrField< ::CounterItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class Copies final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Copies) */ {
 public:
  inline Copies() : Copies(nullptr) {}
  ~Copies() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Copies* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Copies));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Copies(
      ::google::protobuf::internal::ConstantInitialized);

  inline Copies(const Copies& from) : Copies(nullptr, from) {}
  inline Copies(Copies&& from) noexcept
      : Copies(nullptr, std::move(from)) {}
  inline Copies& operator=(const Copies& from) {
    CopyFrom(from);
    return *this;
  }
  inline Copies& operator=(Copies&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Copies& default_instance() {
    return *internal_default_instance();
  }
  static inline const Copies* internal_default_instance() {
    return reinterpret_cast<const Copies*>(
        &_Copies_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Copies& a, Copies& b) { a.Swap(&b); }
  inline void Swap(Copies* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Copies* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Copies* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Copies>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Copies& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Copies& from) { Copies::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Copies* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Copies"; }

 protected:
  explicit Copies(::google::protobuf::Arena* arena);
  Copies(::google::protobuf::Arena* arena, const Copies& from);
  Copies(::google::protobuf::Arena* arena, Copies&& from) noexcept
      : Copies(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCopiesFieldNumber = 1,
    kChaptersFieldNumber = 2,
  };
  // repeated .CopyItem copies = 1;
  int copies_size() const;
  private:
  int _internal_copies_size() const;

  public:
  void clear_copies() ;
  ::CopyItem* mutable_copies(int index);
  ::google::protobuf::RepeatedPtrField<::CopyItem>* mutable_copies();

  private:
  const ::google::protobuf::RepeatedPtrField<::CopyItem>& _internal_copies() const;
  ::google::protobuf::RepeatedPtrField<::CopyItem>* _internal_mutable_copies();
  public:
  const ::CopyItem& copies(int index) const;
  ::CopyItem* add_copies();
  const ::google::protobuf::RepeatedPtrField<::CopyItem>& copies() const;
  // repeated .ChapterItem chapters = 2;
  int chapters_size() const;
  private:
  int _internal_chapters_size() const;

  public:
  void clear_chapters() ;
  ::ChapterItem* mutable_chapters(int index);
  ::google::protobuf::RepeatedPtrField<::ChapterItem>* mutable_chapters();

  private:
  const ::google::protobuf::RepeatedPtrField<::ChapterItem>& _internal_chapters() const;
  ::google::protobuf::RepeatedPtrField<::ChapterItem>* _internal_mutable_chapters();
  public:
  const ::ChapterItem& chapters(int index) const;
  ::ChapterItem* add_chapters();
  const ::google::protobuf::RepeatedPtrField<::ChapterItem>& chapters() const;
  // @@protoc_insertion_point(class_scope:Copies)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Copies& from_msg);
    ::google::protobuf::RepeatedPtrField< ::CopyItem > copies_;
    ::google::protobuf::RepeatedPtrField< ::ChapterItem > chapters_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class BagItems final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BagItems) */ {
 public:
  inline BagItems() : BagItems(nullptr) {}
  ~BagItems() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BagItems* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BagItems));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BagItems(
      ::google::protobuf::internal::ConstantInitialized);

  inline BagItems(const BagItems& from) : BagItems(nullptr, from) {}
  inline BagItems(BagItems&& from) noexcept
      : BagItems(nullptr, std::move(from)) {}
  inline BagItems& operator=(const BagItems& from) {
    CopyFrom(from);
    return *this;
  }
  inline BagItems& operator=(BagItems&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BagItems& default_instance() {
    return *internal_default_instance();
  }
  static inline const BagItems* internal_default_instance() {
    return reinterpret_cast<const BagItems*>(
        &_BagItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(BagItems& a, BagItems& b) { a.Swap(&b); }
  inline void Swap(BagItems* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BagItems* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BagItems* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BagItems>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BagItems& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BagItems& from) { BagItems::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BagItems* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BagItems"; }

 protected:
  explicit BagItems(::google::protobuf::Arena* arena);
  BagItems(::google::protobuf::Arena* arena, const BagItems& from);
  BagItems(::google::protobuf::Arena* arena, BagItems&& from) noexcept
      : BagItems(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .BagItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::BagItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::BagItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::BagItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::BagItem>* _internal_mutable_items();
  public:
  const ::BagItem& items(int index) const;
  ::BagItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::BagItem>& items() const;
  // @@protoc_insertion_point(class_scope:BagItems)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BagItems& from_msg);
    ::google::protobuf::RepeatedPtrField< ::BagItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class Activities final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Activities) */ {
 public:
  inline Activities() : Activities(nullptr) {}
  ~Activities() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Activities* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Activities));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Activities(
      ::google::protobuf::internal::ConstantInitialized);

  inline Activities(const Activities& from) : Activities(nullptr, from) {}
  inline Activities(Activities&& from) noexcept
      : Activities(nullptr, std::move(from)) {}
  inline Activities& operator=(const Activities& from) {
    CopyFrom(from);
    return *this;
  }
  inline Activities& operator=(Activities&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Activities& default_instance() {
    return *internal_default_instance();
  }
  static inline const Activities* internal_default_instance() {
    return reinterpret_cast<const Activities*>(
        &_Activities_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(Activities& a, Activities& b) { a.Swap(&b); }
  inline void Swap(Activities* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Activities* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Activities* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Activities>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Activities& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Activities& from) { Activities::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Activities* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Activities"; }

 protected:
  explicit Activities(::google::protobuf::Arena* arena);
  Activities(::google::protobuf::Arena* arena, const Activities& from);
  Activities(::google::protobuf::Arena* arena, Activities&& from) noexcept
      : Activities(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .ActivityItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::ActivityItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::ActivityItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::ActivityItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::ActivityItem>* _internal_mutable_items();
  public:
  const ::ActivityItem& items(int index) const;
  ::ActivityItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::ActivityItem>& items() const;
  // @@protoc_insertion_point(class_scope:Activities)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Activities& from_msg);
    ::google::protobuf::RepeatedPtrField< ::ActivityItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class RoleLoginAck final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RoleLoginAck) */ {
 public:
  inline RoleLoginAck() : RoleLoginAck(nullptr) {}
  ~RoleLoginAck() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RoleLoginAck* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RoleLoginAck));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RoleLoginAck(
      ::google::protobuf::internal::ConstantInitialized);

  inline RoleLoginAck(const RoleLoginAck& from) : RoleLoginAck(nullptr, from) {}
  inline RoleLoginAck(RoleLoginAck&& from) noexcept
      : RoleLoginAck(nullptr, std::move(from)) {}
  inline RoleLoginAck& operator=(const RoleLoginAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoleLoginAck& operator=(RoleLoginAck&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RoleLoginAck& default_instance() {
    return *internal_default_instance();
  }
  static inline const RoleLoginAck* internal_default_instance() {
    return reinterpret_cast<const RoleLoginAck*>(
        &_RoleLoginAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(RoleLoginAck& a, RoleLoginAck& b) { a.Swap(&b); }
  inline void Swap(RoleLoginAck* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoleLoginAck* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RoleLoginAck* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RoleLoginAck>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RoleLoginAck& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RoleLoginAck& from) { RoleLoginAck::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RoleLoginAck* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "RoleLoginAck"; }

 protected:
  explicit RoleLoginAck(::google::protobuf::Arena* arena);
  RoleLoginAck(::google::protobuf::Arena* arena, const RoleLoginAck& from);
  RoleLoginAck(::google::protobuf::Arena* arena, RoleLoginAck&& from) noexcept
      : RoleLoginAck(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleDataFieldNumber = 3,
    kBagItemsFieldNumber = 4,
    kCopiesFieldNumber = 5,
    kEquipmentsFieldNumber = 6,
    kGemsFieldNumber = 7,
    kPetsFieldNumber = 8,
    kPartnersFieldNumber = 9,
    kTasksFieldNumber = 10,
    kMailsFieldNumber = 11,
    kMountsFieldNumber = 12,
    kActivitiesFieldNumber = 13,
    kCountersFieldNumber = 14,
    kFriendsFieldNumber = 15,
    kSkillsFieldNumber = 16,
    kRoleIdFieldNumber = 2,
    kRetCodeFieldNumber = 1,
  };
  // .RoleData role_data = 3;
  bool has_role_data() const;
  void clear_role_data() ;
  const ::RoleData& role_data() const;
  PROTOBUF_NODISCARD ::RoleData* release_role_data();
  ::RoleData* mutable_role_data();
  void set_allocated_role_data(::RoleData* value);
  void unsafe_arena_set_allocated_role_data(::RoleData* value);
  ::RoleData* unsafe_arena_release_role_data();

  private:
  const ::RoleData& _internal_role_data() const;
  ::RoleData* _internal_mutable_role_data();

  public:
  // .BagItems bag_items = 4;
  bool has_bag_items() const;
  void clear_bag_items() ;
  const ::BagItems& bag_items() const;
  PROTOBUF_NODISCARD ::BagItems* release_bag_items();
  ::BagItems* mutable_bag_items();
  void set_allocated_bag_items(::BagItems* value);
  void unsafe_arena_set_allocated_bag_items(::BagItems* value);
  ::BagItems* unsafe_arena_release_bag_items();

  private:
  const ::BagItems& _internal_bag_items() const;
  ::BagItems* _internal_mutable_bag_items();

  public:
  // .Copies copies = 5;
  bool has_copies() const;
  void clear_copies() ;
  const ::Copies& copies() const;
  PROTOBUF_NODISCARD ::Copies* release_copies();
  ::Copies* mutable_copies();
  void set_allocated_copies(::Copies* value);
  void unsafe_arena_set_allocated_copies(::Copies* value);
  ::Copies* unsafe_arena_release_copies();

  private:
  const ::Copies& _internal_copies() const;
  ::Copies* _internal_mutable_copies();

  public:
  // .Equipments equipments = 6;
  bool has_equipments() const;
  void clear_equipments() ;
  const ::Equipments& equipments() const;
  PROTOBUF_NODISCARD ::Equipments* release_equipments();
  ::Equipments* mutable_equipments();
  void set_allocated_equipments(::Equipments* value);
  void unsafe_arena_set_allocated_equipments(::Equipments* value);
  ::Equipments* unsafe_arena_release_equipments();

  private:
  const ::Equipments& _internal_equipments() const;
  ::Equipments* _internal_mutable_equipments();

  public:
  // .Gems gems = 7;
  bool has_gems() const;
  void clear_gems() ;
  const ::Gems& gems() const;
  PROTOBUF_NODISCARD ::Gems* release_gems();
  ::Gems* mutable_gems();
  void set_allocated_gems(::Gems* value);
  void unsafe_arena_set_allocated_gems(::Gems* value);
  ::Gems* unsafe_arena_release_gems();

  private:
  const ::Gems& _internal_gems() const;
  ::Gems* _internal_mutable_gems();

  public:
  // .Pets pets = 8;
  bool has_pets() const;
  void clear_pets() ;
  const ::Pets& pets() const;
  PROTOBUF_NODISCARD ::Pets* release_pets();
  ::Pets* mutable_pets();
  void set_allocated_pets(::Pets* value);
  void unsafe_arena_set_allocated_pets(::Pets* value);
  ::Pets* unsafe_arena_release_pets();

  private:
  const ::Pets& _internal_pets() const;
  ::Pets* _internal_mutable_pets();

  public:
  // .Partners partners = 9;
  bool has_partners() const;
  void clear_partners() ;
  const ::Partners& partners() const;
  PROTOBUF_NODISCARD ::Partners* release_partners();
  ::Partners* mutable_partners();
  void set_allocated_partners(::Partners* value);
  void unsafe_arena_set_allocated_partners(::Partners* value);
  ::Partners* unsafe_arena_release_partners();

  private:
  const ::Partners& _internal_partners() const;
  ::Partners* _internal_mutable_partners();

  public:
  // .Tasks tasks = 10;
  bool has_tasks() const;
  void clear_tasks() ;
  const ::Tasks& tasks() const;
  PROTOBUF_NODISCARD ::Tasks* release_tasks();
  ::Tasks* mutable_tasks();
  void set_allocated_tasks(::Tasks* value);
  void unsafe_arena_set_allocated_tasks(::Tasks* value);
  ::Tasks* unsafe_arena_release_tasks();

  private:
  const ::Tasks& _internal_tasks() const;
  ::Tasks* _internal_mutable_tasks();

  public:
  // .Mails mails = 11;
  bool has_mails() const;
  void clear_mails() ;
  const ::Mails& mails() const;
  PROTOBUF_NODISCARD ::Mails* release_mails();
  ::Mails* mutable_mails();
  void set_allocated_mails(::Mails* value);
  void unsafe_arena_set_allocated_mails(::Mails* value);
  ::Mails* unsafe_arena_release_mails();

  private:
  const ::Mails& _internal_mails() const;
  ::Mails* _internal_mutable_mails();

  public:
  // .Mounts mounts = 12;
  bool has_mounts() const;
  void clear_mounts() ;
  const ::Mounts& mounts() const;
  PROTOBUF_NODISCARD ::Mounts* release_mounts();
  ::Mounts* mutable_mounts();
  void set_allocated_mounts(::Mounts* value);
  void unsafe_arena_set_allocated_mounts(::Mounts* value);
  ::Mounts* unsafe_arena_release_mounts();

  private:
  const ::Mounts& _internal_mounts() const;
  ::Mounts* _internal_mutable_mounts();

  public:
  // .Activities activities = 13;
  bool has_activities() const;
  void clear_activities() ;
  const ::Activities& activities() const;
  PROTOBUF_NODISCARD ::Activities* release_activities();
  ::Activities* mutable_activities();
  void set_allocated_activities(::Activities* value);
  void unsafe_arena_set_allocated_activities(::Activities* value);
  ::Activities* unsafe_arena_release_activities();

  private:
  const ::Activities& _internal_activities() const;
  ::Activities* _internal_mutable_activities();

  public:
  // .Counters counters = 14;
  bool has_counters() const;
  void clear_counters() ;
  const ::Counters& counters() const;
  PROTOBUF_NODISCARD ::Counters* release_counters();
  ::Counters* mutable_counters();
  void set_allocated_counters(::Counters* value);
  void unsafe_arena_set_allocated_counters(::Counters* value);
  ::Counters* unsafe_arena_release_counters();

  private:
  const ::Counters& _internal_counters() const;
  ::Counters* _internal_mutable_counters();

  public:
  // .Friends friends = 15;
  bool has_friends() const;
  void clear_friends() ;
  const ::Friends& friends() const;
  PROTOBUF_NODISCARD ::Friends* release_friends();
  ::Friends* mutable_friends();
  void set_allocated_friends(::Friends* value);
  void unsafe_arena_set_allocated_friends(::Friends* value);
  ::Friends* unsafe_arena_release_friends();

  private:
  const ::Friends& _internal_friends() const;
  ::Friends* _internal_mutable_friends();

  public:
  // .Skills skills = 16;
  bool has_skills() const;
  void clear_skills() ;
  const ::Skills& skills() const;
  PROTOBUF_NODISCARD ::Skills* release_skills();
  ::Skills* mutable_skills();
  void set_allocated_skills(::Skills* value);
  void unsafe_arena_set_allocated_skills(::Skills* value);
  ::Skills* unsafe_arena_release_skills();

  private:
  const ::Skills& _internal_skills() const;
  ::Skills* _internal_mutable_skills();

  public:
  // uint64 role_id = 2;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint32 ret_code = 1;
  void clear_ret_code() ;
  ::uint32_t ret_code() const;
  void set_ret_code(::uint32_t value);

  private:
  ::uint32_t _internal_ret_code() const;
  void _internal_set_ret_code(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:RoleLoginAck)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 16, 14,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RoleLoginAck& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::RoleData* role_data_;
    ::BagItems* bag_items_;
    ::Copies* copies_;
    ::Equipments* equipments_;
    ::Gems* gems_;
    ::Pets* pets_;
    ::Partners* partners_;
    ::Tasks* tasks_;
    ::Mails* mails_;
    ::Mounts* mounts_;
    ::Activities* activities_;
    ::Counters* counters_;
    ::Friends* friends_;
    ::Skills* skills_;
    ::uint64_t role_id_;
    ::uint32_t ret_code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// RoleData

// uint64 account_id = 1;
inline void RoleData::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_ = ::uint64_t{0u};
}
inline ::uint64_t RoleData::account_id() const {
  // @@protoc_insertion_point(field_get:RoleData.account_id)
  return _internal_account_id();
}
inline void RoleData::set_account_id(::uint64_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:RoleData.account_id)
}
inline ::uint64_t RoleData::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_;
}
inline void RoleData::_internal_set_account_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_ = value;
}

// uint64 role_id = 2;
inline void RoleData::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t RoleData::role_id() const {
  // @@protoc_insertion_point(field_get:RoleData.role_id)
  return _internal_role_id();
}
inline void RoleData::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:RoleData.role_id)
}
inline ::uint64_t RoleData::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void RoleData::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// int32 career_id = 3;
inline void RoleData::clear_career_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.career_id_ = 0;
}
inline ::int32_t RoleData::career_id() const {
  // @@protoc_insertion_point(field_get:RoleData.career_id)
  return _internal_career_id();
}
inline void RoleData::set_career_id(::int32_t value) {
  _internal_set_career_id(value);
  // @@protoc_insertion_point(field_set:RoleData.career_id)
}
inline ::int32_t RoleData::_internal_career_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.career_id_;
}
inline void RoleData::_internal_set_career_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.career_id_ = value;
}

// int32 level = 4;
inline void RoleData::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0;
}
inline ::int32_t RoleData::level() const {
  // @@protoc_insertion_point(field_get:RoleData.level)
  return _internal_level();
}
inline void RoleData::set_level(::int32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:RoleData.level)
}
inline ::int32_t RoleData::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void RoleData::_internal_set_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// int64 exp = 5;
inline void RoleData::clear_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exp_ = ::int64_t{0};
}
inline ::int64_t RoleData::exp() const {
  // @@protoc_insertion_point(field_get:RoleData.exp)
  return _internal_exp();
}
inline void RoleData::set_exp(::int64_t value) {
  _internal_set_exp(value);
  // @@protoc_insertion_point(field_set:RoleData.exp)
}
inline ::int64_t RoleData::_internal_exp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exp_;
}
inline void RoleData::_internal_set_exp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exp_ = value;
}

// string name = 6;
inline void RoleData::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& RoleData::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RoleData.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RoleData::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:RoleData.name)
}
inline std::string* RoleData::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:RoleData.name)
  return _s;
}
inline const std::string& RoleData::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void RoleData::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* RoleData::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* RoleData::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RoleData.name)
  return _impl_.name_.Release();
}
inline void RoleData::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:RoleData.name)
}

// int32 lang_id = 7;
inline void RoleData::clear_lang_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lang_id_ = 0;
}
inline ::int32_t RoleData::lang_id() const {
  // @@protoc_insertion_point(field_get:RoleData.lang_id)
  return _internal_lang_id();
}
inline void RoleData::set_lang_id(::int32_t value) {
  _internal_set_lang_id(value);
  // @@protoc_insertion_point(field_set:RoleData.lang_id)
}
inline ::int32_t RoleData::_internal_lang_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lang_id_;
}
inline void RoleData::_internal_set_lang_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lang_id_ = value;
}

// int32 vip_level = 8;
inline void RoleData::clear_vip_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vip_level_ = 0;
}
inline ::int32_t RoleData::vip_level() const {
  // @@protoc_insertion_point(field_get:RoleData.vip_level)
  return _internal_vip_level();
}
inline void RoleData::set_vip_level(::int32_t value) {
  _internal_set_vip_level(value);
  // @@protoc_insertion_point(field_set:RoleData.vip_level)
}
inline ::int32_t RoleData::_internal_vip_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vip_level_;
}
inline void RoleData::_internal_set_vip_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vip_level_ = value;
}

// int32 vip_exp = 9;
inline void RoleData::clear_vip_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vip_exp_ = 0;
}
inline ::int32_t RoleData::vip_exp() const {
  // @@protoc_insertion_point(field_get:RoleData.vip_exp)
  return _internal_vip_exp();
}
inline void RoleData::set_vip_exp(::int32_t value) {
  _internal_set_vip_exp(value);
  // @@protoc_insertion_point(field_set:RoleData.vip_exp)
}
inline ::int32_t RoleData::_internal_vip_exp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vip_exp_;
}
inline void RoleData::_internal_set_vip_exp(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vip_exp_ = value;
}

// int64 fight_value = 10;
inline void RoleData::clear_fight_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fight_value_ = ::int64_t{0};
}
inline ::int64_t RoleData::fight_value() const {
  // @@protoc_insertion_point(field_get:RoleData.fight_value)
  return _internal_fight_value();
}
inline void RoleData::set_fight_value(::int64_t value) {
  _internal_set_fight_value(value);
  // @@protoc_insertion_point(field_set:RoleData.fight_value)
}
inline ::int64_t RoleData::_internal_fight_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fight_value_;
}
inline void RoleData::_internal_set_fight_value(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fight_value_ = value;
}

// int32 city_copy_id = 11;
inline void RoleData::clear_city_copy_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_copy_id_ = 0;
}
inline ::int32_t RoleData::city_copy_id() const {
  // @@protoc_insertion_point(field_get:RoleData.city_copy_id)
  return _internal_city_copy_id();
}
inline void RoleData::set_city_copy_id(::int32_t value) {
  _internal_set_city_copy_id(value);
  // @@protoc_insertion_point(field_set:RoleData.city_copy_id)
}
inline ::int32_t RoleData::_internal_city_copy_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.city_copy_id_;
}
inline void RoleData::_internal_set_city_copy_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_copy_id_ = value;
}

// repeated int64 action = 12;
inline int RoleData::_internal_action_size() const {
  return _internal_action().size();
}
inline int RoleData::action_size() const {
  return _internal_action_size();
}
inline void RoleData::clear_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_.Clear();
}
inline ::int64_t RoleData::action(int index) const {
  // @@protoc_insertion_point(field_get:RoleData.action)
  return _internal_action().Get(index);
}
inline void RoleData::set_action(int index, ::int64_t value) {
  _internal_mutable_action()->Set(index, value);
  // @@protoc_insertion_point(field_set:RoleData.action)
}
inline void RoleData::add_action(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_action()->Add(value);
  // @@protoc_insertion_point(field_add:RoleData.action)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& RoleData::action() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:RoleData.action)
  return _internal_action();
}
inline ::google::protobuf::RepeatedField<::int64_t>* RoleData::mutable_action()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:RoleData.action)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_action();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
RoleData::_internal_action() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.action_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* RoleData::_internal_mutable_action() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.action_;
}

// repeated int64 action_time = 13;
inline int RoleData::_internal_action_time_size() const {
  return _internal_action_time().size();
}
inline int RoleData::action_time_size() const {
  return _internal_action_time_size();
}
inline void RoleData::clear_action_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_time_.Clear();
}
inline ::int64_t RoleData::action_time(int index) const {
  // @@protoc_insertion_point(field_get:RoleData.action_time)
  return _internal_action_time().Get(index);
}
inline void RoleData::set_action_time(int index, ::int64_t value) {
  _internal_mutable_action_time()->Set(index, value);
  // @@protoc_insertion_point(field_set:RoleData.action_time)
}
inline void RoleData::add_action_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_action_time()->Add(value);
  // @@protoc_insertion_point(field_add:RoleData.action_time)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& RoleData::action_time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:RoleData.action_time)
  return _internal_action_time();
}
inline ::google::protobuf::RepeatedField<::int64_t>* RoleData::mutable_action_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:RoleData.action_time)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_action_time();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
RoleData::_internal_action_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.action_time_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* RoleData::_internal_mutable_action_time() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.action_time_;
}

// uint64 create_time = 14;
inline void RoleData::clear_create_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.create_time_ = ::uint64_t{0u};
}
inline ::uint64_t RoleData::create_time() const {
  // @@protoc_insertion_point(field_get:RoleData.create_time)
  return _internal_create_time();
}
inline void RoleData::set_create_time(::uint64_t value) {
  _internal_set_create_time(value);
  // @@protoc_insertion_point(field_set:RoleData.create_time)
}
inline ::uint64_t RoleData::_internal_create_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.create_time_;
}
inline void RoleData::_internal_set_create_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.create_time_ = value;
}

// uint64 logon_time = 15;
inline void RoleData::clear_logon_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logon_time_ = ::uint64_t{0u};
}
inline ::uint64_t RoleData::logon_time() const {
  // @@protoc_insertion_point(field_get:RoleData.logon_time)
  return _internal_logon_time();
}
inline void RoleData::set_logon_time(::uint64_t value) {
  _internal_set_logon_time(value);
  // @@protoc_insertion_point(field_set:RoleData.logon_time)
}
inline ::uint64_t RoleData::_internal_logon_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.logon_time_;
}
inline void RoleData::_internal_set_logon_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logon_time_ = value;
}

// uint64 logoff_time = 16;
inline void RoleData::clear_logoff_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logoff_time_ = ::uint64_t{0u};
}
inline ::uint64_t RoleData::logoff_time() const {
  // @@protoc_insertion_point(field_get:RoleData.logoff_time)
  return _internal_logoff_time();
}
inline void RoleData::set_logoff_time(::uint64_t value) {
  _internal_set_logoff_time(value);
  // @@protoc_insertion_point(field_set:RoleData.logoff_time)
}
inline ::uint64_t RoleData::_internal_logoff_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.logoff_time_;
}
inline void RoleData::_internal_set_logoff_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logoff_time_ = value;
}

// uint64 guild_id = 17;
inline void RoleData::clear_guild_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guild_id_ = ::uint64_t{0u};
}
inline ::uint64_t RoleData::guild_id() const {
  // @@protoc_insertion_point(field_get:RoleData.guild_id)
  return _internal_guild_id();
}
inline void RoleData::set_guild_id(::uint64_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:RoleData.guild_id)
}
inline ::uint64_t RoleData::_internal_guild_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guild_id_;
}
inline void RoleData::_internal_set_guild_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guild_id_ = value;
}

// int32 channel = 18;
inline void RoleData::clear_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_ = 0;
}
inline ::int32_t RoleData::channel() const {
  // @@protoc_insertion_point(field_get:RoleData.channel)
  return _internal_channel();
}
inline void RoleData::set_channel(::int32_t value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:RoleData.channel)
}
inline ::int32_t RoleData::_internal_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_;
}
inline void RoleData::_internal_set_channel(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_ = value;
}

// uint32 online_time = 19;
inline void RoleData::clear_online_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.online_time_ = 0u;
}
inline ::uint32_t RoleData::online_time() const {
  // @@protoc_insertion_point(field_get:RoleData.online_time)
  return _internal_online_time();
}
inline void RoleData::set_online_time(::uint32_t value) {
  _internal_set_online_time(value);
  // @@protoc_insertion_point(field_set:RoleData.online_time)
}
inline ::uint32_t RoleData::_internal_online_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.online_time_;
}
inline void RoleData::_internal_set_online_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.online_time_ = value;
}

// -------------------------------------------------------------------

// BagItem

// uint64 guid = 1;
inline void BagItem::clear_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = ::uint64_t{0u};
}
inline ::uint64_t BagItem::guid() const {
  // @@protoc_insertion_point(field_get:BagItem.guid)
  return _internal_guid();
}
inline void BagItem::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:BagItem.guid)
}
inline ::uint64_t BagItem::_internal_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guid_;
}
inline void BagItem::_internal_set_guid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = value;
}

// uint64 role_id = 2;
inline void BagItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t BagItem::role_id() const {
  // @@protoc_insertion_point(field_get:BagItem.role_id)
  return _internal_role_id();
}
inline void BagItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:BagItem.role_id)
}
inline ::uint64_t BagItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void BagItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint64 item_guid = 3;
inline void BagItem::clear_item_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_guid_ = ::uint64_t{0u};
}
inline ::uint64_t BagItem::item_guid() const {
  // @@protoc_insertion_point(field_get:BagItem.item_guid)
  return _internal_item_guid();
}
inline void BagItem::set_item_guid(::uint64_t value) {
  _internal_set_item_guid(value);
  // @@protoc_insertion_point(field_set:BagItem.item_guid)
}
inline ::uint64_t BagItem::_internal_item_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.item_guid_;
}
inline void BagItem::_internal_set_item_guid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_guid_ = value;
}

// uint32 item_id = 4;
inline void BagItem::clear_item_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_id_ = 0u;
}
inline ::uint32_t BagItem::item_id() const {
  // @@protoc_insertion_point(field_get:BagItem.item_id)
  return _internal_item_id();
}
inline void BagItem::set_item_id(::uint32_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:BagItem.item_id)
}
inline ::uint32_t BagItem::_internal_item_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.item_id_;
}
inline void BagItem::_internal_set_item_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_id_ = value;
}

// int64 count = 5;
inline void BagItem::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = ::int64_t{0};
}
inline ::int64_t BagItem::count() const {
  // @@protoc_insertion_point(field_get:BagItem.count)
  return _internal_count();
}
inline void BagItem::set_count(::int64_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:BagItem.count)
}
inline ::int64_t BagItem::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void BagItem::_internal_set_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// .BindType bind = 6;
inline void BagItem::clear_bind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bind_ = 0;
}
inline ::BindType BagItem::bind() const {
  // @@protoc_insertion_point(field_get:BagItem.bind)
  return _internal_bind();
}
inline void BagItem::set_bind(::BindType value) {
  _internal_set_bind(value);
  // @@protoc_insertion_point(field_set:BagItem.bind)
}
inline ::BindType BagItem::_internal_bind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::BindType>(_impl_.bind_);
}
inline void BagItem::_internal_set_bind(::BindType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bind_ = value;
}

// .ItemStatus status = 7;
inline void BagItem::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::ItemStatus BagItem::status() const {
  // @@protoc_insertion_point(field_get:BagItem.status)
  return _internal_status();
}
inline void BagItem::set_status(::ItemStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:BagItem.status)
}
inline ::ItemStatus BagItem::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ItemStatus>(_impl_.status_);
}
inline void BagItem::_internal_set_status(::ItemStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// BagItems

// repeated .BagItem items = 1;
inline int BagItems::_internal_items_size() const {
  return _internal_items().size();
}
inline int BagItems::items_size() const {
  return _internal_items_size();
}
inline void BagItems::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::BagItem* BagItems::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BagItems.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BagItem>* BagItems::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BagItems.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::BagItem& BagItems::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BagItems.items)
  return _internal_items().Get(index);
}
inline ::BagItem* BagItems::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BagItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:BagItems.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BagItem>& BagItems::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BagItems.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::BagItem>&
BagItems::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::BagItem>*
BagItems::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// CopyItem

// uint64 role_id = 1;
inline void CopyItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t CopyItem::role_id() const {
  // @@protoc_insertion_point(field_get:CopyItem.role_id)
  return _internal_role_id();
}
inline void CopyItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:CopyItem.role_id)
}
inline ::uint64_t CopyItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void CopyItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint32 copy_id = 2;
inline void CopyItem::clear_copy_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.copy_id_ = 0u;
}
inline ::uint32_t CopyItem::copy_id() const {
  // @@protoc_insertion_point(field_get:CopyItem.copy_id)
  return _internal_copy_id();
}
inline void CopyItem::set_copy_id(::uint32_t value) {
  _internal_set_copy_id(value);
  // @@protoc_insertion_point(field_set:CopyItem.copy_id)
}
inline ::uint32_t CopyItem::_internal_copy_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.copy_id_;
}
inline void CopyItem::_internal_set_copy_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.copy_id_ = value;
}

// int32 star_num = 3;
inline void CopyItem::clear_star_num() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_num_ = 0;
}
inline ::int32_t CopyItem::star_num() const {
  // @@protoc_insertion_point(field_get:CopyItem.star_num)
  return _internal_star_num();
}
inline void CopyItem::set_star_num(::int32_t value) {
  _internal_set_star_num(value);
  // @@protoc_insertion_point(field_set:CopyItem.star_num)
}
inline ::int32_t CopyItem::_internal_star_num() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_num_;
}
inline void CopyItem::_internal_set_star_num(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_num_ = value;
}

// int32 battle_cnt = 4;
inline void CopyItem::clear_battle_cnt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.battle_cnt_ = 0;
}
inline ::int32_t CopyItem::battle_cnt() const {
  // @@protoc_insertion_point(field_get:CopyItem.battle_cnt)
  return _internal_battle_cnt();
}
inline void CopyItem::set_battle_cnt(::int32_t value) {
  _internal_set_battle_cnt(value);
  // @@protoc_insertion_point(field_set:CopyItem.battle_cnt)
}
inline ::int32_t CopyItem::_internal_battle_cnt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.battle_cnt_;
}
inline void CopyItem::_internal_set_battle_cnt(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.battle_cnt_ = value;
}

// int32 reset_cnt = 5;
inline void CopyItem::clear_reset_cnt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reset_cnt_ = 0;
}
inline ::int32_t CopyItem::reset_cnt() const {
  // @@protoc_insertion_point(field_get:CopyItem.reset_cnt)
  return _internal_reset_cnt();
}
inline void CopyItem::set_reset_cnt(::int32_t value) {
  _internal_set_reset_cnt(value);
  // @@protoc_insertion_point(field_set:CopyItem.reset_cnt)
}
inline ::int32_t CopyItem::_internal_reset_cnt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reset_cnt_;
}
inline void CopyItem::_internal_set_reset_cnt(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reset_cnt_ = value;
}

// uint64 battle_time = 6;
inline void CopyItem::clear_battle_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.battle_time_ = ::uint64_t{0u};
}
inline ::uint64_t CopyItem::battle_time() const {
  // @@protoc_insertion_point(field_get:CopyItem.battle_time)
  return _internal_battle_time();
}
inline void CopyItem::set_battle_time(::uint64_t value) {
  _internal_set_battle_time(value);
  // @@protoc_insertion_point(field_set:CopyItem.battle_time)
}
inline ::uint64_t CopyItem::_internal_battle_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.battle_time_;
}
inline void CopyItem::_internal_set_battle_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.battle_time_ = value;
}

// uint64 reset_time = 7;
inline void CopyItem::clear_reset_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reset_time_ = ::uint64_t{0u};
}
inline ::uint64_t CopyItem::reset_time() const {
  // @@protoc_insertion_point(field_get:CopyItem.reset_time)
  return _internal_reset_time();
}
inline void CopyItem::set_reset_time(::uint64_t value) {
  _internal_set_reset_time(value);
  // @@protoc_insertion_point(field_set:CopyItem.reset_time)
}
inline ::uint64_t CopyItem::_internal_reset_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reset_time_;
}
inline void CopyItem::_internal_set_reset_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reset_time_ = value;
}

// -------------------------------------------------------------------

// ChapterItem

// uint64 role_id = 1;
inline void ChapterItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t ChapterItem::role_id() const {
  // @@protoc_insertion_point(field_get:ChapterItem.role_id)
  return _internal_role_id();
}
inline void ChapterItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:ChapterItem.role_id)
}
inline ::uint64_t ChapterItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void ChapterItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint32 copy_type = 2;
inline void ChapterItem::clear_copy_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.copy_type_ = 0u;
}
inline ::uint32_t ChapterItem::copy_type() const {
  // @@protoc_insertion_point(field_get:ChapterItem.copy_type)
  return _internal_copy_type();
}
inline void ChapterItem::set_copy_type(::uint32_t value) {
  _internal_set_copy_type(value);
  // @@protoc_insertion_point(field_set:ChapterItem.copy_type)
}
inline ::uint32_t ChapterItem::_internal_copy_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.copy_type_;
}
inline void ChapterItem::_internal_set_copy_type(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.copy_type_ = value;
}

// uint32 chapter_id = 3;
inline void ChapterItem::clear_chapter_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chapter_id_ = 0u;
}
inline ::uint32_t ChapterItem::chapter_id() const {
  // @@protoc_insertion_point(field_get:ChapterItem.chapter_id)
  return _internal_chapter_id();
}
inline void ChapterItem::set_chapter_id(::uint32_t value) {
  _internal_set_chapter_id(value);
  // @@protoc_insertion_point(field_set:ChapterItem.chapter_id)
}
inline ::uint32_t ChapterItem::_internal_chapter_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chapter_id_;
}
inline void ChapterItem::_internal_set_chapter_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chapter_id_ = value;
}

// uint32 star_award = 4;
inline void ChapterItem::clear_star_award() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_award_ = 0u;
}
inline ::uint32_t ChapterItem::star_award() const {
  // @@protoc_insertion_point(field_get:ChapterItem.star_award)
  return _internal_star_award();
}
inline void ChapterItem::set_star_award(::uint32_t value) {
  _internal_set_star_award(value);
  // @@protoc_insertion_point(field_set:ChapterItem.star_award)
}
inline ::uint32_t ChapterItem::_internal_star_award() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_award_;
}
inline void ChapterItem::_internal_set_star_award(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_award_ = value;
}

// uint32 scene_award = 5;
inline void ChapterItem::clear_scene_award() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_award_ = 0u;
}
inline ::uint32_t ChapterItem::scene_award() const {
  // @@protoc_insertion_point(field_get:ChapterItem.scene_award)
  return _internal_scene_award();
}
inline void ChapterItem::set_scene_award(::uint32_t value) {
  _internal_set_scene_award(value);
  // @@protoc_insertion_point(field_set:ChapterItem.scene_award)
}
inline ::uint32_t ChapterItem::_internal_scene_award() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_award_;
}
inline void ChapterItem::_internal_set_scene_award(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_award_ = value;
}

// -------------------------------------------------------------------

// Copies

// repeated .CopyItem copies = 1;
inline int Copies::_internal_copies_size() const {
  return _internal_copies().size();
}
inline int Copies::copies_size() const {
  return _internal_copies_size();
}
inline void Copies::clear_copies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.copies_.Clear();
}
inline ::CopyItem* Copies::mutable_copies(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Copies.copies)
  return _internal_mutable_copies()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CopyItem>* Copies::mutable_copies()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Copies.copies)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_copies();
}
inline const ::CopyItem& Copies::copies(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Copies.copies)
  return _internal_copies().Get(index);
}
inline ::CopyItem* Copies::add_copies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CopyItem* _add = _internal_mutable_copies()->Add();
  // @@protoc_insertion_point(field_add:Copies.copies)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CopyItem>& Copies::copies() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Copies.copies)
  return _internal_copies();
}
inline const ::google::protobuf::RepeatedPtrField<::CopyItem>&
Copies::_internal_copies() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.copies_;
}
inline ::google::protobuf::RepeatedPtrField<::CopyItem>*
Copies::_internal_mutable_copies() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.copies_;
}

// repeated .ChapterItem chapters = 2;
inline int Copies::_internal_chapters_size() const {
  return _internal_chapters().size();
}
inline int Copies::chapters_size() const {
  return _internal_chapters_size();
}
inline void Copies::clear_chapters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chapters_.Clear();
}
inline ::ChapterItem* Copies::mutable_chapters(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Copies.chapters)
  return _internal_mutable_chapters()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ChapterItem>* Copies::mutable_chapters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Copies.chapters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_chapters();
}
inline const ::ChapterItem& Copies::chapters(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Copies.chapters)
  return _internal_chapters().Get(index);
}
inline ::ChapterItem* Copies::add_chapters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::ChapterItem* _add = _internal_mutable_chapters()->Add();
  // @@protoc_insertion_point(field_add:Copies.chapters)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ChapterItem>& Copies::chapters() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Copies.chapters)
  return _internal_chapters();
}
inline const ::google::protobuf::RepeatedPtrField<::ChapterItem>&
Copies::_internal_chapters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chapters_;
}
inline ::google::protobuf::RepeatedPtrField<::ChapterItem>*
Copies::_internal_mutable_chapters() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.chapters_;
}

// -------------------------------------------------------------------

// EquipItem

// uint64 role_id = 1;
inline void EquipItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t EquipItem::role_id() const {
  // @@protoc_insertion_point(field_get:EquipItem.role_id)
  return _internal_role_id();
}
inline void EquipItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:EquipItem.role_id)
}
inline ::uint64_t EquipItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void EquipItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint64 guid = 2;
inline void EquipItem::clear_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = ::uint64_t{0u};
}
inline ::uint64_t EquipItem::guid() const {
  // @@protoc_insertion_point(field_get:EquipItem.guid)
  return _internal_guid();
}
inline void EquipItem::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:EquipItem.guid)
}
inline ::uint64_t EquipItem::_internal_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guid_;
}
inline void EquipItem::_internal_set_guid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = value;
}

// int32 equip_id = 3;
inline void EquipItem::clear_equip_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equip_id_ = 0;
}
inline ::int32_t EquipItem::equip_id() const {
  // @@protoc_insertion_point(field_get:EquipItem.equip_id)
  return _internal_equip_id();
}
inline void EquipItem::set_equip_id(::int32_t value) {
  _internal_set_equip_id(value);
  // @@protoc_insertion_point(field_set:EquipItem.equip_id)
}
inline ::int32_t EquipItem::_internal_equip_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.equip_id_;
}
inline void EquipItem::_internal_set_equip_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equip_id_ = value;
}

// int32 strength_lvl = 4;
inline void EquipItem::clear_strength_lvl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = 0;
}
inline ::int32_t EquipItem::strength_lvl() const {
  // @@protoc_insertion_point(field_get:EquipItem.strength_lvl)
  return _internal_strength_lvl();
}
inline void EquipItem::set_strength_lvl(::int32_t value) {
  _internal_set_strength_lvl(value);
  // @@protoc_insertion_point(field_set:EquipItem.strength_lvl)
}
inline ::int32_t EquipItem::_internal_strength_lvl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.strength_lvl_;
}
inline void EquipItem::_internal_set_strength_lvl(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = value;
}

// int32 refine_level = 5;
inline void EquipItem::clear_refine_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = 0;
}
inline ::int32_t EquipItem::refine_level() const {
  // @@protoc_insertion_point(field_get:EquipItem.refine_level)
  return _internal_refine_level();
}
inline void EquipItem::set_refine_level(::int32_t value) {
  _internal_set_refine_level(value);
  // @@protoc_insertion_point(field_set:EquipItem.refine_level)
}
inline ::int32_t EquipItem::_internal_refine_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refine_level_;
}
inline void EquipItem::_internal_set_refine_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = value;
}

// int32 star_level = 6;
inline void EquipItem::clear_star_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = 0;
}
inline ::int32_t EquipItem::star_level() const {
  // @@protoc_insertion_point(field_get:EquipItem.star_level)
  return _internal_star_level();
}
inline void EquipItem::set_star_level(::int32_t value) {
  _internal_set_star_level(value);
  // @@protoc_insertion_point(field_set:EquipItem.star_level)
}
inline ::int32_t EquipItem::_internal_star_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_level_;
}
inline void EquipItem::_internal_set_star_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = value;
}

// int32 refine_exp = 7;
inline void EquipItem::clear_refine_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_exp_ = 0;
}
inline ::int32_t EquipItem::refine_exp() const {
  // @@protoc_insertion_point(field_get:EquipItem.refine_exp)
  return _internal_refine_exp();
}
inline void EquipItem::set_refine_exp(::int32_t value) {
  _internal_set_refine_exp(value);
  // @@protoc_insertion_point(field_set:EquipItem.refine_exp)
}
inline ::int32_t EquipItem::_internal_refine_exp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refine_exp_;
}
inline void EquipItem::_internal_set_refine_exp(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_exp_ = value;
}

// int32 star_exp = 8;
inline void EquipItem::clear_star_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_exp_ = 0;
}
inline ::int32_t EquipItem::star_exp() const {
  // @@protoc_insertion_point(field_get:EquipItem.star_exp)
  return _internal_star_exp();
}
inline void EquipItem::set_star_exp(::int32_t value) {
  _internal_set_star_exp(value);
  // @@protoc_insertion_point(field_set:EquipItem.star_exp)
}
inline ::int32_t EquipItem::_internal_star_exp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_exp_;
}
inline void EquipItem::_internal_set_star_exp(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_exp_ = value;
}

// bool is_using = 9;
inline void EquipItem::clear_is_using() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_using_ = false;
}
inline bool EquipItem::is_using() const {
  // @@protoc_insertion_point(field_get:EquipItem.is_using)
  return _internal_is_using();
}
inline void EquipItem::set_is_using(bool value) {
  _internal_set_is_using(value);
  // @@protoc_insertion_point(field_set:EquipItem.is_using)
}
inline bool EquipItem::_internal_is_using() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_using_;
}
inline void EquipItem::_internal_set_is_using(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_using_ = value;
}

// -------------------------------------------------------------------

// Equipments

// repeated .EquipItem items = 1;
inline int Equipments::_internal_items_size() const {
  return _internal_items().size();
}
inline int Equipments::items_size() const {
  return _internal_items_size();
}
inline void Equipments::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::EquipItem* Equipments::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Equipments.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::EquipItem>* Equipments::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Equipments.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::EquipItem& Equipments::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Equipments.items)
  return _internal_items().Get(index);
}
inline ::EquipItem* Equipments::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::EquipItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:Equipments.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::EquipItem>& Equipments::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Equipments.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::EquipItem>&
Equipments::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::EquipItem>*
Equipments::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// GemItem

// uint64 role_id = 1;
inline void GemItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t GemItem::role_id() const {
  // @@protoc_insertion_point(field_get:GemItem.role_id)
  return _internal_role_id();
}
inline void GemItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:GemItem.role_id)
}
inline ::uint64_t GemItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void GemItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint64 guid = 2;
inline void GemItem::clear_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = ::uint64_t{0u};
}
inline ::uint64_t GemItem::guid() const {
  // @@protoc_insertion_point(field_get:GemItem.guid)
  return _internal_guid();
}
inline void GemItem::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:GemItem.guid)
}
inline ::uint64_t GemItem::_internal_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guid_;
}
inline void GemItem::_internal_set_guid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = value;
}

// int32 gem_id = 3;
inline void GemItem::clear_gem_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gem_id_ = 0;
}
inline ::int32_t GemItem::gem_id() const {
  // @@protoc_insertion_point(field_get:GemItem.gem_id)
  return _internal_gem_id();
}
inline void GemItem::set_gem_id(::int32_t value) {
  _internal_set_gem_id(value);
  // @@protoc_insertion_point(field_set:GemItem.gem_id)
}
inline ::int32_t GemItem::_internal_gem_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gem_id_;
}
inline void GemItem::_internal_set_gem_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gem_id_ = value;
}

// int32 strength_lvl = 4;
inline void GemItem::clear_strength_lvl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = 0;
}
inline ::int32_t GemItem::strength_lvl() const {
  // @@protoc_insertion_point(field_get:GemItem.strength_lvl)
  return _internal_strength_lvl();
}
inline void GemItem::set_strength_lvl(::int32_t value) {
  _internal_set_strength_lvl(value);
  // @@protoc_insertion_point(field_set:GemItem.strength_lvl)
}
inline ::int32_t GemItem::_internal_strength_lvl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.strength_lvl_;
}
inline void GemItem::_internal_set_strength_lvl(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = value;
}

// int32 refine_level = 5;
inline void GemItem::clear_refine_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = 0;
}
inline ::int32_t GemItem::refine_level() const {
  // @@protoc_insertion_point(field_get:GemItem.refine_level)
  return _internal_refine_level();
}
inline void GemItem::set_refine_level(::int32_t value) {
  _internal_set_refine_level(value);
  // @@protoc_insertion_point(field_set:GemItem.refine_level)
}
inline ::int32_t GemItem::_internal_refine_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refine_level_;
}
inline void GemItem::_internal_set_refine_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = value;
}

// int32 star_level = 6;
inline void GemItem::clear_star_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = 0;
}
inline ::int32_t GemItem::star_level() const {
  // @@protoc_insertion_point(field_get:GemItem.star_level)
  return _internal_star_level();
}
inline void GemItem::set_star_level(::int32_t value) {
  _internal_set_star_level(value);
  // @@protoc_insertion_point(field_set:GemItem.star_level)
}
inline ::int32_t GemItem::_internal_star_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_level_;
}
inline void GemItem::_internal_set_star_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = value;
}

// int32 refine_exp = 7;
inline void GemItem::clear_refine_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_exp_ = 0;
}
inline ::int32_t GemItem::refine_exp() const {
  // @@protoc_insertion_point(field_get:GemItem.refine_exp)
  return _internal_refine_exp();
}
inline void GemItem::set_refine_exp(::int32_t value) {
  _internal_set_refine_exp(value);
  // @@protoc_insertion_point(field_set:GemItem.refine_exp)
}
inline ::int32_t GemItem::_internal_refine_exp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refine_exp_;
}
inline void GemItem::_internal_set_refine_exp(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_exp_ = value;
}

// int32 star_exp = 8;
inline void GemItem::clear_star_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_exp_ = 0;
}
inline ::int32_t GemItem::star_exp() const {
  // @@protoc_insertion_point(field_get:GemItem.star_exp)
  return _internal_star_exp();
}
inline void GemItem::set_star_exp(::int32_t value) {
  _internal_set_star_exp(value);
  // @@protoc_insertion_point(field_set:GemItem.star_exp)
}
inline ::int32_t GemItem::_internal_star_exp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_exp_;
}
inline void GemItem::_internal_set_star_exp(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_exp_ = value;
}

// int32 pos = 9;
inline void GemItem::clear_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pos_ = 0;
}
inline ::int32_t GemItem::pos() const {
  // @@protoc_insertion_point(field_get:GemItem.pos)
  return _internal_pos();
}
inline void GemItem::set_pos(::int32_t value) {
  _internal_set_pos(value);
  // @@protoc_insertion_point(field_set:GemItem.pos)
}
inline ::int32_t GemItem::_internal_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pos_;
}
inline void GemItem::_internal_set_pos(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pos_ = value;
}

// -------------------------------------------------------------------

// Gems

// repeated .GemItem items = 1;
inline int Gems::_internal_items_size() const {
  return _internal_items().size();
}
inline int Gems::items_size() const {
  return _internal_items_size();
}
inline void Gems::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::GemItem* Gems::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Gems.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::GemItem>* Gems::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Gems.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::GemItem& Gems::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Gems.items)
  return _internal_items().Get(index);
}
inline ::GemItem* Gems::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::GemItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:Gems.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::GemItem>& Gems::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Gems.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::GemItem>&
Gems::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::GemItem>*
Gems::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// DBSkillItem

// uint64 role_id = 1;
inline void DBSkillItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t DBSkillItem::role_id() const {
  // @@protoc_insertion_point(field_get:DBSkillItem.role_id)
  return _internal_role_id();
}
inline void DBSkillItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:DBSkillItem.role_id)
}
inline ::uint64_t DBSkillItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void DBSkillItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint32 skill_id = 2;
inline void DBSkillItem::clear_skill_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skill_id_ = 0u;
}
inline ::uint32_t DBSkillItem::skill_id() const {
  // @@protoc_insertion_point(field_get:DBSkillItem.skill_id)
  return _internal_skill_id();
}
inline void DBSkillItem::set_skill_id(::uint32_t value) {
  _internal_set_skill_id(value);
  // @@protoc_insertion_point(field_set:DBSkillItem.skill_id)
}
inline ::uint32_t DBSkillItem::_internal_skill_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.skill_id_;
}
inline void DBSkillItem::_internal_set_skill_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skill_id_ = value;
}

// int32 level = 3;
inline void DBSkillItem::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0;
}
inline ::int32_t DBSkillItem::level() const {
  // @@protoc_insertion_point(field_get:DBSkillItem.level)
  return _internal_level();
}
inline void DBSkillItem::set_level(::int32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:DBSkillItem.level)
}
inline ::int32_t DBSkillItem::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void DBSkillItem::_internal_set_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// int32 key_pos = 4;
inline void DBSkillItem::clear_key_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_pos_ = 0;
}
inline ::int32_t DBSkillItem::key_pos() const {
  // @@protoc_insertion_point(field_get:DBSkillItem.key_pos)
  return _internal_key_pos();
}
inline void DBSkillItem::set_key_pos(::int32_t value) {
  _internal_set_key_pos(value);
  // @@protoc_insertion_point(field_set:DBSkillItem.key_pos)
}
inline ::int32_t DBSkillItem::_internal_key_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_pos_;
}
inline void DBSkillItem::_internal_set_key_pos(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_pos_ = value;
}

// -------------------------------------------------------------------

// Skills

// repeated .DBSkillItem items = 1;
inline int Skills::_internal_items_size() const {
  return _internal_items().size();
}
inline int Skills::items_size() const {
  return _internal_items_size();
}
inline void Skills::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::DBSkillItem* Skills::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Skills.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DBSkillItem>* Skills::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Skills.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DBSkillItem& Skills::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Skills.items)
  return _internal_items().Get(index);
}
inline ::DBSkillItem* Skills::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DBSkillItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:Skills.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DBSkillItem>& Skills::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Skills.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DBSkillItem>&
Skills::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DBSkillItem>*
Skills::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// PetItem

// uint64 role_id = 1;
inline void PetItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t PetItem::role_id() const {
  // @@protoc_insertion_point(field_get:PetItem.role_id)
  return _internal_role_id();
}
inline void PetItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:PetItem.role_id)
}
inline ::uint64_t PetItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void PetItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint64 guid = 2;
inline void PetItem::clear_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = ::uint64_t{0u};
}
inline ::uint64_t PetItem::guid() const {
  // @@protoc_insertion_point(field_get:PetItem.guid)
  return _internal_guid();
}
inline void PetItem::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:PetItem.guid)
}
inline ::uint64_t PetItem::_internal_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guid_;
}
inline void PetItem::_internal_set_guid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = value;
}

// int32 pet_id = 3;
inline void PetItem::clear_pet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pet_id_ = 0;
}
inline ::int32_t PetItem::pet_id() const {
  // @@protoc_insertion_point(field_get:PetItem.pet_id)
  return _internal_pet_id();
}
inline void PetItem::set_pet_id(::int32_t value) {
  _internal_set_pet_id(value);
  // @@protoc_insertion_point(field_set:PetItem.pet_id)
}
inline ::int32_t PetItem::_internal_pet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pet_id_;
}
inline void PetItem::_internal_set_pet_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pet_id_ = value;
}

// int32 strength_lvl = 4;
inline void PetItem::clear_strength_lvl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = 0;
}
inline ::int32_t PetItem::strength_lvl() const {
  // @@protoc_insertion_point(field_get:PetItem.strength_lvl)
  return _internal_strength_lvl();
}
inline void PetItem::set_strength_lvl(::int32_t value) {
  _internal_set_strength_lvl(value);
  // @@protoc_insertion_point(field_set:PetItem.strength_lvl)
}
inline ::int32_t PetItem::_internal_strength_lvl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.strength_lvl_;
}
inline void PetItem::_internal_set_strength_lvl(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = value;
}

// int32 refine_level = 5;
inline void PetItem::clear_refine_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = 0;
}
inline ::int32_t PetItem::refine_level() const {
  // @@protoc_insertion_point(field_get:PetItem.refine_level)
  return _internal_refine_level();
}
inline void PetItem::set_refine_level(::int32_t value) {
  _internal_set_refine_level(value);
  // @@protoc_insertion_point(field_set:PetItem.refine_level)
}
inline ::int32_t PetItem::_internal_refine_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refine_level_;
}
inline void PetItem::_internal_set_refine_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = value;
}

// int32 star_level = 6;
inline void PetItem::clear_star_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = 0;
}
inline ::int32_t PetItem::star_level() const {
  // @@protoc_insertion_point(field_get:PetItem.star_level)
  return _internal_star_level();
}
inline void PetItem::set_star_level(::int32_t value) {
  _internal_set_star_level(value);
  // @@protoc_insertion_point(field_set:PetItem.star_level)
}
inline ::int32_t PetItem::_internal_star_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_level_;
}
inline void PetItem::_internal_set_star_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = value;
}

// bool is_using = 7;
inline void PetItem::clear_is_using() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_using_ = false;
}
inline bool PetItem::is_using() const {
  // @@protoc_insertion_point(field_get:PetItem.is_using)
  return _internal_is_using();
}
inline void PetItem::set_is_using(bool value) {
  _internal_set_is_using(value);
  // @@protoc_insertion_point(field_set:PetItem.is_using)
}
inline bool PetItem::_internal_is_using() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_using_;
}
inline void PetItem::_internal_set_is_using(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_using_ = value;
}

// -------------------------------------------------------------------

// Pets

// repeated .PetItem items = 1;
inline int Pets::_internal_items_size() const {
  return _internal_items().size();
}
inline int Pets::items_size() const {
  return _internal_items_size();
}
inline void Pets::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::PetItem* Pets::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Pets.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::PetItem>* Pets::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Pets.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::PetItem& Pets::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Pets.items)
  return _internal_items().Get(index);
}
inline ::PetItem* Pets::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::PetItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:Pets.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::PetItem>& Pets::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Pets.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::PetItem>&
Pets::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::PetItem>*
Pets::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// MountItem

// uint64 role_id = 1;
inline void MountItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t MountItem::role_id() const {
  // @@protoc_insertion_point(field_get:MountItem.role_id)
  return _internal_role_id();
}
inline void MountItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:MountItem.role_id)
}
inline ::uint64_t MountItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void MountItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint64 guid = 2;
inline void MountItem::clear_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = ::uint64_t{0u};
}
inline ::uint64_t MountItem::guid() const {
  // @@protoc_insertion_point(field_get:MountItem.guid)
  return _internal_guid();
}
inline void MountItem::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:MountItem.guid)
}
inline ::uint64_t MountItem::_internal_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guid_;
}
inline void MountItem::_internal_set_guid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = value;
}

// int32 mount_id = 3;
inline void MountItem::clear_mount_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mount_id_ = 0;
}
inline ::int32_t MountItem::mount_id() const {
  // @@protoc_insertion_point(field_get:MountItem.mount_id)
  return _internal_mount_id();
}
inline void MountItem::set_mount_id(::int32_t value) {
  _internal_set_mount_id(value);
  // @@protoc_insertion_point(field_set:MountItem.mount_id)
}
inline ::int32_t MountItem::_internal_mount_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mount_id_;
}
inline void MountItem::_internal_set_mount_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mount_id_ = value;
}

// int32 strength_lvl = 4;
inline void MountItem::clear_strength_lvl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = 0;
}
inline ::int32_t MountItem::strength_lvl() const {
  // @@protoc_insertion_point(field_get:MountItem.strength_lvl)
  return _internal_strength_lvl();
}
inline void MountItem::set_strength_lvl(::int32_t value) {
  _internal_set_strength_lvl(value);
  // @@protoc_insertion_point(field_set:MountItem.strength_lvl)
}
inline ::int32_t MountItem::_internal_strength_lvl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.strength_lvl_;
}
inline void MountItem::_internal_set_strength_lvl(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = value;
}

// int32 refine_level = 5;
inline void MountItem::clear_refine_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = 0;
}
inline ::int32_t MountItem::refine_level() const {
  // @@protoc_insertion_point(field_get:MountItem.refine_level)
  return _internal_refine_level();
}
inline void MountItem::set_refine_level(::int32_t value) {
  _internal_set_refine_level(value);
  // @@protoc_insertion_point(field_set:MountItem.refine_level)
}
inline ::int32_t MountItem::_internal_refine_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refine_level_;
}
inline void MountItem::_internal_set_refine_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = value;
}

// int32 star_level = 6;
inline void MountItem::clear_star_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = 0;
}
inline ::int32_t MountItem::star_level() const {
  // @@protoc_insertion_point(field_get:MountItem.star_level)
  return _internal_star_level();
}
inline void MountItem::set_star_level(::int32_t value) {
  _internal_set_star_level(value);
  // @@protoc_insertion_point(field_set:MountItem.star_level)
}
inline ::int32_t MountItem::_internal_star_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_level_;
}
inline void MountItem::_internal_set_star_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = value;
}

// bool is_using = 7;
inline void MountItem::clear_is_using() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_using_ = false;
}
inline bool MountItem::is_using() const {
  // @@protoc_insertion_point(field_get:MountItem.is_using)
  return _internal_is_using();
}
inline void MountItem::set_is_using(bool value) {
  _internal_set_is_using(value);
  // @@protoc_insertion_point(field_set:MountItem.is_using)
}
inline bool MountItem::_internal_is_using() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_using_;
}
inline void MountItem::_internal_set_is_using(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_using_ = value;
}

// -------------------------------------------------------------------

// Mounts

// repeated .MountItem items = 1;
inline int Mounts::_internal_items_size() const {
  return _internal_items().size();
}
inline int Mounts::items_size() const {
  return _internal_items_size();
}
inline void Mounts::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::MountItem* Mounts::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Mounts.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MountItem>* Mounts::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Mounts.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::MountItem& Mounts::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Mounts.items)
  return _internal_items().Get(index);
}
inline ::MountItem* Mounts::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MountItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:Mounts.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MountItem>& Mounts::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Mounts.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::MountItem>&
Mounts::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::MountItem>*
Mounts::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// PartnerItem

// uint64 role_id = 1;
inline void PartnerItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t PartnerItem::role_id() const {
  // @@protoc_insertion_point(field_get:PartnerItem.role_id)
  return _internal_role_id();
}
inline void PartnerItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:PartnerItem.role_id)
}
inline ::uint64_t PartnerItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void PartnerItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint64 guid = 2;
inline void PartnerItem::clear_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = ::uint64_t{0u};
}
inline ::uint64_t PartnerItem::guid() const {
  // @@protoc_insertion_point(field_get:PartnerItem.guid)
  return _internal_guid();
}
inline void PartnerItem::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:PartnerItem.guid)
}
inline ::uint64_t PartnerItem::_internal_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guid_;
}
inline void PartnerItem::_internal_set_guid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = value;
}

// int32 partner_id = 3;
inline void PartnerItem::clear_partner_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partner_id_ = 0;
}
inline ::int32_t PartnerItem::partner_id() const {
  // @@protoc_insertion_point(field_get:PartnerItem.partner_id)
  return _internal_partner_id();
}
inline void PartnerItem::set_partner_id(::int32_t value) {
  _internal_set_partner_id(value);
  // @@protoc_insertion_point(field_set:PartnerItem.partner_id)
}
inline ::int32_t PartnerItem::_internal_partner_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partner_id_;
}
inline void PartnerItem::_internal_set_partner_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partner_id_ = value;
}

// int32 strength_lvl = 4;
inline void PartnerItem::clear_strength_lvl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = 0;
}
inline ::int32_t PartnerItem::strength_lvl() const {
  // @@protoc_insertion_point(field_get:PartnerItem.strength_lvl)
  return _internal_strength_lvl();
}
inline void PartnerItem::set_strength_lvl(::int32_t value) {
  _internal_set_strength_lvl(value);
  // @@protoc_insertion_point(field_set:PartnerItem.strength_lvl)
}
inline ::int32_t PartnerItem::_internal_strength_lvl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.strength_lvl_;
}
inline void PartnerItem::_internal_set_strength_lvl(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_lvl_ = value;
}

// int32 refine_level = 5;
inline void PartnerItem::clear_refine_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = 0;
}
inline ::int32_t PartnerItem::refine_level() const {
  // @@protoc_insertion_point(field_get:PartnerItem.refine_level)
  return _internal_refine_level();
}
inline void PartnerItem::set_refine_level(::int32_t value) {
  _internal_set_refine_level(value);
  // @@protoc_insertion_point(field_set:PartnerItem.refine_level)
}
inline ::int32_t PartnerItem::_internal_refine_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refine_level_;
}
inline void PartnerItem::_internal_set_refine_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refine_level_ = value;
}

// int32 star_level = 6;
inline void PartnerItem::clear_star_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = 0;
}
inline ::int32_t PartnerItem::star_level() const {
  // @@protoc_insertion_point(field_get:PartnerItem.star_level)
  return _internal_star_level();
}
inline void PartnerItem::set_star_level(::int32_t value) {
  _internal_set_star_level(value);
  // @@protoc_insertion_point(field_set:PartnerItem.star_level)
}
inline ::int32_t PartnerItem::_internal_star_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_level_;
}
inline void PartnerItem::_internal_set_star_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_level_ = value;
}

// int32 set_pos = 7;
inline void PartnerItem::clear_set_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_pos_ = 0;
}
inline ::int32_t PartnerItem::set_pos() const {
  // @@protoc_insertion_point(field_get:PartnerItem.set_pos)
  return _internal_set_pos();
}
inline void PartnerItem::set_set_pos(::int32_t value) {
  _internal_set_set_pos(value);
  // @@protoc_insertion_point(field_set:PartnerItem.set_pos)
}
inline ::int32_t PartnerItem::_internal_set_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.set_pos_;
}
inline void PartnerItem::_internal_set_set_pos(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_pos_ = value;
}

// -------------------------------------------------------------------

// Partners

// repeated .PartnerItem items = 1;
inline int Partners::_internal_items_size() const {
  return _internal_items().size();
}
inline int Partners::items_size() const {
  return _internal_items_size();
}
inline void Partners::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::PartnerItem* Partners::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Partners.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::PartnerItem>* Partners::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Partners.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::PartnerItem& Partners::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Partners.items)
  return _internal_items().Get(index);
}
inline ::PartnerItem* Partners::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::PartnerItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:Partners.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::PartnerItem>& Partners::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Partners.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::PartnerItem>&
Partners::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::PartnerItem>*
Partners::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// TaskItem

// uint64 role_id = 1;
inline void TaskItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t TaskItem::role_id() const {
  // @@protoc_insertion_point(field_get:TaskItem.role_id)
  return _internal_role_id();
}
inline void TaskItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:TaskItem.role_id)
}
inline ::uint64_t TaskItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void TaskItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint32 task_id = 2;
inline void TaskItem::clear_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = 0u;
}
inline ::uint32_t TaskItem::task_id() const {
  // @@protoc_insertion_point(field_get:TaskItem.task_id)
  return _internal_task_id();
}
inline void TaskItem::set_task_id(::uint32_t value) {
  _internal_set_task_id(value);
  // @@protoc_insertion_point(field_set:TaskItem.task_id)
}
inline ::uint32_t TaskItem::_internal_task_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.task_id_;
}
inline void TaskItem::_internal_set_task_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = value;
}

// int32 status = 3;
inline void TaskItem::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::int32_t TaskItem::status() const {
  // @@protoc_insertion_point(field_get:TaskItem.status)
  return _internal_status();
}
inline void TaskItem::set_status(::int32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:TaskItem.status)
}
inline ::int32_t TaskItem::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void TaskItem::_internal_set_status(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// int32 progress = 4;
inline void TaskItem::clear_progress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.progress_ = 0;
}
inline ::int32_t TaskItem::progress() const {
  // @@protoc_insertion_point(field_get:TaskItem.progress)
  return _internal_progress();
}
inline void TaskItem::set_progress(::int32_t value) {
  _internal_set_progress(value);
  // @@protoc_insertion_point(field_set:TaskItem.progress)
}
inline ::int32_t TaskItem::_internal_progress() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.progress_;
}
inline void TaskItem::_internal_set_progress(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.progress_ = value;
}

// -------------------------------------------------------------------

// Tasks

// repeated .TaskItem items = 1;
inline int Tasks::_internal_items_size() const {
  return _internal_items().size();
}
inline int Tasks::items_size() const {
  return _internal_items_size();
}
inline void Tasks::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::TaskItem* Tasks::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Tasks.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::TaskItem>* Tasks::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Tasks.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::TaskItem& Tasks::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Tasks.items)
  return _internal_items().Get(index);
}
inline ::TaskItem* Tasks::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::TaskItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:Tasks.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::TaskItem>& Tasks::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Tasks.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::TaskItem>&
Tasks::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::TaskItem>*
Tasks::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// MailItem

// uint64 role_id = 1;
inline void MailItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t MailItem::role_id() const {
  // @@protoc_insertion_point(field_get:MailItem.role_id)
  return _internal_role_id();
}
inline void MailItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:MailItem.role_id)
}
inline ::uint64_t MailItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void MailItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint64 guid = 2;
inline void MailItem::clear_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = ::uint64_t{0u};
}
inline ::uint64_t MailItem::guid() const {
  // @@protoc_insertion_point(field_get:MailItem.guid)
  return _internal_guid();
}
inline void MailItem::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:MailItem.guid)
}
inline ::uint64_t MailItem::_internal_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guid_;
}
inline void MailItem::_internal_set_guid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = value;
}

// uint64 group_id = 3;
inline void MailItem::clear_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_ = ::uint64_t{0u};
}
inline ::uint64_t MailItem::group_id() const {
  // @@protoc_insertion_point(field_get:MailItem.group_id)
  return _internal_group_id();
}
inline void MailItem::set_group_id(::uint64_t value) {
  _internal_set_group_id(value);
  // @@protoc_insertion_point(field_set:MailItem.group_id)
}
inline ::uint64_t MailItem::_internal_group_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_id_;
}
inline void MailItem::_internal_set_group_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_ = value;
}

// uint64 time = 4;
inline void MailItem::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = ::uint64_t{0u};
}
inline ::uint64_t MailItem::time() const {
  // @@protoc_insertion_point(field_get:MailItem.time)
  return _internal_time();
}
inline void MailItem::set_time(::uint64_t value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:MailItem.time)
}
inline ::uint64_t MailItem::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_;
}
inline void MailItem::_internal_set_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = value;
}

// uint64 sender_id = 5;
inline void MailItem::clear_sender_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_id_ = ::uint64_t{0u};
}
inline ::uint64_t MailItem::sender_id() const {
  // @@protoc_insertion_point(field_get:MailItem.sender_id)
  return _internal_sender_id();
}
inline void MailItem::set_sender_id(::uint64_t value) {
  _internal_set_sender_id(value);
  // @@protoc_insertion_point(field_set:MailItem.sender_id)
}
inline ::uint64_t MailItem::_internal_sender_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_id_;
}
inline void MailItem::_internal_set_sender_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_id_ = value;
}

// string sender = 6;
inline void MailItem::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MailItem::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MailItem.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MailItem::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MailItem.sender)
}
inline std::string* MailItem::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:MailItem.sender)
  return _s;
}
inline const std::string& MailItem::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MailItem::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MailItem::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MailItem::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MailItem.sender)
  return _impl_.sender_.Release();
}
inline void MailItem::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:MailItem.sender)
}

// uint32 mail_type = 7;
inline void MailItem::clear_mail_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mail_type_ = 0u;
}
inline ::uint32_t MailItem::mail_type() const {
  // @@protoc_insertion_point(field_get:MailItem.mail_type)
  return _internal_mail_type();
}
inline void MailItem::set_mail_type(::uint32_t value) {
  _internal_set_mail_type(value);
  // @@protoc_insertion_point(field_set:MailItem.mail_type)
}
inline ::uint32_t MailItem::_internal_mail_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mail_type_;
}
inline void MailItem::_internal_set_mail_type(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mail_type_ = value;
}

// uint32 status = 8;
inline void MailItem::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0u;
}
inline ::uint32_t MailItem::status() const {
  // @@protoc_insertion_point(field_get:MailItem.status)
  return _internal_status();
}
inline void MailItem::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:MailItem.status)
}
inline ::uint32_t MailItem::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void MailItem::_internal_set_status(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// string title = 9;
inline void MailItem::clear_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& MailItem::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MailItem.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MailItem::set_title(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MailItem.title)
}
inline std::string* MailItem::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:MailItem.title)
  return _s;
}
inline const std::string& MailItem::_internal_title() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.title_.Get();
}
inline void MailItem::_internal_set_title(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(value, GetArena());
}
inline std::string* MailItem::_internal_mutable_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* MailItem::release_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MailItem.title)
  return _impl_.title_.Release();
}
inline void MailItem::set_allocated_title(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:MailItem.title)
}

// string content = 10;
inline void MailItem::clear_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.ClearToEmpty();
}
inline const std::string& MailItem::content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MailItem.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MailItem::set_content(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MailItem.content)
}
inline std::string* MailItem::mutable_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:MailItem.content)
  return _s;
}
inline const std::string& MailItem::_internal_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.content_.Get();
}
inline void MailItem::_internal_set_content(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.Set(value, GetArena());
}
inline std::string* MailItem::_internal_mutable_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.content_.Mutable( GetArena());
}
inline std::string* MailItem::release_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MailItem.content)
  return _impl_.content_.Release();
}
inline void MailItem::set_allocated_content(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.content_.IsDefault()) {
    _impl_.content_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:MailItem.content)
}

// bytes items = 11;
inline void MailItem::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.ClearToEmpty();
}
inline const std::string& MailItem::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MailItem.items)
  return _internal_items();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MailItem::set_items(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MailItem.items)
}
inline std::string* MailItem::mutable_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_items();
  // @@protoc_insertion_point(field_mutable:MailItem.items)
  return _s;
}
inline const std::string& MailItem::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_.Get();
}
inline void MailItem::_internal_set_items(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Set(value, GetArena());
}
inline std::string* MailItem::_internal_mutable_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.items_.Mutable( GetArena());
}
inline std::string* MailItem::release_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MailItem.items)
  return _impl_.items_.Release();
}
inline void MailItem::set_allocated_items(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.items_.IsDefault()) {
    _impl_.items_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:MailItem.items)
}

// -------------------------------------------------------------------

// Mails

// repeated .MailItem items = 1;
inline int Mails::_internal_items_size() const {
  return _internal_items().size();
}
inline int Mails::items_size() const {
  return _internal_items_size();
}
inline void Mails::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::MailItem* Mails::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Mails.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MailItem>* Mails::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Mails.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::MailItem& Mails::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Mails.items)
  return _internal_items().Get(index);
}
inline ::MailItem* Mails::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MailItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:Mails.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MailItem>& Mails::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Mails.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::MailItem>&
Mails::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::MailItem>*
Mails::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// ActivityItem

// uint64 role_id = 1;
inline void ActivityItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t ActivityItem::role_id() const {
  // @@protoc_insertion_point(field_get:ActivityItem.role_id)
  return _internal_role_id();
}
inline void ActivityItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:ActivityItem.role_id)
}
inline ::uint64_t ActivityItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void ActivityItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint32 activity_id = 2;
inline void ActivityItem::clear_activity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.activity_id_ = 0u;
}
inline ::uint32_t ActivityItem::activity_id() const {
  // @@protoc_insertion_point(field_get:ActivityItem.activity_id)
  return _internal_activity_id();
}
inline void ActivityItem::set_activity_id(::uint32_t value) {
  _internal_set_activity_id(value);
  // @@protoc_insertion_point(field_set:ActivityItem.activity_id)
}
inline ::uint32_t ActivityItem::_internal_activity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.activity_id_;
}
inline void ActivityItem::_internal_set_activity_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.activity_id_ = value;
}

// uint32 activity_type = 3;
inline void ActivityItem::clear_activity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.activity_type_ = 0u;
}
inline ::uint32_t ActivityItem::activity_type() const {
  // @@protoc_insertion_point(field_get:ActivityItem.activity_type)
  return _internal_activity_type();
}
inline void ActivityItem::set_activity_type(::uint32_t value) {
  _internal_set_activity_type(value);
  // @@protoc_insertion_point(field_set:ActivityItem.activity_type)
}
inline ::uint32_t ActivityItem::_internal_activity_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.activity_type_;
}
inline void ActivityItem::_internal_set_activity_type(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.activity_type_ = value;
}

// uint32 join_time = 4;
inline void ActivityItem::clear_join_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.join_time_ = 0u;
}
inline ::uint32_t ActivityItem::join_time() const {
  // @@protoc_insertion_point(field_get:ActivityItem.join_time)
  return _internal_join_time();
}
inline void ActivityItem::set_join_time(::uint32_t value) {
  _internal_set_join_time(value);
  // @@protoc_insertion_point(field_set:ActivityItem.join_time)
}
inline ::uint32_t ActivityItem::_internal_join_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.join_time_;
}
inline void ActivityItem::_internal_set_join_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.join_time_ = value;
}

// uint32 data_len = 5;
inline void ActivityItem::clear_data_len() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_len_ = 0u;
}
inline ::uint32_t ActivityItem::data_len() const {
  // @@protoc_insertion_point(field_get:ActivityItem.data_len)
  return _internal_data_len();
}
inline void ActivityItem::set_data_len(::uint32_t value) {
  _internal_set_data_len(value);
  // @@protoc_insertion_point(field_set:ActivityItem.data_len)
}
inline ::uint32_t ActivityItem::_internal_data_len() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_len_;
}
inline void ActivityItem::_internal_set_data_len(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_len_ = value;
}

// bytes data = 6;
inline void ActivityItem::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& ActivityItem::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ActivityItem.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ActivityItem::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ActivityItem.data)
}
inline std::string* ActivityItem::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:ActivityItem.data)
  return _s;
}
inline const std::string& ActivityItem::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void ActivityItem::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* ActivityItem::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* ActivityItem::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ActivityItem.data)
  return _impl_.data_.Release();
}
inline void ActivityItem::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityItem.data)
}

// -------------------------------------------------------------------

// Activities

// repeated .ActivityItem items = 1;
inline int Activities::_internal_items_size() const {
  return _internal_items().size();
}
inline int Activities::items_size() const {
  return _internal_items_size();
}
inline void Activities::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::ActivityItem* Activities::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Activities.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ActivityItem>* Activities::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Activities.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::ActivityItem& Activities::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Activities.items)
  return _internal_items().Get(index);
}
inline ::ActivityItem* Activities::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::ActivityItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:Activities.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ActivityItem>& Activities::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Activities.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::ActivityItem>&
Activities::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::ActivityItem>*
Activities::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// CounterItem

// uint64 role_id = 1;
inline void CounterItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t CounterItem::role_id() const {
  // @@protoc_insertion_point(field_get:CounterItem.role_id)
  return _internal_role_id();
}
inline void CounterItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:CounterItem.role_id)
}
inline ::uint64_t CounterItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void CounterItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint32 counter_id = 2;
inline void CounterItem::clear_counter_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counter_id_ = 0u;
}
inline ::uint32_t CounterItem::counter_id() const {
  // @@protoc_insertion_point(field_get:CounterItem.counter_id)
  return _internal_counter_id();
}
inline void CounterItem::set_counter_id(::uint32_t value) {
  _internal_set_counter_id(value);
  // @@protoc_insertion_point(field_set:CounterItem.counter_id)
}
inline ::uint32_t CounterItem::_internal_counter_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.counter_id_;
}
inline void CounterItem::_internal_set_counter_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counter_id_ = value;
}

// uint32 index = 3;
inline void CounterItem::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = 0u;
}
inline ::uint32_t CounterItem::index() const {
  // @@protoc_insertion_point(field_get:CounterItem.index)
  return _internal_index();
}
inline void CounterItem::set_index(::uint32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:CounterItem.index)
}
inline ::uint32_t CounterItem::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void CounterItem::_internal_set_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// int64 value = 4;
inline void CounterItem::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = ::int64_t{0};
}
inline ::int64_t CounterItem::value() const {
  // @@protoc_insertion_point(field_get:CounterItem.value)
  return _internal_value();
}
inline void CounterItem::set_value(::int64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CounterItem.value)
}
inline ::int64_t CounterItem::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void CounterItem::_internal_set_value(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// uint64 time = 5;
inline void CounterItem::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = ::uint64_t{0u};
}
inline ::uint64_t CounterItem::time() const {
  // @@protoc_insertion_point(field_get:CounterItem.time)
  return _internal_time();
}
inline void CounterItem::set_time(::uint64_t value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:CounterItem.time)
}
inline ::uint64_t CounterItem::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_;
}
inline void CounterItem::_internal_set_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = value;
}

// uint32 param1 = 6;
inline void CounterItem::clear_param1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.param1_ = 0u;
}
inline ::uint32_t CounterItem::param1() const {
  // @@protoc_insertion_point(field_get:CounterItem.param1)
  return _internal_param1();
}
inline void CounterItem::set_param1(::uint32_t value) {
  _internal_set_param1(value);
  // @@protoc_insertion_point(field_set:CounterItem.param1)
}
inline ::uint32_t CounterItem::_internal_param1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.param1_;
}
inline void CounterItem::_internal_set_param1(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.param1_ = value;
}

// uint32 param2 = 7;
inline void CounterItem::clear_param2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.param2_ = 0u;
}
inline ::uint32_t CounterItem::param2() const {
  // @@protoc_insertion_point(field_get:CounterItem.param2)
  return _internal_param2();
}
inline void CounterItem::set_param2(::uint32_t value) {
  _internal_set_param2(value);
  // @@protoc_insertion_point(field_set:CounterItem.param2)
}
inline ::uint32_t CounterItem::_internal_param2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.param2_;
}
inline void CounterItem::_internal_set_param2(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.param2_ = value;
}

// -------------------------------------------------------------------

// Counters

// repeated .CounterItem items = 1;
inline int Counters::_internal_items_size() const {
  return _internal_items().size();
}
inline int Counters::items_size() const {
  return _internal_items_size();
}
inline void Counters::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::CounterItem* Counters::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Counters.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CounterItem>* Counters::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Counters.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::CounterItem& Counters::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Counters.items)
  return _internal_items().Get(index);
}
inline ::CounterItem* Counters::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CounterItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:Counters.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CounterItem>& Counters::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Counters.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::CounterItem>&
Counters::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::CounterItem>*
Counters::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// FriendItem

// uint64 role_id = 1;
inline void FriendItem::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t FriendItem::role_id() const {
  // @@protoc_insertion_point(field_get:FriendItem.role_id)
  return _internal_role_id();
}
inline void FriendItem::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:FriendItem.role_id)
}
inline ::uint64_t FriendItem::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void FriendItem::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint64 friend_id = 2;
inline void FriendItem::clear_friend_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.friend_id_ = ::uint64_t{0u};
}
inline ::uint64_t FriendItem::friend_id() const {
  // @@protoc_insertion_point(field_get:FriendItem.friend_id)
  return _internal_friend_id();
}
inline void FriendItem::set_friend_id(::uint64_t value) {
  _internal_set_friend_id(value);
  // @@protoc_insertion_point(field_set:FriendItem.friend_id)
}
inline ::uint64_t FriendItem::_internal_friend_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.friend_id_;
}
inline void FriendItem::_internal_set_friend_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.friend_id_ = value;
}

// -------------------------------------------------------------------

// Friends

// repeated .FriendItem items = 1;
inline int Friends::_internal_items_size() const {
  return _internal_items().size();
}
inline int Friends::items_size() const {
  return _internal_items_size();
}
inline void Friends::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::FriendItem* Friends::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Friends.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::FriendItem>* Friends::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Friends.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::FriendItem& Friends::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Friends.items)
  return _internal_items().Get(index);
}
inline ::FriendItem* Friends::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::FriendItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:Friends.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::FriendItem>& Friends::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Friends.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::FriendItem>&
Friends::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::FriendItem>*
Friends::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// RoleLoginAck

// uint32 ret_code = 1;
inline void RoleLoginAck::clear_ret_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ret_code_ = 0u;
}
inline ::uint32_t RoleLoginAck::ret_code() const {
  // @@protoc_insertion_point(field_get:RoleLoginAck.ret_code)
  return _internal_ret_code();
}
inline void RoleLoginAck::set_ret_code(::uint32_t value) {
  _internal_set_ret_code(value);
  // @@protoc_insertion_point(field_set:RoleLoginAck.ret_code)
}
inline ::uint32_t RoleLoginAck::_internal_ret_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ret_code_;
}
inline void RoleLoginAck::_internal_set_ret_code(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ret_code_ = value;
}

// uint64 role_id = 2;
inline void RoleLoginAck::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t RoleLoginAck::role_id() const {
  // @@protoc_insertion_point(field_get:RoleLoginAck.role_id)
  return _internal_role_id();
}
inline void RoleLoginAck::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:RoleLoginAck.role_id)
}
inline ::uint64_t RoleLoginAck::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void RoleLoginAck::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// .RoleData role_data = 3;
inline bool RoleLoginAck::has_role_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.role_data_ != nullptr);
  return value;
}
inline void RoleLoginAck::clear_role_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.role_data_ != nullptr) _impl_.role_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::RoleData& RoleLoginAck::_internal_role_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::RoleData* p = _impl_.role_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::RoleData&>(::_RoleData_default_instance_);
}
inline const ::RoleData& RoleLoginAck::role_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RoleLoginAck.role_data)
  return _internal_role_data();
}
inline void RoleLoginAck::unsafe_arena_set_allocated_role_data(::RoleData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.role_data_);
  }
  _impl_.role_data_ = reinterpret_cast<::RoleData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RoleLoginAck.role_data)
}
inline ::RoleData* RoleLoginAck::release_role_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::RoleData* released = _impl_.role_data_;
  _impl_.role_data_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::RoleData* RoleLoginAck::unsafe_arena_release_role_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RoleLoginAck.role_data)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::RoleData* temp = _impl_.role_data_;
  _impl_.role_data_ = nullptr;
  return temp;
}
inline ::RoleData* RoleLoginAck::_internal_mutable_role_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.role_data_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::RoleData>(GetArena());
    _impl_.role_data_ = reinterpret_cast<::RoleData*>(p);
  }
  return _impl_.role_data_;
}
inline ::RoleData* RoleLoginAck::mutable_role_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::RoleData* _msg = _internal_mutable_role_data();
  // @@protoc_insertion_point(field_mutable:RoleLoginAck.role_data)
  return _msg;
}
inline void RoleLoginAck::set_allocated_role_data(::RoleData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.role_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.role_data_ = reinterpret_cast<::RoleData*>(value);
  // @@protoc_insertion_point(field_set_allocated:RoleLoginAck.role_data)
}

// .BagItems bag_items = 4;
inline bool RoleLoginAck::has_bag_items() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bag_items_ != nullptr);
  return value;
}
inline void RoleLoginAck::clear_bag_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bag_items_ != nullptr) _impl_.bag_items_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::BagItems& RoleLoginAck::_internal_bag_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::BagItems* p = _impl_.bag_items_;
  return p != nullptr ? *p : reinterpret_cast<const ::BagItems&>(::_BagItems_default_instance_);
}
inline const ::BagItems& RoleLoginAck::bag_items() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RoleLoginAck.bag_items)
  return _internal_bag_items();
}
inline void RoleLoginAck::unsafe_arena_set_allocated_bag_items(::BagItems* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bag_items_);
  }
  _impl_.bag_items_ = reinterpret_cast<::BagItems*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RoleLoginAck.bag_items)
}
inline ::BagItems* RoleLoginAck::release_bag_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::BagItems* released = _impl_.bag_items_;
  _impl_.bag_items_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::BagItems* RoleLoginAck::unsafe_arena_release_bag_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RoleLoginAck.bag_items)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::BagItems* temp = _impl_.bag_items_;
  _impl_.bag_items_ = nullptr;
  return temp;
}
inline ::BagItems* RoleLoginAck::_internal_mutable_bag_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bag_items_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::BagItems>(GetArena());
    _impl_.bag_items_ = reinterpret_cast<::BagItems*>(p);
  }
  return _impl_.bag_items_;
}
inline ::BagItems* RoleLoginAck::mutable_bag_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::BagItems* _msg = _internal_mutable_bag_items();
  // @@protoc_insertion_point(field_mutable:RoleLoginAck.bag_items)
  return _msg;
}
inline void RoleLoginAck::set_allocated_bag_items(::BagItems* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.bag_items_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.bag_items_ = reinterpret_cast<::BagItems*>(value);
  // @@protoc_insertion_point(field_set_allocated:RoleLoginAck.bag_items)
}

// .Copies copies = 5;
inline bool RoleLoginAck::has_copies() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.copies_ != nullptr);
  return value;
}
inline void RoleLoginAck::clear_copies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.copies_ != nullptr) _impl_.copies_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::Copies& RoleLoginAck::_internal_copies() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Copies* p = _impl_.copies_;
  return p != nullptr ? *p : reinterpret_cast<const ::Copies&>(::_Copies_default_instance_);
}
inline const ::Copies& RoleLoginAck::copies() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RoleLoginAck.copies)
  return _internal_copies();
}
inline void RoleLoginAck::unsafe_arena_set_allocated_copies(::Copies* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.copies_);
  }
  _impl_.copies_ = reinterpret_cast<::Copies*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RoleLoginAck.copies)
}
inline ::Copies* RoleLoginAck::release_copies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Copies* released = _impl_.copies_;
  _impl_.copies_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Copies* RoleLoginAck::unsafe_arena_release_copies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RoleLoginAck.copies)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Copies* temp = _impl_.copies_;
  _impl_.copies_ = nullptr;
  return temp;
}
inline ::Copies* RoleLoginAck::_internal_mutable_copies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.copies_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Copies>(GetArena());
    _impl_.copies_ = reinterpret_cast<::Copies*>(p);
  }
  return _impl_.copies_;
}
inline ::Copies* RoleLoginAck::mutable_copies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::Copies* _msg = _internal_mutable_copies();
  // @@protoc_insertion_point(field_mutable:RoleLoginAck.copies)
  return _msg;
}
inline void RoleLoginAck::set_allocated_copies(::Copies* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.copies_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.copies_ = reinterpret_cast<::Copies*>(value);
  // @@protoc_insertion_point(field_set_allocated:RoleLoginAck.copies)
}

// .Equipments equipments = 6;
inline bool RoleLoginAck::has_equipments() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.equipments_ != nullptr);
  return value;
}
inline void RoleLoginAck::clear_equipments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.equipments_ != nullptr) _impl_.equipments_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::Equipments& RoleLoginAck::_internal_equipments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Equipments* p = _impl_.equipments_;
  return p != nullptr ? *p : reinterpret_cast<const ::Equipments&>(::_Equipments_default_instance_);
}
inline const ::Equipments& RoleLoginAck::equipments() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RoleLoginAck.equipments)
  return _internal_equipments();
}
inline void RoleLoginAck::unsafe_arena_set_allocated_equipments(::Equipments* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.equipments_);
  }
  _impl_.equipments_ = reinterpret_cast<::Equipments*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RoleLoginAck.equipments)
}
inline ::Equipments* RoleLoginAck::release_equipments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Equipments* released = _impl_.equipments_;
  _impl_.equipments_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Equipments* RoleLoginAck::unsafe_arena_release_equipments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RoleLoginAck.equipments)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Equipments* temp = _impl_.equipments_;
  _impl_.equipments_ = nullptr;
  return temp;
}
inline ::Equipments* RoleLoginAck::_internal_mutable_equipments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.equipments_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Equipments>(GetArena());
    _impl_.equipments_ = reinterpret_cast<::Equipments*>(p);
  }
  return _impl_.equipments_;
}
inline ::Equipments* RoleLoginAck::mutable_equipments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::Equipments* _msg = _internal_mutable_equipments();
  // @@protoc_insertion_point(field_mutable:RoleLoginAck.equipments)
  return _msg;
}
inline void RoleLoginAck::set_allocated_equipments(::Equipments* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.equipments_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.equipments_ = reinterpret_cast<::Equipments*>(value);
  // @@protoc_insertion_point(field_set_allocated:RoleLoginAck.equipments)
}

// .Gems gems = 7;
inline bool RoleLoginAck::has_gems() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.gems_ != nullptr);
  return value;
}
inline void RoleLoginAck::clear_gems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gems_ != nullptr) _impl_.gems_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::Gems& RoleLoginAck::_internal_gems() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Gems* p = _impl_.gems_;
  return p != nullptr ? *p : reinterpret_cast<const ::Gems&>(::_Gems_default_instance_);
}
inline const ::Gems& RoleLoginAck::gems() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RoleLoginAck.gems)
  return _internal_gems();
}
inline void RoleLoginAck::unsafe_arena_set_allocated_gems(::Gems* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gems_);
  }
  _impl_.gems_ = reinterpret_cast<::Gems*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RoleLoginAck.gems)
}
inline ::Gems* RoleLoginAck::release_gems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::Gems* released = _impl_.gems_;
  _impl_.gems_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Gems* RoleLoginAck::unsafe_arena_release_gems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RoleLoginAck.gems)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::Gems* temp = _impl_.gems_;
  _impl_.gems_ = nullptr;
  return temp;
}
inline ::Gems* RoleLoginAck::_internal_mutable_gems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gems_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Gems>(GetArena());
    _impl_.gems_ = reinterpret_cast<::Gems*>(p);
  }
  return _impl_.gems_;
}
inline ::Gems* RoleLoginAck::mutable_gems() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::Gems* _msg = _internal_mutable_gems();
  // @@protoc_insertion_point(field_mutable:RoleLoginAck.gems)
  return _msg;
}
inline void RoleLoginAck::set_allocated_gems(::Gems* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.gems_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.gems_ = reinterpret_cast<::Gems*>(value);
  // @@protoc_insertion_point(field_set_allocated:RoleLoginAck.gems)
}

// .Pets pets = 8;
inline bool RoleLoginAck::has_pets() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pets_ != nullptr);
  return value;
}
inline void RoleLoginAck::clear_pets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pets_ != nullptr) _impl_.pets_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::Pets& RoleLoginAck::_internal_pets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Pets* p = _impl_.pets_;
  return p != nullptr ? *p : reinterpret_cast<const ::Pets&>(::_Pets_default_instance_);
}
inline const ::Pets& RoleLoginAck::pets() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RoleLoginAck.pets)
  return _internal_pets();
}
inline void RoleLoginAck::unsafe_arena_set_allocated_pets(::Pets* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pets_);
  }
  _impl_.pets_ = reinterpret_cast<::Pets*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RoleLoginAck.pets)
}
inline ::Pets* RoleLoginAck::release_pets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::Pets* released = _impl_.pets_;
  _impl_.pets_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Pets* RoleLoginAck::unsafe_arena_release_pets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RoleLoginAck.pets)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::Pets* temp = _impl_.pets_;
  _impl_.pets_ = nullptr;
  return temp;
}
inline ::Pets* RoleLoginAck::_internal_mutable_pets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pets_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Pets>(GetArena());
    _impl_.pets_ = reinterpret_cast<::Pets*>(p);
  }
  return _impl_.pets_;
}
inline ::Pets* RoleLoginAck::mutable_pets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::Pets* _msg = _internal_mutable_pets();
  // @@protoc_insertion_point(field_mutable:RoleLoginAck.pets)
  return _msg;
}
inline void RoleLoginAck::set_allocated_pets(::Pets* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.pets_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.pets_ = reinterpret_cast<::Pets*>(value);
  // @@protoc_insertion_point(field_set_allocated:RoleLoginAck.pets)
}

// .Partners partners = 9;
inline bool RoleLoginAck::has_partners() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.partners_ != nullptr);
  return value;
}
inline void RoleLoginAck::clear_partners() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.partners_ != nullptr) _impl_.partners_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const ::Partners& RoleLoginAck::_internal_partners() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Partners* p = _impl_.partners_;
  return p != nullptr ? *p : reinterpret_cast<const ::Partners&>(::_Partners_default_instance_);
}
inline const ::Partners& RoleLoginAck::partners() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RoleLoginAck.partners)
  return _internal_partners();
}
inline void RoleLoginAck::unsafe_arena_set_allocated_partners(::Partners* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.partners_);
  }
  _impl_.partners_ = reinterpret_cast<::Partners*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RoleLoginAck.partners)
}
inline ::Partners* RoleLoginAck::release_partners() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::Partners* released = _impl_.partners_;
  _impl_.partners_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Partners* RoleLoginAck::unsafe_arena_release_partners() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RoleLoginAck.partners)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::Partners* temp = _impl_.partners_;
  _impl_.partners_ = nullptr;
  return temp;
}
inline ::Partners* RoleLoginAck::_internal_mutable_partners() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.partners_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Partners>(GetArena());
    _impl_.partners_ = reinterpret_cast<::Partners*>(p);
  }
  return _impl_.partners_;
}
inline ::Partners* RoleLoginAck::mutable_partners() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::Partners* _msg = _internal_mutable_partners();
  // @@protoc_insertion_point(field_mutable:RoleLoginAck.partners)
  return _msg;
}
inline void RoleLoginAck::set_allocated_partners(::Partners* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.partners_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.partners_ = reinterpret_cast<::Partners*>(value);
  // @@protoc_insertion_point(field_set_allocated:RoleLoginAck.partners)
}

// .Tasks tasks = 10;
inline bool RoleLoginAck::has_tasks() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tasks_ != nullptr);
  return value;
}
inline void RoleLoginAck::clear_tasks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tasks_ != nullptr) _impl_.tasks_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const ::Tasks& RoleLoginAck::_internal_tasks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Tasks* p = _impl_.tasks_;
  return p != nullptr ? *p : reinterpret_cast<const ::Tasks&>(::_Tasks_default_instance_);
}
inline const ::Tasks& RoleLoginAck::tasks() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RoleLoginAck.tasks)
  return _internal_tasks();
}
inline void RoleLoginAck::unsafe_arena_set_allocated_tasks(::Tasks* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tasks_);
  }
  _impl_.tasks_ = reinterpret_cast<::Tasks*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RoleLoginAck.tasks)
}
inline ::Tasks* RoleLoginAck::release_tasks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::Tasks* released = _impl_.tasks_;
  _impl_.tasks_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Tasks* RoleLoginAck::unsafe_arena_release_tasks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RoleLoginAck.tasks)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::Tasks* temp = _impl_.tasks_;
  _impl_.tasks_ = nullptr;
  return temp;
}
inline ::Tasks* RoleLoginAck::_internal_mutable_tasks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tasks_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Tasks>(GetArena());
    _impl_.tasks_ = reinterpret_cast<::Tasks*>(p);
  }
  return _impl_.tasks_;
}
inline ::Tasks* RoleLoginAck::mutable_tasks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::Tasks* _msg = _internal_mutable_tasks();
  // @@protoc_insertion_point(field_mutable:RoleLoginAck.tasks)
  return _msg;
}
inline void RoleLoginAck::set_allocated_tasks(::Tasks* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.tasks_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.tasks_ = reinterpret_cast<::Tasks*>(value);
  // @@protoc_insertion_point(field_set_allocated:RoleLoginAck.tasks)
}

// .Mails mails = 11;
inline bool RoleLoginAck::has_mails() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mails_ != nullptr);
  return value;
}
inline void RoleLoginAck::clear_mails() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mails_ != nullptr) _impl_.mails_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const ::Mails& RoleLoginAck::_internal_mails() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Mails* p = _impl_.mails_;
  return p != nullptr ? *p : reinterpret_cast<const ::Mails&>(::_Mails_default_instance_);
}
inline const ::Mails& RoleLoginAck::mails() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RoleLoginAck.mails)
  return _internal_mails();
}
inline void RoleLoginAck::unsafe_arena_set_allocated_mails(::Mails* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mails_);
  }
  _impl_.mails_ = reinterpret_cast<::Mails*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RoleLoginAck.mails)
}
inline ::Mails* RoleLoginAck::release_mails() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::Mails* released = _impl_.mails_;
  _impl_.mails_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Mails* RoleLoginAck::unsafe_arena_release_mails() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RoleLoginAck.mails)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::Mails* temp = _impl_.mails_;
  _impl_.mails_ = nullptr;
  return temp;
}
inline ::Mails* RoleLoginAck::_internal_mutable_mails() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mails_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Mails>(GetArena());
    _impl_.mails_ = reinterpret_cast<::Mails*>(p);
  }
  return _impl_.mails_;
}
inline ::Mails* RoleLoginAck::mutable_mails() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::Mails* _msg = _internal_mutable_mails();
  // @@protoc_insertion_point(field_mutable:RoleLoginAck.mails)
  return _msg;
}
inline void RoleLoginAck::set_allocated_mails(::Mails* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.mails_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.mails_ = reinterpret_cast<::Mails*>(value);
  // @@protoc_insertion_point(field_set_allocated:RoleLoginAck.mails)
}

// .Mounts mounts = 12;
inline bool RoleLoginAck::has_mounts() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mounts_ != nullptr);
  return value;
}
inline void RoleLoginAck::clear_mounts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mounts_ != nullptr) _impl_.mounts_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline const ::Mounts& RoleLoginAck::_internal_mounts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Mounts* p = _impl_.mounts_;
  return p != nullptr ? *p : reinterpret_cast<const ::Mounts&>(::_Mounts_default_instance_);
}
inline const ::Mounts& RoleLoginAck::mounts() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RoleLoginAck.mounts)
  return _internal_mounts();
}
inline void RoleLoginAck::unsafe_arena_set_allocated_mounts(::Mounts* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mounts_);
  }
  _impl_.mounts_ = reinterpret_cast<::Mounts*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RoleLoginAck.mounts)
}
inline ::Mounts* RoleLoginAck::release_mounts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::Mounts* released = _impl_.mounts_;
  _impl_.mounts_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Mounts* RoleLoginAck::unsafe_arena_release_mounts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RoleLoginAck.mounts)

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::Mounts* temp = _impl_.mounts_;
  _impl_.mounts_ = nullptr;
  return temp;
}
inline ::Mounts* RoleLoginAck::_internal_mutable_mounts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mounts_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Mounts>(GetArena());
    _impl_.mounts_ = reinterpret_cast<::Mounts*>(p);
  }
  return _impl_.mounts_;
}
inline ::Mounts* RoleLoginAck::mutable_mounts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000200u;
  ::Mounts* _msg = _internal_mutable_mounts();
  // @@protoc_insertion_point(field_mutable:RoleLoginAck.mounts)
  return _msg;
}
inline void RoleLoginAck::set_allocated_mounts(::Mounts* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.mounts_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }

  _impl_.mounts_ = reinterpret_cast<::Mounts*>(value);
  // @@protoc_insertion_point(field_set_allocated:RoleLoginAck.mounts)
}

// .Activities activities = 13;
inline bool RoleLoginAck::has_activities() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.activities_ != nullptr);
  return value;
}
inline void RoleLoginAck::clear_activities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.activities_ != nullptr) _impl_.activities_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline const ::Activities& RoleLoginAck::_internal_activities() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Activities* p = _impl_.activities_;
  return p != nullptr ? *p : reinterpret_cast<const ::Activities&>(::_Activities_default_instance_);
}
inline const ::Activities& RoleLoginAck::activities() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RoleLoginAck.activities)
  return _internal_activities();
}
inline void RoleLoginAck::unsafe_arena_set_allocated_activities(::Activities* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.activities_);
  }
  _impl_.activities_ = reinterpret_cast<::Activities*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RoleLoginAck.activities)
}
inline ::Activities* RoleLoginAck::release_activities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::Activities* released = _impl_.activities_;
  _impl_.activities_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Activities* RoleLoginAck::unsafe_arena_release_activities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RoleLoginAck.activities)

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::Activities* temp = _impl_.activities_;
  _impl_.activities_ = nullptr;
  return temp;
}
inline ::Activities* RoleLoginAck::_internal_mutable_activities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.activities_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Activities>(GetArena());
    _impl_.activities_ = reinterpret_cast<::Activities*>(p);
  }
  return _impl_.activities_;
}
inline ::Activities* RoleLoginAck::mutable_activities() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000400u;
  ::Activities* _msg = _internal_mutable_activities();
  // @@protoc_insertion_point(field_mutable:RoleLoginAck.activities)
  return _msg;
}
inline void RoleLoginAck::set_allocated_activities(::Activities* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.activities_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }

  _impl_.activities_ = reinterpret_cast<::Activities*>(value);
  // @@protoc_insertion_point(field_set_allocated:RoleLoginAck.activities)
}

// .Counters counters = 14;
inline bool RoleLoginAck::has_counters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.counters_ != nullptr);
  return value;
}
inline void RoleLoginAck::clear_counters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counters_ != nullptr) _impl_.counters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline const ::Counters& RoleLoginAck::_internal_counters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Counters* p = _impl_.counters_;
  return p != nullptr ? *p : reinterpret_cast<const ::Counters&>(::_Counters_default_instance_);
}
inline const ::Counters& RoleLoginAck::counters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RoleLoginAck.counters)
  return _internal_counters();
}
inline void RoleLoginAck::unsafe_arena_set_allocated_counters(::Counters* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.counters_);
  }
  _impl_.counters_ = reinterpret_cast<::Counters*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RoleLoginAck.counters)
}
inline ::Counters* RoleLoginAck::release_counters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::Counters* released = _impl_.counters_;
  _impl_.counters_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Counters* RoleLoginAck::unsafe_arena_release_counters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RoleLoginAck.counters)

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::Counters* temp = _impl_.counters_;
  _impl_.counters_ = nullptr;
  return temp;
}
inline ::Counters* RoleLoginAck::_internal_mutable_counters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Counters>(GetArena());
    _impl_.counters_ = reinterpret_cast<::Counters*>(p);
  }
  return _impl_.counters_;
}
inline ::Counters* RoleLoginAck::mutable_counters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000800u;
  ::Counters* _msg = _internal_mutable_counters();
  // @@protoc_insertion_point(field_mutable:RoleLoginAck.counters)
  return _msg;
}
inline void RoleLoginAck::set_allocated_counters(::Counters* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.counters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }

  _impl_.counters_ = reinterpret_cast<::Counters*>(value);
  // @@protoc_insertion_point(field_set_allocated:RoleLoginAck.counters)
}

// .Friends friends = 15;
inline bool RoleLoginAck::has_friends() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.friends_ != nullptr);
  return value;
}
inline void RoleLoginAck::clear_friends() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.friends_ != nullptr) _impl_.friends_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline const ::Friends& RoleLoginAck::_internal_friends() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Friends* p = _impl_.friends_;
  return p != nullptr ? *p : reinterpret_cast<const ::Friends&>(::_Friends_default_instance_);
}
inline const ::Friends& RoleLoginAck::friends() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RoleLoginAck.friends)
  return _internal_friends();
}
inline void RoleLoginAck::unsafe_arena_set_allocated_friends(::Friends* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.friends_);
  }
  _impl_.friends_ = reinterpret_cast<::Friends*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RoleLoginAck.friends)
}
inline ::Friends* RoleLoginAck::release_friends() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::Friends* released = _impl_.friends_;
  _impl_.friends_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Friends* RoleLoginAck::unsafe_arena_release_friends() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RoleLoginAck.friends)

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::Friends* temp = _impl_.friends_;
  _impl_.friends_ = nullptr;
  return temp;
}
inline ::Friends* RoleLoginAck::_internal_mutable_friends() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.friends_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Friends>(GetArena());
    _impl_.friends_ = reinterpret_cast<::Friends*>(p);
  }
  return _impl_.friends_;
}
inline ::Friends* RoleLoginAck::mutable_friends() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00001000u;
  ::Friends* _msg = _internal_mutable_friends();
  // @@protoc_insertion_point(field_mutable:RoleLoginAck.friends)
  return _msg;
}
inline void RoleLoginAck::set_allocated_friends(::Friends* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.friends_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }

  _impl_.friends_ = reinterpret_cast<::Friends*>(value);
  // @@protoc_insertion_point(field_set_allocated:RoleLoginAck.friends)
}

// .Skills skills = 16;
inline bool RoleLoginAck::has_skills() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.skills_ != nullptr);
  return value;
}
inline void RoleLoginAck::clear_skills() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.skills_ != nullptr) _impl_.skills_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline const ::Skills& RoleLoginAck::_internal_skills() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Skills* p = _impl_.skills_;
  return p != nullptr ? *p : reinterpret_cast<const ::Skills&>(::_Skills_default_instance_);
}
inline const ::Skills& RoleLoginAck::skills() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RoleLoginAck.skills)
  return _internal_skills();
}
inline void RoleLoginAck::unsafe_arena_set_allocated_skills(::Skills* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.skills_);
  }
  _impl_.skills_ = reinterpret_cast<::Skills*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RoleLoginAck.skills)
}
inline ::Skills* RoleLoginAck::release_skills() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::Skills* released = _impl_.skills_;
  _impl_.skills_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Skills* RoleLoginAck::unsafe_arena_release_skills() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RoleLoginAck.skills)

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::Skills* temp = _impl_.skills_;
  _impl_.skills_ = nullptr;
  return temp;
}
inline ::Skills* RoleLoginAck::_internal_mutable_skills() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.skills_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Skills>(GetArena());
    _impl_.skills_ = reinterpret_cast<::Skills*>(p);
  }
  return _impl_.skills_;
}
inline ::Skills* RoleLoginAck::mutable_skills() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00002000u;
  ::Skills* _msg = _internal_mutable_skills();
  // @@protoc_insertion_point(field_mutable:RoleLoginAck.skills)
  return _msg;
}
inline void RoleLoginAck::set_allocated_skills(::Skills* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.skills_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }

  _impl_.skills_ = reinterpret_cast<::Skills*>(value);
  // @@protoc_insertion_point(field_set_allocated:RoleLoginAck.skills)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::BindType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::BindType>() {
  return ::BindType_descriptor();
}
template <>
struct is_proto_enum<::ItemStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ItemStatus>() {
  return ::ItemStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // login_2eproto_2epb_2eh
